Return-Path: <qemu-devel-bounces+lists+qemu-devel=lfdr.de@nongnu.org>
X-Original-To: lists+qemu-devel@lfdr.de
Delivered-To: lists+qemu-devel@lfdr.de
Received: from lists.gnu.org (lists.gnu.org [209.51.188.17])
	by mail.lfdr.de (Postfix) with ESMTPS id 99F7527B367
	for <lists+qemu-devel@lfdr.de>; Mon, 28 Sep 2020 19:38:12 +0200 (CEST)
Received: from localhost ([::1]:58452 helo=lists1p.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.90_1)
	(envelope-from <qemu-devel-bounces+lists+qemu-devel=lfdr.de@nongnu.org>)
	id 1kMx6J-0006S0-Ka
	for lists+qemu-devel@lfdr.de; Mon, 28 Sep 2020 13:38:11 -0400
Received: from eggs.gnu.org ([2001:470:142:3::10]:48856)
 by lists.gnu.org with esmtps (TLS1.2:ECDHE_RSA_AES_256_GCM_SHA384:256)
 (Exim 4.90_1) (envelope-from <tsimpson@qualcomm.com>)
 id 1kMwxn-0002tm-Ff
 for qemu-devel@nongnu.org; Mon, 28 Sep 2020 13:29:25 -0400
Received: from alexa-out-sd-02.qualcomm.com ([199.106.114.39]:51869)
 by eggs.gnu.org with esmtps (TLS1.2:RSA_AES_256_CBC_SHA1:256)
 (Exim 4.90_1) (envelope-from <tsimpson@qualcomm.com>)
 id 1kMwxj-0007v2-GK
 for qemu-devel@nongnu.org; Mon, 28 Sep 2020 13:29:23 -0400
DKIM-Signature: v=1; a=rsa-sha256; c=simple/simple;
 d=quicinc.com; i=@quicinc.com; q=dns/txt; s=qcdkim;
 t=1601314159; x=1632850159;
 h=from:to:cc:subject:date:message-id:in-reply-to:
 references:mime-version:content-transfer-encoding;
 bh=xNd3C9jbX1LNRjd3k/Y9liTEGUgyYkuP48ehWt/OzFI=;
 b=q9f3JriUre5FRCfGpKFRZ+esp3r/4cJNpkfWvnTL5sjfcb5U+oduZbVt
 oWQd8W2tHokJXVSaFyl+29F+xWTezhI1kpp4L5iqv+0RCbkZPBGU26R96
 tmZRSEj2cK+So/v7OvyHKoz7EFRg6wUDJXYdHlbtCWvs4Nxu4Y7iQRYsG 4=;
Received: from unknown (HELO ironmsg04-sd.qualcomm.com) ([10.53.140.144])
 by alexa-out-sd-02.qualcomm.com with ESMTP; 28 Sep 2020 10:29:05 -0700
X-QCInternal: smtphost
Received: from vu-tsimpson-aus.qualcomm.com (HELO
 vu-tsimpson1-aus.qualcomm.com) ([10.222.150.1])
 by ironmsg04-sd.qualcomm.com with ESMTP; 28 Sep 2020 10:29:04 -0700
Received: by vu-tsimpson1-aus.qualcomm.com (Postfix, from userid 47164)
 id AE919115E; Mon, 28 Sep 2020 12:29:04 -0500 (CDT)
From: Taylor Simpson <tsimpson@quicinc.com>
To: qemu-devel@nongnu.org
Subject: [RFC PATCH v4 23/29] Hexagon (target/hexagon) instruction classes
Date: Mon, 28 Sep 2020 12:28:52 -0500
Message-Id: <1601314138-9930-24-git-send-email-tsimpson@quicinc.com>
X-Mailer: git-send-email 2.7.4
In-Reply-To: <1601314138-9930-1-git-send-email-tsimpson@quicinc.com>
References: <1601314138-9930-1-git-send-email-tsimpson@quicinc.com>
MIME-Version: 1.0
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Received-SPF: pass client-ip=199.106.114.39;
 envelope-from=tsimpson@qualcomm.com; helo=alexa-out-sd-02.qualcomm.com
X-detected-operating-system: by eggs.gnu.org: First seen = 2020/09/28 13:29:03
X-ACL-Warn: Detected OS   = FreeBSD 9.x or newer [fuzzy]
X-Spam_score_int: -40
X-Spam_score: -4.1
X-Spam_bar: ----
X-Spam_report: (-4.1 / 5.0 requ) BAYES_00=-1.9, DKIM_SIGNED=0.1,
 DKIM_VALID=-0.1, DKIM_VALID_AU=-0.1, HEADER_FROM_DIFFERENT_DOMAINS=0.199,
 RCVD_IN_DNSWL_MED=-2.3, SPF_HELO_NONE=0.001,
 SPF_PASS=-0.001 autolearn=ham autolearn_force=no
X-Spam_action: no action
X-BeenThere: qemu-devel@nongnu.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: <qemu-devel.nongnu.org>
List-Unsubscribe: <https://lists.nongnu.org/mailman/options/qemu-devel>,
 <mailto:qemu-devel-request@nongnu.org?subject=unsubscribe>
List-Archive: <https://lists.nongnu.org/archive/html/qemu-devel>
List-Post: <mailto:qemu-devel@nongnu.org>
List-Help: <mailto:qemu-devel-request@nongnu.org?subject=help>
List-Subscribe: <https://lists.nongnu.org/mailman/listinfo/qemu-devel>,
 <mailto:qemu-devel-request@nongnu.org?subject=subscribe>
Cc: ale@rev.ng, riku.voipio@iki.fi, richard.henderson@linaro.org,
 laurent@vivier.eu, tsimpson@quicinc.com, philmd@redhat.com,
 aleksandar.m.mail@gmail.com
Errors-To: qemu-devel-bounces+lists+qemu-devel=lfdr.de@nongnu.org
Sender: "Qemu-devel" <qemu-devel-bounces+lists+qemu-devel=lfdr.de@nongnu.org>

RGV0ZXJtaW5lIGxlZ2FsIFZMSVcgc2xvdHMgZm9yIGVhY2ggaW5zdHJ1Y3Rpb24KClNpZ25lZC1v
ZmYtYnk6IFRheWxvciBTaW1wc29uIDx0c2ltcHNvbkBxdWljaW5jLmNvbT4KLS0tCiB0YXJnZXQv
aGV4YWdvbi9pY2xhc3MuaCAgICAgICAgICAgIHwgNDAgKysrKysrKysrKysrKysrKysrKwogdGFy
Z2V0L2hleGFnb24vaWNsYXNzLmMgICAgICAgICAgICB8IDgwICsrKysrKysrKysrKysrKysrKysr
KysrKysrKysrKysrKysrKysrCiB0YXJnZXQvaGV4YWdvbi9pbXBvcnRlZC9pY2xhc3MuZGVmIHwg
NTIgKysrKysrKysrKysrKysrKysrKysrKysrKwogMyBmaWxlcyBjaGFuZ2VkLCAxNzIgaW5zZXJ0
aW9ucygrKQogY3JlYXRlIG1vZGUgMTAwNjQ0IHRhcmdldC9oZXhhZ29uL2ljbGFzcy5oCiBjcmVh
dGUgbW9kZSAxMDA2NDQgdGFyZ2V0L2hleGFnb24vaWNsYXNzLmMKIGNyZWF0ZSBtb2RlIDEwMDY0
NCB0YXJnZXQvaGV4YWdvbi9pbXBvcnRlZC9pY2xhc3MuZGVmCgpkaWZmIC0tZ2l0IGEvdGFyZ2V0
L2hleGFnb24vaWNsYXNzLmggYi90YXJnZXQvaGV4YWdvbi9pY2xhc3MuaApuZXcgZmlsZSBtb2Rl
IDEwMDY0NAppbmRleCAwMDAwMDAwLi45OTk5MTQ4Ci0tLSAvZGV2L251bGwKKysrIGIvdGFyZ2V0
L2hleGFnb24vaWNsYXNzLmgKQEAgLTAsMCArMSw0MCBAQAorLyoKKyAqICBDb3B5cmlnaHQoYykg
MjAxOS0yMDIwIFF1YWxjb21tIElubm92YXRpb24gQ2VudGVyLCBJbmMuIEFsbCBSaWdodHMgUmVz
ZXJ2ZWQuCisgKgorICogIFRoaXMgcHJvZ3JhbSBpcyBmcmVlIHNvZnR3YXJlOyB5b3UgY2FuIHJl
ZGlzdHJpYnV0ZSBpdCBhbmQvb3IgbW9kaWZ5CisgKiAgaXQgdW5kZXIgdGhlIHRlcm1zIG9mIHRo
ZSBHTlUgR2VuZXJhbCBQdWJsaWMgTGljZW5zZSBhcyBwdWJsaXNoZWQgYnkKKyAqICB0aGUgRnJl
ZSBTb2Z0d2FyZSBGb3VuZGF0aW9uOyBlaXRoZXIgdmVyc2lvbiAyIG9mIHRoZSBMaWNlbnNlLCBv
cgorICogIChhdCB5b3VyIG9wdGlvbikgYW55IGxhdGVyIHZlcnNpb24uCisgKgorICogIFRoaXMg
cHJvZ3JhbSBpcyBkaXN0cmlidXRlZCBpbiB0aGUgaG9wZSB0aGF0IGl0IHdpbGwgYmUgdXNlZnVs
LAorICogIGJ1dCBXSVRIT1VUIEFOWSBXQVJSQU5UWTsgd2l0aG91dCBldmVuIHRoZSBpbXBsaWVk
IHdhcnJhbnR5IG9mCisgKiAgTUVSQ0hBTlRBQklMSVRZIG9yIEZJVE5FU1MgRk9SIEEgUEFSVElD
VUxBUiBQVVJQT1NFLiAgU2VlIHRoZQorICogIEdOVSBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlIGZv
ciBtb3JlIGRldGFpbHMuCisgKgorICogIFlvdSBzaG91bGQgaGF2ZSByZWNlaXZlZCBhIGNvcHkg
b2YgdGhlIEdOVSBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlCisgKiAgYWxvbmcgd2l0aCB0aGlzIHBy
b2dyYW07IGlmIG5vdCwgc2VlIDxodHRwOi8vd3d3LmdudS5vcmcvbGljZW5zZXMvPi4KKyAqLwor
CisjaWZuZGVmIEhFWEFHT05fSUNMQVNTX0gKKyNkZWZpbmUgSEVYQUdPTl9JQ0xBU1NfSAorCisj
aW5jbHVkZSAib3Bjb2Rlcy5oIgorCisjZGVmaW5lIElDTEFTU19GUk9NX1RZUEUoVFlQRSkgSUNM
QVNTXyMjVFlQRQorCitlbnVtIHsKKworI2RlZmluZSBERUZfUFBfSUNMQVNTMzIoVFlQRSwgU0xP
VFMsIFVOSVRTKSAgICBJQ0xBU1NfRlJPTV9UWVBFKFRZUEUpLAorI2RlZmluZSBERUZfRUVfSUNM
QVNTMzIoVFlQRSwgU0xPVFMsIFVOSVRTKSAgICBJQ0xBU1NfRlJPTV9UWVBFKFRZUEUpLAorI2lu
Y2x1ZGUgImltcG9ydGVkL2ljbGFzcy5kZWYiCisjdW5kZWYgREVGX1BQX0lDTEFTUzMyCisjdW5k
ZWYgREVGX0VFX0lDTEFTUzMyCisKKyAgICBJQ0xBU1NfRlJPTV9UWVBFKENPUFJPQ19WWCksCisg
ICAgSUNMQVNTX0ZST01fVFlQRShDT1BST0NfVk1FTSksCisgICAgTlVNX0lDTEFTU0VTCit9Owor
CitleHRlcm4gY29uc3QgY2hhciAqZmluZF9pY2xhc3Nfc2xvdHMob3Bjb2RlX3Qgb3Bjb2RlLCBp
bnQgaXR5cGUpOworCisjZW5kaWYKZGlmZiAtLWdpdCBhL3RhcmdldC9oZXhhZ29uL2ljbGFzcy5j
IGIvdGFyZ2V0L2hleGFnb24vaWNsYXNzLmMKbmV3IGZpbGUgbW9kZSAxMDA2NDQKaW5kZXggMDAw
MDAwMC4uMmYxMzhhOAotLS0gL2Rldi9udWxsCisrKyBiL3RhcmdldC9oZXhhZ29uL2ljbGFzcy5j
CkBAIC0wLDAgKzEsODAgQEAKKy8qCisgKiAgQ29weXJpZ2h0KGMpIDIwMTktMjAyMCBRdWFsY29t
bSBJbm5vdmF0aW9uIENlbnRlciwgSW5jLiBBbGwgUmlnaHRzIFJlc2VydmVkLgorICoKKyAqICBU
aGlzIHByb2dyYW0gaXMgZnJlZSBzb2Z0d2FyZTsgeW91IGNhbiByZWRpc3RyaWJ1dGUgaXQgYW5k
L29yIG1vZGlmeQorICogIGl0IHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgR05VIEdlbmVyYWwgUHVi
bGljIExpY2Vuc2UgYXMgcHVibGlzaGVkIGJ5CisgKiAgdGhlIEZyZWUgU29mdHdhcmUgRm91bmRh
dGlvbjsgZWl0aGVyIHZlcnNpb24gMiBvZiB0aGUgTGljZW5zZSwgb3IKKyAqICAoYXQgeW91ciBv
cHRpb24pIGFueSBsYXRlciB2ZXJzaW9uLgorICoKKyAqICBUaGlzIHByb2dyYW0gaXMgZGlzdHJp
YnV0ZWQgaW4gdGhlIGhvcGUgdGhhdCBpdCB3aWxsIGJlIHVzZWZ1bCwKKyAqICBidXQgV0lUSE9V
VCBBTlkgV0FSUkFOVFk7IHdpdGhvdXQgZXZlbiB0aGUgaW1wbGllZCB3YXJyYW50eSBvZgorICog
IE1FUkNIQU5UQUJJTElUWSBvciBGSVRORVNTIEZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRS4gIFNl
ZSB0aGUKKyAqICBHTlUgR2VuZXJhbCBQdWJsaWMgTGljZW5zZSBmb3IgbW9yZSBkZXRhaWxzLgor
ICoKKyAqICBZb3Ugc2hvdWxkIGhhdmUgcmVjZWl2ZWQgYSBjb3B5IG9mIHRoZSBHTlUgR2VuZXJh
bCBQdWJsaWMgTGljZW5zZQorICogIGFsb25nIHdpdGggdGhpcyBwcm9ncmFtOyBpZiBub3QsIHNl
ZSA8aHR0cDovL3d3dy5nbnUub3JnL2xpY2Vuc2VzLz4uCisgKi8KKworI2luY2x1ZGUgInFlbXUv
b3NkZXAuaCIKKyNpbmNsdWRlICJpY2xhc3MuaCIKKwordHlwZWRlZiBzdHJ1Y3QgeworICAgIGNv
bnN0IGNoYXIgKiBjb25zdCBzbG90czsKK30gaWNsYXNzX2luZm9fdDsKKworc3RhdGljIGNvbnN0
IGljbGFzc19pbmZvX3QgaWNsYXNzX2luZm9bXSA9IHsKKworI2RlZmluZSBERUZfUFBfSUNMQVNT
MzIoVFlQRSwgU0xPVFMsIFVOSVRTKSBcCisgICAgW0lDTEFTU19GUk9NX1RZUEUoVFlQRSldID0g
eyAuc2xvdHMgPSAjU0xPVFMgfSwKKyNkZWZpbmUgREVGX0VFX0lDTEFTUzMyKFRZUEUsIFNMT1RT
LCBVTklUUykgXAorICAgIFtJQ0xBU1NfRlJPTV9UWVBFKFRZUEUpXSA9IHsgLnNsb3RzID0gI1NM
T1RTIH0sCisjaW5jbHVkZSAiaW1wb3J0ZWQvaWNsYXNzLmRlZiIKKyN1bmRlZiBERUZfUFBfSUNM
QVNTMzIKKyN1bmRlZiBERUZfRUVfSUNMQVNTMzIKKworICAgIHswfQorfTsKKworY29uc3QgY2hh
ciAqZmluZF9pY2xhc3Nfc2xvdHMob3Bjb2RlX3Qgb3Bjb2RlLCBpbnQgaXR5cGUpCit7CisgICAg
LyogVGhlcmUgYXJlIHNvbWUgZXhjZXB0aW9ucyB0byB3aGF0IHRoZSBpY2xhc3MgZGljdGF0ZXMg
Ki8KKyAgICBpZiAoR0VUX0FUVFJJQihvcGNvZGUsIEFfSUNPUCkpIHsKKyAgICAgICAgcmV0dXJu
ICIyIjsKKyAgICB9IGVsc2UgaWYgKEdFVF9BVFRSSUIob3Bjb2RlLCBBX1JFU1RSSUNUX1NMT1Qw
T05MWSkpIHsKKyAgICAgICAgcmV0dXJuICIwIjsKKyAgICB9IGVsc2UgaWYgKEdFVF9BVFRSSUIo
b3Bjb2RlLCBBX1JFU1RSSUNUX1NMT1QxT05MWSkpIHsKKyAgICAgICAgcmV0dXJuICIxIjsKKyAg
ICB9IGVsc2UgaWYgKEdFVF9BVFRSSUIob3Bjb2RlLCBBX1JFU1RSSUNUX1NMT1QyT05MWSkpIHsK
KyAgICAgICAgcmV0dXJuICIyIjsKKyAgICB9IGVsc2UgaWYgKEdFVF9BVFRSSUIob3Bjb2RlLCBB
X1JFU1RSSUNUX1NMT1QzT05MWSkpIHsKKyAgICAgICAgcmV0dXJuICIzIjsKKyAgICB9IGVsc2Ug
aWYgKEdFVF9BVFRSSUIob3Bjb2RlLCBBX0NPRikgJiYKKyAgICAgICAgICAgICAgIEdFVF9BVFRS
SUIob3Bjb2RlLCBBX0lORElSRUNUKSAmJgorICAgICAgICAgICAgICAgIUdFVF9BVFRSSUIob3Bj
b2RlLCBBX01FTUxJS0UpICYmCisgICAgICAgICAgICAgICAhR0VUX0FUVFJJQihvcGNvZGUsIEFf
TUVNTElLRV9QQUNLRVRfUlVMRVMpKSB7CisgICAgICAgIHJldHVybiAiMiI7CisgICAgfSBlbHNl
IGlmIChHRVRfQVRUUklCKG9wY29kZSwgQV9SRVNUUklDVF9OT1NMT1QxKSkgeworICAgICAgICBy
ZXR1cm4gIjAiOworICAgIH0gZWxzZSBpZiAoKG9wY29kZSA9PSBKMl90cmFwMCkgfHwKKyAgICAg
ICAgICAgICAgIChvcGNvZGUgPT0gWTJfaXN5bmMpIHx8CisgICAgICAgICAgICAgICAob3Bjb2Rl
ID09IEo0X2hpbnRqdW1wcikpIHsKKyAgICAgICAgcmV0dXJuICIyIjsKKyAgICB9IGVsc2UgaWYg
KChpdHlwZSA9PSBJQ0xBU1NfVjJMRFNUKSAmJiAoR0VUX0FUVFJJQihvcGNvZGUsIEFfU1RPUkUp
KSkgeworICAgICAgICByZXR1cm4gIjAxIjsKKyAgICB9IGVsc2UgaWYgKChpdHlwZSA9PSBJQ0xB
U1NfVjJMRFNUKSAmJiAoIUdFVF9BVFRSSUIob3Bjb2RlLCBBX1NUT1JFKSkpIHsKKyAgICAgICAg
cmV0dXJuICIwMSI7CisgICAgfSBlbHNlIGlmIChHRVRfQVRUUklCKG9wY29kZSwgQV9DUlNMT1Qy
MykpIHsKKyAgICAgICAgcmV0dXJuICIyMyI7CisgICAgfSBlbHNlIGlmIChHRVRfQVRUUklCKG9w
Y29kZSwgQV9SRVNUUklDVF9QUkVGRVJTTE9UMCkpIHsKKyAgICAgICAgcmV0dXJuICIwIjsKKyAg
ICB9IGVsc2UgaWYgKEdFVF9BVFRSSUIob3Bjb2RlLCBBX1NVQklOU04pKSB7CisgICAgICAgIHJl
dHVybiAiMDEiOworICAgIH0gZWxzZSBpZiAoR0VUX0FUVFJJQihvcGNvZGUsIEFfQ0FMTCkpIHsK
KyAgICAgICAgcmV0dXJuICIyMyI7CisgICAgfSBlbHNlIGlmICgob3Bjb2RlID09IEo0X2p1bXBz
ZXRpKSB8fCAob3Bjb2RlID09IEo0X2p1bXBzZXRyKSkgeworICAgICAgICByZXR1cm4gIjIzIjsK
KyAgICB9IGVsc2UgeworICAgICAgICByZXR1cm4gaWNsYXNzX2luZm9baXR5cGVdLnNsb3RzOwor
ICAgIH0KK30KKwpkaWZmIC0tZ2l0IGEvdGFyZ2V0L2hleGFnb24vaW1wb3J0ZWQvaWNsYXNzLmRl
ZiBiL3RhcmdldC9oZXhhZ29uL2ltcG9ydGVkL2ljbGFzcy5kZWYKbmV3IGZpbGUgbW9kZSAxMDA2
NDQKaW5kZXggMDAwMDAwMC4uNGVmNzI1ZgotLS0gL2Rldi9udWxsCisrKyBiL3RhcmdldC9oZXhh
Z29uL2ltcG9ydGVkL2ljbGFzcy5kZWYKQEAgLTAsMCArMSw1MiBAQAorLyoKKyAqICBDb3B5cmln
aHQoYykgMjAxOS0yMDIwIFF1YWxjb21tIElubm92YXRpb24gQ2VudGVyLCBJbmMuIEFsbCBSaWdo
dHMgUmVzZXJ2ZWQuCisgKgorICogIFRoaXMgcHJvZ3JhbSBpcyBmcmVlIHNvZnR3YXJlOyB5b3Ug
Y2FuIHJlZGlzdHJpYnV0ZSBpdCBhbmQvb3IgbW9kaWZ5CisgKiAgaXQgdW5kZXIgdGhlIHRlcm1z
IG9mIHRoZSBHTlUgR2VuZXJhbCBQdWJsaWMgTGljZW5zZSBhcyBwdWJsaXNoZWQgYnkKKyAqICB0
aGUgRnJlZSBTb2Z0d2FyZSBGb3VuZGF0aW9uOyBlaXRoZXIgdmVyc2lvbiAyIG9mIHRoZSBMaWNl
bnNlLCBvcgorICogIChhdCB5b3VyIG9wdGlvbikgYW55IGxhdGVyIHZlcnNpb24uCisgKgorICog
IFRoaXMgcHJvZ3JhbSBpcyBkaXN0cmlidXRlZCBpbiB0aGUgaG9wZSB0aGF0IGl0IHdpbGwgYmUg
dXNlZnVsLAorICogIGJ1dCBXSVRIT1VUIEFOWSBXQVJSQU5UWTsgd2l0aG91dCBldmVuIHRoZSBp
bXBsaWVkIHdhcnJhbnR5IG9mCisgKiAgTUVSQ0hBTlRBQklMSVRZIG9yIEZJVE5FU1MgRk9SIEEg
UEFSVElDVUxBUiBQVVJQT1NFLiAgU2VlIHRoZQorICogIEdOVSBHZW5lcmFsIFB1YmxpYyBMaWNl
bnNlIGZvciBtb3JlIGRldGFpbHMuCisgKgorICogIFlvdSBzaG91bGQgaGF2ZSByZWNlaXZlZCBh
IGNvcHkgb2YgdGhlIEdOVSBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlCisgKiAgYWxvbmcgd2l0aCB0
aGlzIHByb2dyYW07IGlmIG5vdCwgc2VlIDxodHRwOi8vd3d3LmdudS5vcmcvbGljZW5zZXMvPi4K
KyAqLworCisvKiBERUZfKihUWVBFLFNMT1RTLFVOSVRTKSAqLworREVGX1BQX0lDTEFTUzMyKEVY
VEVOREVSLDAxMjMsTERTVHxTVU5JVHxNVU5JVCkgLyogMCAqLworREVGX1BQX0lDTEFTUzMyKENK
LDAxMjMsQ1RSTEZMT1cpIC8qIDEgKi8KK0RFRl9QUF9JQ0xBU1MzMihOQ0osMDEsTERTVHxDVFJM
RkxPVykgLyogMiAqLworREVGX1BQX0lDTEFTUzMyKFY0TERTVCwwMSxMRFNUKSAvKiAzICovCitE
RUZfUFBfSUNMQVNTMzIoVjJMRFNULDAxLExEU1QpIC8qIDQgKi8KK0RFRl9QUF9JQ0xBU1MzMihK
LDAxMjMsQ1RSTEZMT1cpICAvKiA1ICovCitERUZfUFBfSUNMQVNTMzIoQ1IsMyxTVU5JVCkgICAg
IC8qIDYgKi8KK0RFRl9QUF9JQ0xBU1MzMihBTFUzMl8yb3AsMDEyMyxMRFNUfFNVTklUfE1VTklU
KSAvKiA3ICovCitERUZfUFBfSUNMQVNTMzIoU18yb3AsMjMsU1VOSVR8TVVOSVQpICAgICAgICAg
ICAgICAgLyogOCAqLworREVGX1BQX0lDTEFTUzMyKExELDAxLExEU1QpICAgICAgICAgICAgICAg
ICAgICAvKiA5ICovCitERUZfUFBfSUNMQVNTMzIoU1QsMDEsTERTVCkgICAgICAgICAgICAgICAg
ICAgICAgICAvKiAxMCAqLworREVGX1BQX0lDTEFTUzMyKEFMVTMyX0FEREksMDEyMyxMRFNUfFNV
TklUfE1VTklUKSAvKiAxMSAqLworREVGX1BQX0lDTEFTUzMyKFNfM29wLDIzLFNVTklUfE1VTklU
KSAgICAgICAgICAgICAgIC8qIDEyICovCitERUZfUFBfSUNMQVNTMzIoQUxVNjQsMjMsU1VOSVR8
TVVOSVQpICAgICAgICAgICAgIC8qIDEzICovCitERUZfUFBfSUNMQVNTMzIoTSwyMyxTVU5JVHxN
VU5JVCkgICAgICAgICAgICAgICAgIC8qIDE0ICovCitERUZfUFBfSUNMQVNTMzIoQUxVMzJfM29w
LDAxMjMsTERTVHxTVU5JVHxNVU5JVCkgLyogMTUgKi8KKworREVGX0VFX0lDTEFTUzMyKEVFMCww
MSxJTlZBTElEKSAvKiAwICovCitERUZfRUVfSUNMQVNTMzIoRUUxLDAxLElOVkFMSUQpIC8qIDEg
Ki8KK0RFRl9FRV9JQ0xBU1MzMihFRTIsMDEsSU5WQUxJRCkgLyogMiAqLworREVGX0VFX0lDTEFT
UzMyKEVFMywwMSxJTlZBTElEKSAvKiAzICovCitERUZfRUVfSUNMQVNTMzIoRUU0LDAxLElOVkFM
SUQpIC8qIDQgKi8KK0RFRl9FRV9JQ0xBU1MzMihFRTUsMDEsSU5WQUxJRCkgLyogNSAqLworREVG
X0VFX0lDTEFTUzMyKEVFNiwwMSxJTlZBTElEKSAvKiA2ICovCitERUZfRUVfSUNMQVNTMzIoRUU3
LDAxLElOVkFMSUQpIC8qIDcgKi8KK0RFRl9FRV9JQ0xBU1MzMihFRTgsMDEsSU5WQUxJRCkgLyog
OCAqLworREVGX0VFX0lDTEFTUzMyKEVFOSwwMSxJTlZBTElEKSAvKiA5ICovCitERUZfRUVfSUNM
QVNTMzIoRUVBLDAxLElOVkFMSUQpIC8qIDEwICovCitERUZfRUVfSUNMQVNTMzIoRUVCLDAxLElO
VkFMSUQpIC8qIDExICovCitERUZfRUVfSUNMQVNTMzIoRUVDLDAxLElOVkFMSUQpIC8qIDEyICov
CitERUZfRUVfSUNMQVNTMzIoRUVELDAxLElOVkFMSUQpIC8qIDEzICovCitERUZfRUVfSUNMQVNT
MzIoRUVFLDAxLElOVkFMSUQpIC8qIDE0ICovCitERUZfRUVfSUNMQVNTMzIoRUVGLDAxLElOVkFM
SUQpIC8qIDE1ICovCisKLS0gCjIuNy40Cgo=

