Return-Path: <qemu-devel-bounces+lists+qemu-devel=lfdr.de@nongnu.org>
X-Original-To: lists+qemu-devel@lfdr.de
Delivered-To: lists+qemu-devel@lfdr.de
Received: from lists.gnu.org (lists.gnu.org [209.51.188.17])
	by mail.lfdr.de (Postfix) with ESMTPS id 3B97C263F85
	for <lists+qemu-devel@lfdr.de>; Thu, 10 Sep 2020 10:17:37 +0200 (CEST)
Received: from localhost ([::1]:37194 helo=lists1p.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.90_1)
	(envelope-from <qemu-devel-bounces+lists+qemu-devel=lfdr.de@nongnu.org>)
	id 1kGHlw-0001SO-Ag
	for lists+qemu-devel@lfdr.de; Thu, 10 Sep 2020 04:17:36 -0400
Received: from eggs.gnu.org ([2001:470:142:3::10]:49424)
 by lists.gnu.org with esmtps (TLS1.2:ECDHE_RSA_AES_256_GCM_SHA384:256)
 (Exim 4.90_1) (envelope-from <stefanha@redhat.com>)
 id 1kGHgu-0003Qc-NO
 for qemu-devel@nongnu.org; Thu, 10 Sep 2020 04:12:24 -0400
Received: from us-smtp-delivery-124.mimecast.com ([216.205.24.124]:39647)
 by eggs.gnu.org with esmtps (TLS1.2:ECDHE_RSA_AES_256_CBC_SHA1:256)
 (Exim 4.90_1) (envelope-from <stefanha@redhat.com>)
 id 1kGHgq-00035A-Ir
 for qemu-devel@nongnu.org; Thu, 10 Sep 2020 04:12:24 -0400
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=redhat.com;
 s=mimecast20190719; t=1599725539;
 h=from:from:reply-to:subject:subject:date:date:message-id:message-id:
 to:to:cc:cc:mime-version:mime-version:content-type:content-type:
 content-transfer-encoding:content-transfer-encoding:
 in-reply-to:in-reply-to:references:references;
 bh=k2prxlHFuPdSRBr2HhJj2JCGk22jban+H8dcOA5x+iI=;
 b=SYhlc9MHfp1s+4yI3yDA6449+vbAPPa1usfR8GYzXZKFvkkn6r1Z1x/U8MrAQSnZO3oOKJ
 PV4LfrjUF+3ZiKfxqULIx8d/bKNlYWDIOg19G36srJpeLA3iwGhXA8Lv9gRUmBbjiG7bIk
 j1vVwM85AMVS9a4ineJo99g+HNQu6Xc=
Received: from mimecast-mx01.redhat.com (mimecast-mx01.redhat.com
 [209.132.183.4]) (Using TLS) by relay.mimecast.com with ESMTP id
 us-mta-253-prq5LI4mMHa30WKsoDmhgQ-1; Thu, 10 Sep 2020 04:12:14 -0400
X-MC-Unique: prq5LI4mMHa30WKsoDmhgQ-1
Received: from smtp.corp.redhat.com (int-mx03.intmail.prod.int.phx2.redhat.com
 [10.5.11.13])
 (using TLSv1.2 with cipher AECDH-AES256-SHA (256/256 bits))
 (No client certificate requested)
 by mimecast-mx01.redhat.com (Postfix) with ESMTPS id 6AB721007469;
 Thu, 10 Sep 2020 08:12:13 +0000 (UTC)
Received: from localhost (ovpn-112-28.ams2.redhat.com [10.36.112.28])
 by smtp.corp.redhat.com (Postfix) with ESMTP id A5E477E46E;
 Thu, 10 Sep 2020 08:12:12 +0000 (UTC)
From: Stefan Hajnoczi <stefanha@redhat.com>
To: qemu-devel@nongnu.org
Subject: [PULL v2 8/8] trace-events: Fix attribution of trace points to source
Date: Thu, 10 Sep 2020 09:10:49 +0100
Message-Id: <20200910081049.38393-9-stefanha@redhat.com>
In-Reply-To: <20200910081049.38393-1-stefanha@redhat.com>
References: <20200910081049.38393-1-stefanha@redhat.com>
MIME-Version: 1.0
X-Scanned-By: MIMEDefang 2.79 on 10.5.11.13
Authentication-Results: relay.mimecast.com;
 auth=pass smtp.auth=CUSA124A263 smtp.mailfrom=stefanha@redhat.com
X-Mimecast-Spam-Score: 0.004
X-Mimecast-Originator: redhat.com
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: base64
Received-SPF: pass client-ip=216.205.24.124; envelope-from=stefanha@redhat.com;
 helo=us-smtp-delivery-124.mimecast.com
X-detected-operating-system: by eggs.gnu.org: First seen = 2020/09/10 00:49:43
X-ACL-Warn: Detected OS   = Linux 2.2.x-3.x [generic] [fuzzy]
X-Spam_score_int: -20
X-Spam_score: -2.1
X-Spam_bar: --
X-Spam_report: (-2.1 / 5.0 requ) BAYES_00=-1.9, DKIMWL_WL_HIGH=-0.001,
 DKIM_SIGNED=0.1, DKIM_VALID=-0.1, DKIM_VALID_AU=-0.1, DKIM_VALID_EF=-0.1,
 RCVD_IN_DNSWL_NONE=-0.0001, RCVD_IN_MSPIKE_H5=0.001, RCVD_IN_MSPIKE_WL=0.001,
 SPF_HELO_NONE=0.001, SPF_PASS=-0.001 autolearn=ham autolearn_force=no
X-Spam_action: no action
X-BeenThere: qemu-devel@nongnu.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: <qemu-devel.nongnu.org>
List-Unsubscribe: <https://lists.nongnu.org/mailman/options/qemu-devel>,
 <mailto:qemu-devel-request@nongnu.org?subject=unsubscribe>
List-Archive: <https://lists.nongnu.org/archive/html/qemu-devel>
List-Post: <mailto:qemu-devel@nongnu.org>
List-Help: <mailto:qemu-devel-request@nongnu.org?subject=help>
List-Subscribe: <https://lists.nongnu.org/mailman/listinfo/qemu-devel>,
 <mailto:qemu-devel-request@nongnu.org?subject=subscribe>
Cc: Peter Maydell <peter.maydell@linaro.org>
Errors-To: qemu-devel-bounces+lists+qemu-devel=lfdr.de@nongnu.org
Sender: "Qemu-devel" <qemu-devel-bounces+lists+qemu-devel=lfdr.de@nongnu.org>

RnJvbTogTWFya3VzIEFybWJydXN0ZXIgPGFybWJydUByZWRoYXQuY29tPgoKU29tZSB0cmFjZSBw
b2ludHMgYXJlIGF0dHJpYnV0ZWQgdG8gdGhlIHdyb25nIHNvdXJjZSBmaWxlLiAgSGFwcGVucwp3
aGVuIHdlIG5lZ2xlY3QgdG8gdXBkYXRlIHRyYWNlLWV2ZW50cyBmb3IgY29kZSBtb3Rpb24sIG9y
IGFkZCBldmVudHMKaW4gdGhlIHdyb25nIHBsYWNlLCBvciBtaXNzcGVsbCB0aGUgZmlsZSBuYW1l
LgoKQ2xlYW4gdXAgd2l0aCBoZWxwIG9mIHNjcmlwdHMvY2xlYW51cC10cmFjZS1ldmVudHMucGwu
ICBGdW5uaWVzCnJlcXVpcmluZyBtYW51YWwgcG9zdC1wcm9jZXNzaW5nOgoKKiBhY2NlbC90Y2cv
Y3B1dGxiLmMgdHJhY2UgcG9pbnRzIGFyZSBpbiB0cmFjZS1ldmVudHMuCgoqIGJsb2NrLmMgYW5k
IGJsb2NrZGV2LmMgdHJhY2UgcG9pbnRzIGFyZSBpbiBibG9jay90cmFjZS1ldmVudHMuCgoqIGh3
L2Jsb2NrL252bWUuYyB1c2VzIHRoZSBwcmVwcm9jZXNzb3IgdG8gaGlkZSBpdHMgdHJhY2UgcG9p
bnQgdXNlCiAgZnJvbSBjbGVhbnVwLXRyYWNlLWV2ZW50cy5wbC4KCiogaHcvdHBtL3RwbV9zcGFw
ci5jIHVzZXMgcHNldWRvIHRyYWNlIHBvaW50IHRwbV9zcGFwcl9zaG93X2J1ZmZlciB0bwogIGd1
YXJkIGRlYnVnIGNvZGUuCgoqIGluY2x1ZGUvaHcveGVuL3hlbl9jb21tb24uaCB0cmFjZSBwb2lu
dHMgYXJlIGluIGh3L3hlbi90cmFjZS1ldmVudHMuCgoqIGxpbnV4LXVzZXIvdHJhY2UtZXZlbnRz
IGFiYnJldmlhdGVzIGEgdGVkaW91cyBsaXN0IG9mIGZpbGVuYW1lcyB0bwogICovc2lnbmFsLmMu
CgoqIG5ldC9jb2xvLWNvbXBhcmUgYW5kIG5ldC9maWx0ZXItcmV3cml0ZXIuYyB1c2UgcHNldWRv
IHRyYWNlIHBvaW50cwogIGNvbG9fY29tcGFyZV9taXNjb21wYXJlIGFuZCBjb2xvX2ZpbHRlcl9y
ZXdyaXRlcl9kZWJ1ZyB0byBndWFyZAogIGRlYnVnIGNvZGUuCgpTaWduZWQtb2ZmLWJ5OiBNYXJr
dXMgQXJtYnJ1c3RlciA8YXJtYnJ1QHJlZGhhdC5jb20+ClJldmlld2VkLWJ5OiBQaGlsaXBwZSBN
YXRoaWV1LURhdWTDqSA8cGhpbG1kQHJlZGhhdC5jb20+Ck1lc3NhZ2UtaWQ6IDIwMjAwODA2MTQx
MzM0LjM2NDYzMDItNS1hcm1icnVAcmVkaGF0LmNvbQpTaWduZWQtb2ZmLWJ5OiBTdGVmYW4gSGFq
bm9jemkgPHN0ZWZhbmhhQHJlZGhhdC5jb20+Ci0tLQogYmxvY2svdHJhY2UtZXZlbnRzICAgICAg
ICB8ICA1ICsrLS0tCiBody9ibG9jay90cmFjZS1ldmVudHMgICAgIHwgIDIgKy0KIGh3L2NoYXIv
dHJhY2UtZXZlbnRzICAgICAgfCAgMiArLQogaHcvZGlzcGxheS90cmFjZS1ldmVudHMgICB8ICA0
ICsrKy0KIGh3L2h5cGVydi90cmFjZS1ldmVudHMgICAgfCAgMiArLQogaHcvbWlwcy90cmFjZS1l
dmVudHMgICAgICB8ICAyICstCiBody9taXNjL3RyYWNlLWV2ZW50cyAgICAgIHwgIDggKysrKyst
LS0KIGh3L3BwYy90cmFjZS1ldmVudHMgICAgICAgfCAgNiArKy0tLS0KIGh3L3Jpc2N2L3RyYWNl
LWV2ZW50cyAgICAgfCAgMiArLQogaHcvcnRjL3RyYWNlLWV2ZW50cyAgICAgICB8ICAyICstCiBo
dy90cG0vdHJhY2UtZXZlbnRzICAgICAgIHwgIDIgKy0KIGh3L3VzYi90cmFjZS1ldmVudHMgICAg
ICAgfCAgNCArKystCiBody92ZmlvL3RyYWNlLWV2ZW50cyAgICAgIHwgMTAgKysrKysrLS0tLQog
aHcvdmlydGlvL3RyYWNlLWV2ZW50cyAgICB8ICAyICstCiBtaWdyYXRpb24vdHJhY2UtZXZlbnRz
ICAgIHwgMzYgKysrKysrKysrKysrKysrKysrKy0tLS0tLS0tLS0tLS0tLS0tCiB0YXJnZXQvcmlz
Y3YvdHJhY2UtZXZlbnRzIHwgIDIgKy0KIHRyYWNlLWV2ZW50cyAgICAgICAgICAgICAgfCAgNSAr
KystLQogdWkvdHJhY2UtZXZlbnRzICAgICAgICAgICB8ICA2ICsrKy0tLQogdXRpbC90cmFjZS1l
dmVudHMgICAgICAgICB8ICA0ICsrKy0KIDE5IGZpbGVzIGNoYW5nZWQsIDU4IGluc2VydGlvbnMo
KyksIDQ4IGRlbGV0aW9ucygtKQoKZGlmZiAtLWdpdCBhL2Jsb2NrL3RyYWNlLWV2ZW50cyBiL2Js
b2NrL3RyYWNlLWV2ZW50cwppbmRleCA2YTIwNGZhMGZmLi4wZTM1MWMzZmEzIDEwMDY0NAotLS0g
YS9ibG9jay90cmFjZS1ldmVudHMKKysrIGIvYmxvY2svdHJhY2UtZXZlbnRzCkBAIC01OCwxMiAr
NTgsMTAgQEAgcW1wX2Jsb2NrX2pvYl9maW5hbGl6ZSh2b2lkICpqb2IpICJqb2IgJXAiCiBxbXBf
YmxvY2tfam9iX2Rpc21pc3Modm9pZCAqam9iKSAiam9iICVwIgogcW1wX2Jsb2NrX3N0cmVhbSh2
b2lkICpicykgImJzICVwIgogCi0jIGZpbGUtcG9zaXguYwogIyBmaWxlLXdpbjMyLmMKIGZpbGVf
cGFpb19zdWJtaXQodm9pZCAqYWNiLCB2b2lkICpvcGFxdWUsIGludDY0X3Qgb2Zmc2V0LCBpbnQg
Y291bnQsIGludCB0eXBlKSAiYWNiICVwIG9wYXF1ZSAlcCBvZmZzZXQgJSJQUklkNjQiIGNvdW50
ICVkIHR5cGUgJWQiCi1maWxlX2NvcHlfZmlsZV9yYW5nZSh2b2lkICpicywgaW50IHNyYywgaW50
NjRfdCBzcmNfb2ZmLCBpbnQgZHN0LCBpbnQ2NF90IGRzdF9vZmYsIGludDY0X3QgYnl0ZXMsIGlu
dCBmbGFncywgaW50NjRfdCByZXQpICJicyAlcCBzcmNfZmQgJWQgb2Zmc2V0ICUiUFJJdTY0IiBk
c3RfZmQgJWQgb2Zmc2V0ICUiUFJJdTY0IiBieXRlcyAlIlBSSXU2NCIgZmxhZ3MgJWQgcmV0ICUi
UFJJZDY0CiAKLSNpb191cmluZy5jCisjIGlvX3VyaW5nLmMKIGx1cmluZ19pbml0X3N0YXRlKHZv
aWQgKnMsIHNpemVfdCBzaXplKSAicyAlcCBzaXplICV6dSIKIGx1cmluZ19jbGVhbnVwX3N0YXRl
KHZvaWQgKnMpICIlcCBmcmVlZCIKIGx1cmluZ19pb19wbHVnKHZvaWQgKnMpICJMdXJpbmdTdGF0
ZSAlcCBwbHVnIgpAQCAtMTk5LDYgKzE5Nyw3IEBAIGN1cmxfc2V0dXBfcHJlYWR2KHVpbnQ2NF90
IGJ5dGVzLCB1aW50NjRfdCBzdGFydCwgY29uc3QgY2hhciAqcmFuZ2UpICJyZWFkaW5nICUiCiBj
dXJsX2Nsb3NlKHZvaWQpICJjbG9zZSIKIAogIyBmaWxlLXBvc2l4LmMKK2ZpbGVfY29weV9maWxl
X3JhbmdlKHZvaWQgKmJzLCBpbnQgc3JjLCBpbnQ2NF90IHNyY19vZmYsIGludCBkc3QsIGludDY0
X3QgZHN0X29mZiwgaW50NjRfdCBieXRlcywgaW50IGZsYWdzLCBpbnQ2NF90IHJldCkgImJzICVw
IHNyY19mZCAlZCBvZmZzZXQgJSJQUkl1NjQiIGRzdF9mZCAlZCBvZmZzZXQgJSJQUkl1NjQiIGJ5
dGVzICUiUFJJdTY0IiBmbGFncyAlZCByZXQgJSJQUklkNjQKIGZpbGVfRmluZEVqZWN0YWJsZU9w
dGljYWxNZWRpYShjb25zdCBjaGFyICptZWRpYSkgIk1hdGNoaW5nIHVzaW5nICVzIgogZmlsZV9z
ZXR1cF9jZHJvbShjb25zdCBjaGFyICpwYXJ0aXRpb24pICJVc2luZyAlcyBhcyBvcHRpY2FsIGRp
c2MiCiBmaWxlX2hkZXZfaXNfc2coaW50IHR5cGUsIGludCB2ZXJzaW9uKSAiU0cgZGV2aWNlIGZv
dW5kOiB0eXBlPSVkLCB2ZXJzaW9uPSVkIgpkaWZmIC0tZ2l0IGEvaHcvYmxvY2svdHJhY2UtZXZl
bnRzIGIvaHcvYmxvY2svdHJhY2UtZXZlbnRzCmluZGV4IDcyY2YyZDE1Y2IuLmVjOTRjNTZhNDEg
MTAwNjQ0Ci0tLSBhL2h3L2Jsb2NrL3RyYWNlLWV2ZW50cworKysgYi9ody9ibG9jay90cmFjZS1l
dmVudHMKQEAgLTQsOCArNCw4IEBACiBmZGNfaW9wb3J0X3JlYWQodWludDhfdCByZWcsIHVpbnQ4
X3QgdmFsdWUpICJyZWFkIHJlZyAweCUwMnggdmFsIDB4JTAyeCIKIGZkY19pb3BvcnRfd3JpdGUo
dWludDhfdCByZWcsIHVpbnQ4X3QgdmFsdWUpICJ3cml0ZSByZWcgMHglMDJ4IHZhbCAweCUwMngi
CiAKLSMgcGZsYXNoX2NmaTAyLmMKICMgcGZsYXNoX2NmaTAxLmMKKyMgcGZsYXNoX2NmaTAyLmMK
IHBmbGFzaF9yZXNldCh2b2lkKSAicmVzZXQiCiBwZmxhc2hfdGltZXJfZXhwaXJlZCh1aW50OF90
IGNtZCkgImNvbW1hbmQgMHglMDJ4IGRvbmUiCiBwZmxhc2hfaW9fcmVhZCh1aW50NjRfdCBvZmZz
ZXQsIHVuc2lnbmVkIHNpemUsIHVpbnQzMl90IHZhbHVlLCB1aW50OF90IGNtZCwgdWludDhfdCB3
Y3ljbGUpICJvZmZzZXQ6MHglMDQiUFJJeDY0IiBzaXplOiV1IHZhbHVlOjB4JTA0eCBjbWQ6MHgl
MDJ4IHdjeWNsZToldSIKZGlmZiAtLWdpdCBhL2h3L2NoYXIvdHJhY2UtZXZlbnRzIGIvaHcvY2hh
ci90cmFjZS1ldmVudHMKaW5kZXggZDIwZWFmZDU2Zi4uMjQ0MmE5ZjdkNSAxMDA2NDQKLS0tIGEv
aHcvY2hhci90cmFjZS1ldmVudHMKKysrIGIvaHcvY2hhci90cmFjZS1ldmVudHMKQEAgLTk4LDUg
Kzk4LDUgQEAgZXh5bm9zX3VhcnRfcnhzaXplKHVpbnQzMl90IGNoYW5uZWwsIHVpbnQzMl90IHNp
emUpICJVQVJUJWQ6IFJ4IEZJRk8gc2l6ZTogJWQiCiBleHlub3NfdWFydF9jaGFubmVsX2Vycm9y
KHVpbnQzMl90IGNoYW5uZWwpICJXcm9uZyBVQVJUIGNoYW5uZWwgbnVtYmVyOiAlZCIKIGV4eW5v
c191YXJ0X3J4X3RpbWVvdXQodWludDMyX3QgY2hhbm5lbCwgdWludDMyX3Qgc3RhdCwgdWludDMy
X3QgaW50c3ApICJVQVJUJWQ6IFJ4IHRpbWVvdXQgc3RhdD0weCV4IGludHNwPTB4JXgiCiAKLSMg
aHcvY2hhci9jYWRlbmNlX3VhcnQuYworIyBjYWRlbmNlX3VhcnQuYwogY2FkZW5jZV91YXJ0X2Jh
dWRyYXRlKHVuc2lnbmVkIGJhdWRyYXRlKSAiYmF1ZHJhdGUgJXUiCmRpZmYgLS1naXQgYS9ody9k
aXNwbGF5L3RyYWNlLWV2ZW50cyBiL2h3L2Rpc3BsYXkvdHJhY2UtZXZlbnRzCmluZGV4IDk3MGQ2
YmFjNWQuLjk1N2I4YmE5OTQgMTAwNjQ0Ci0tLSBhL2h3L2Rpc3BsYXkvdHJhY2UtZXZlbnRzCisr
KyBiL2h3L2Rpc3BsYXkvdHJhY2UtZXZlbnRzCkBAIC0zMiw5ICszMiwxMSBAQCB2bXdhcmVfc2Ny
YXRjaF9yZWFkKHVpbnQzMl90IGluZGV4LCB1aW50MzJfdCB2YWx1ZSkgImluZGV4ICVkLCB2YWx1
ZSAweCV4Igogdm13YXJlX3NjcmF0Y2hfd3JpdGUodWludDMyX3QgaW5kZXgsIHVpbnQzMl90IHZh
bHVlKSAiaW5kZXggJWQsIHZhbHVlIDB4JXgiCiB2bXdhcmVfc2V0bW9kZSh1aW50MzJfdCB3LCB1
aW50MzJfdCBoLCB1aW50MzJfdCBicHApICIlZHglZCBAICVkIGJwcCIKIAorIyB2aXJ0aW8tZ3B1
LWJhc2UuYwordmlydGlvX2dwdV9mZWF0dXJlcyhib29sIHZpcmdsKSAidmlyZ2wgJWQiCisKICMg
dmlydGlvLWdwdS0zZC5jCiAjIHZpcnRpby1ncHUuYwotdmlydGlvX2dwdV9mZWF0dXJlcyhib29s
IHZpcmdsKSAidmlyZ2wgJWQiCiB2aXJ0aW9fZ3B1X2NtZF9nZXRfZGlzcGxheV9pbmZvKHZvaWQp
ICIiCiB2aXJ0aW9fZ3B1X2NtZF9nZXRfZWRpZCh1aW50MzJfdCBzY2Fub3V0KSAic2Nhbm91dCAl
ZCIKIHZpcnRpb19ncHVfY21kX3NldF9zY2Fub3V0KHVpbnQzMl90IGlkLCB1aW50MzJfdCByZXMs
IHVpbnQzMl90IHcsIHVpbnQzMl90IGgsIHVpbnQzMl90IHgsIHVpbnQzMl90IHkpICJpZCAlZCwg
cmVzIDB4JXgsIHcgJWQsIGggJWQsIHggJWQsIHkgJWQiCmRpZmYgLS1naXQgYS9ody9oeXBlcnYv
dHJhY2UtZXZlbnRzIGIvaHcvaHlwZXJ2L3RyYWNlLWV2ZW50cwppbmRleCBiYTViZDYyZDYxLi5i
NGMzNWNhOGUzIDEwMDY0NAotLS0gYS9ody9oeXBlcnYvdHJhY2UtZXZlbnRzCisrKyBiL2h3L2h5
cGVydi90cmFjZS1ldmVudHMKQEAgLTEsNCArMSw0IEBACi0jIHZtYnVzCisjIHZtYnVzLmMKIHZt
YnVzX3JlY3ZfbWVzc2FnZSh1aW50MzJfdCB0eXBlLCB1aW50MzJfdCBzaXplKSAidHlwZSAlZCBz
aXplICVkIgogdm1idXNfc2lnbmFsX2V2ZW50KHZvaWQpICIiCiB2bWJ1c19jaGFubmVsX25vdGlm
eV9ndWVzdCh1aW50MzJfdCBjaGFuX2lkKSAiY2hhbm5lbCAjJWQiCmRpZmYgLS1naXQgYS9ody9t
aXBzL3RyYWNlLWV2ZW50cyBiL2h3L21pcHMvdHJhY2UtZXZlbnRzCmluZGV4IDMyMTkzMzI4M2Yu
LjkxNTEzOWQ5ODEgMTAwNjQ0Ci0tLSBhL2h3L21pcHMvdHJhY2UtZXZlbnRzCisrKyBiL2h3L21p
cHMvdHJhY2UtZXZlbnRzCkBAIC0xLDQgKzEsNCBAQAotIyBndDY0eHh4LmMKKyMgZ3Q2NHh4eF9w
Y2kuYwogZ3Q2NDEyMF9yZWFkKGNvbnN0IGNoYXIgKnJlZ25hbWUsIHVuc2lnbmVkIHNpemUsIHVp
bnQ2NF90IHZhbHVlKSAiZ3Q2NDEyMCByZWFkICVzIHNpemU6JXUgdmFsdWU6MHglMDgiIFBSSXg2
NAogZ3Q2NDEyMF93cml0ZShjb25zdCBjaGFyICpyZWduYW1lLCB1bnNpZ25lZCBzaXplLCB1aW50
NjRfdCB2YWx1ZSkgImd0NjQxMjAgd3JpdGUgJXMgc2l6ZToldSB2YWx1ZToweCUwOCIgUFJJeDY0
CiBndDY0MTIwX2lzZF9yZW1hcCh1aW50NjRfdCBmcm9tX2xlbmd0aCwgdWludDY0X3QgZnJvbV9h
ZGRyLCB1aW50NjRfdCB0b19sZW5ndGgsIHVpbnQ2NF90IHRvX2FkZHIpICJJU0Q6IDB4JTA4IiBQ
Ukl4NjQgIkAweCUwOCIgUFJJeDY0ICIgLT4gMHglMDgiIFBSSXg2NCAiQDB4JTA4IiBQUkl4NjQK
ZGlmZiAtLWdpdCBhL2h3L21pc2MvdHJhY2UtZXZlbnRzIGIvaHcvbWlzYy90cmFjZS1ldmVudHMK
aW5kZXggZjlhMGJhMWE5My4uNTZhNjIyZDFlOSAxMDA2NDQKLS0tIGEvaHcvbWlzYy90cmFjZS1l
dmVudHMKKysrIGIvaHcvbWlzYy90cmFjZS1ldmVudHMKQEAgLTExMCwxMyArMTEwLDEzIEBAIG1v
czY1MjJfc2V0X3NyX2ludCh2b2lkKSAic2V0IHNyX2ludCIKIG1vczY1MjJfd3JpdGUodWludDY0
X3QgYWRkciwgdWludDY0X3QgdmFsKSAicmVnPTB4JSJQUkl4NjQgIiB2YWw9MHglIlBSSXg2NAog
bW9zNjUyMl9yZWFkKHVpbnQ2NF90IGFkZHIsIHVuc2lnbmVkIHZhbCkgInJlZz0weCUiUFJJeDY0
ICIgdmFsPTB4JXgiCiAKLSMgc3RtMzJmNHh4X3N5c2NmZworIyBzdG0zMmY0eHhfc3lzY2ZnLmMK
IHN0bTMyZjR4eF9zeXNjZmdfc2V0X2lycShpbnQgZ3BpbywgaW50IGxpbmUsIGludCBsZXZlbCkg
IkludGVydXB0OiBHUElPOiAlZCwgTGluZTogJWQ7IExldmVsOiAlZCIKIHN0bTMyZjR4eF9wdWxz
ZV9leHRpKGludCBpcnEpICJQdWxzZSBFWFRJOiAlZCIKIHN0bTMyZjR4eF9zeXNjZmdfcmVhZCh1
aW50NjRfdCBhZGRyKSAicmVnIHJlYWQ6IGFkZHI6IDB4JSIgUFJJeDY0ICIgIgogc3RtMzJmNHh4
X3N5c2NmZ193cml0ZSh1aW50NjRfdCBhZGRyLCB1aW50NjRfdCBkYXRhKSAicmVnIHdyaXRlOiBh
ZGRyOiAweCUiIFBSSXg2NCAiIHZhbDogMHglIiBQUkl4NjQgIiIKIAotIyBzdG0zMmY0eHhfZXh0
aQorIyBzdG0zMmY0eHhfZXh0aS5jCiBzdG0zMmY0eHhfZXh0aV9zZXRfaXJxKGludCBpcnEsIGlu
dCBsZXZlKSAiU2V0IEVYVEk6ICVkIHRvICVkIgogc3RtMzJmNHh4X2V4dGlfcmVhZCh1aW50NjRf
dCBhZGRyKSAicmVnIHJlYWQ6IGFkZHI6IDB4JSIgUFJJeDY0ICIgIgogc3RtMzJmNHh4X2V4dGlf
d3JpdGUodWludDY0X3QgYWRkciwgdWludDY0X3QgZGF0YSkgInJlZyB3cml0ZTogYWRkcjogMHgl
IiBQUkl4NjQgIiB2YWw6IDB4JSIgUFJJeDY0ICIiCkBAIC0xODEsMTEgKzE4MSwxMyBAQCBhcm1z
c2VfbWh1X3dyaXRlKHVpbnQ2NF90IG9mZnNldCwgdWludDY0X3QgZGF0YSwgdW5zaWduZWQgc2l6
ZSkgIlNTRS0yMDAgTUhVIHdyaQogIyBhc3BlZWRfeGRtYS5jCiBhc3BlZWRfeGRtYV93cml0ZSh1
aW50NjRfdCBvZmZzZXQsIHVpbnQ2NF90IGRhdGEpICJYRE1BIHdyaXRlOiBvZmZzZXQgMHglIiBQ
Ukl4NjQgIiBkYXRhIDB4JSIgUFJJeDY0CiAKKyMgYmNtMjgzNV9wcm9wZXJ0eS5jCitiY20yODM1
X21ib3hfcHJvcGVydHkodWludDMyX3QgdGFnLCB1aW50MzJfdCBidWZzaXplLCBzaXplX3QgcmVz
cGxlbikgIm1ib3ggcHJvcGVydHkgdGFnOjB4JTA4eCBpbl9zejoldSBvdXRfc3o6JXp1IgorCiAj
IGJjbTI4MzVfbWJveC5jCiBiY20yODM1X21ib3hfd3JpdGUodW5zaWduZWQgaW50IHNpemUsIHVp
bnQ2NF90IGFkZHIsIHVpbnQ2NF90IHZhbHVlKSAibWJveCB3cml0ZSBzejoldSBhZGRyOjB4JSJQ
Ukl4NjQiIGRhdGE6MHglIlBSSXg2NAogYmNtMjgzNV9tYm94X3JlYWQodW5zaWduZWQgaW50IHNp
emUsIHVpbnQ2NF90IGFkZHIsIHVpbnQ2NF90IHZhbHVlKSAibWJveCByZWFkIHN6OiV1IGFkZHI6
MHglIlBSSXg2NCIgZGF0YToweCUiUFJJeDY0CiBiY20yODM1X21ib3hfaXJxKHVuc2lnbmVkIGxl
dmVsKSAibWJveCBpcnE6QVJNIGxldmVsOiV1IgotYmNtMjgzNV9tYm94X3Byb3BlcnR5KHVpbnQz
Ml90IHRhZywgdWludDMyX3QgYnVmc2l6ZSwgc2l6ZV90IHJlc3BsZW4pICJtYm94IHByb3BlcnR5
IHRhZzoweCUwOHggaW5fc3o6JXUgb3V0X3N6OiV6dSIKIAogIyBtYWNfdmlhLmMKIHZpYTFfcnRj
X3VwZGF0ZV9kYXRhX291dChpbnQgY291bnQsIGludCB2YWx1ZSkgImNvdW50PSVkIHZhbHVlPTB4
JTAyeCIKZGlmZiAtLWdpdCBhL2h3L3BwYy90cmFjZS1ldmVudHMgYi9ody9wcGMvdHJhY2UtZXZl
bnRzCmluZGV4IGNhMzQyNDRlMmEuLmRjYzA2ZDQ5YjUgMTAwNjQ0Ci0tLSBhL2h3L3BwYy90cmFj
ZS1ldmVudHMKKysrIGIvaHcvcHBjL3RyYWNlLWV2ZW50cwpAQCAtOSwxMCArOSw4IEBAIHNwYXBy
X3BjaV9tc2lfd3JpdGUodWludDY0X3QgYWRkciwgdWludDY0X3QgZGF0YSwgdWludDMyX3QgZHRf
aXJxKSAiQDB4JSJQUkl4NjQiCiBzcGFwcl9wY2lfbHNpX3NldChjb25zdCBjaGFyICpidXNuYW1l
LCBpbnQgcGluLCB1aW50MzJfdCBpcnEpICIlcyBQSU4lZCBJUlEgJXUiCiBzcGFwcl9wY2lfbXNp
X3JldHJ5KHVuc2lnbmVkIGNvbmZpZ19hZGRyLCB1bnNpZ25lZCByZXFfbnVtLCB1bnNpZ25lZCBt
YXhfaXJxcykgIkd1ZXN0IGRldmljZSBhdCAweCV4IGFza2VkICV1LCBoYXZlIG9ubHkgJXUiCiAK
LSMgc3BhcHIuYwotc3BhcHJfY2FzX2NvbnRpbnVlKHVuc2lnbmVkIGxvbmcgbikgIkNvcHkgY2hh
bmdlcyB0byB0aGUgZ3Vlc3Q6ICVsZCBieXRlcyIKLQogIyBzcGFwcl9oY2FsbC5jCitzcGFwcl9j
YXNfY29udGludWUodW5zaWduZWQgbG9uZyBuKSAiQ29weSBjaGFuZ2VzIHRvIHRoZSBndWVzdDog
JWxkIGJ5dGVzIgogc3BhcHJfY2FzX3B2cih1aW50MzJfdCBjdXJfcHZyLCBib29sIGV4cGxpY2l0
X21hdGNoLCB1aW50MzJfdCBuZXdfcHZyKSAiY3VycmVudD0weCV4LCBleHBsaWNpdF9tYXRjaD0l
dSwgbmV3PTB4JXgiCiBzcGFwcl9oX3Jlc2l6ZV9ocHRfcHJlcGFyZSh1aW50NjRfdCBmbGFncywg
dWludDY0X3Qgc2hpZnQpICJmbGFncz0weCUiUFJJeDY0Iiwgc2hpZnQ9JSJQUkl1NjQKIHNwYXBy
X2hfcmVzaXplX2hwdF9jb21taXQodWludDY0X3QgZmxhZ3MsIHVpbnQ2NF90IHNoaWZ0KSAiZmxh
Z3M9MHglIlBSSXg2NCIsIHNoaWZ0PSUiUFJJdTY0CkBAIC0yMCw3ICsxOCw3IEBAIHNwYXByX3Vw
ZGF0ZV9kdCh1bnNpZ25lZCBjYikgIk5ldyBibG9iICV1IGJ5dGVzIgogc3BhcHJfdXBkYXRlX2R0
X2ZhaWxlZF9zaXplKHVuc2lnbmVkIGNib2xkLCB1bnNpZ25lZCBjYm5ldywgdW5zaWduZWQgbWFn
aWMpICJPbGQgYmxvYiAldSBieXRlcywgbmV3IGJsb2IgJXUgYnl0ZXMsIG1hZ2ljIDB4JXgiCiBz
cGFwcl91cGRhdGVfZHRfZmFpbGVkX2NoZWNrKHVuc2lnbmVkIGNib2xkLCB1bnNpZ25lZCBjYm5l
dywgdW5zaWduZWQgbWFnaWMpICJPbGQgYmxvYiAldSBieXRlcywgbmV3IGJsb2IgJXUgYnl0ZXMs
IG1hZ2ljIDB4JXgiCiAKLSMgc3BhcHJfaGNhbGxfdHBtLmMKKyMgc3BhcHJfdHBtX3Byb3h5LmMK
IHNwYXByX2hfdHBtX2NvbW0oY29uc3QgY2hhciAqZGV2aWNlX3BhdGgsIHVpbnQ2NF90IG9wZXJh
dGlvbikgInRwbV9kZXZpY2VfcGF0aD0lcyBvcGVyYXRpb249MHglIlBSSXU2NAogc3BhcHJfdHBt
X2V4ZWN1dGUodWludDY0X3QgZGF0YV9pbiwgdWludDY0X3QgZGF0YV9pbl9zeiwgdWludDY0X3Qg
ZGF0YV9vdXQsIHVpbnQ2NF90IGRhdGFfb3V0X3N6KSAiZGF0YV9pbj0weCUiUFJJeDY0IiwgZGF0
YV9pbl9zej0lIlBSSXU2NCIsIGRhdGFfb3V0PTB4JSJQUkl4NjQiLCBkYXRhX291dF9zej0lIlBS
SXU2NAogCmRpZmYgLS1naXQgYS9ody9yaXNjdi90cmFjZS1ldmVudHMgYi9ody9yaXNjdi90cmFj
ZS1ldmVudHMKaW5kZXggNmQ1OTIzM2UyMy4uYjgxOTg3ODk2MyAxMDA2NDQKLS0tIGEvaHcvcmlz
Y3YvdHJhY2UtZXZlbnRzCisrKyBiL2h3L3Jpc2N2L3RyYWNlLWV2ZW50cwpAQCAtMSw2ICsxLDYg
QEAKICMgU2VlIGRvY3MvZGV2ZWwvdHJhY2luZy50eHQgZm9yIHN5bnRheCBkb2N1bWVudGF0aW9u
LgogCi0jIGh3L2dwaW8vc2lmaXZlX2dwaW8uYworIyBzaWZpdmVfZ3Bpby5jCiBzaWZpdmVfZ3Bp
b19yZWFkKHVpbnQ2NF90IG9mZnNldCwgdWludDY0X3QgcikgIm9mZnNldCAweCUiIFBSSXg2NCAi
IHZhbHVlIDB4JSIgUFJJeDY0CiBzaWZpdmVfZ3Bpb193cml0ZSh1aW50NjRfdCBvZmZzZXQsIHVp
bnQ2NF90IHZhbHVlKSAib2Zmc2V0IDB4JSIgUFJJeDY0ICIgdmFsdWUgMHglIiBQUkl4NjQKIHNp
Zml2ZV9ncGlvX3NldChpbnQ2NF90IGxpbmUsIGludDY0X3QgdmFsdWUpICJsaW5lICUiIFBSSWk2
NCAiIHZhbHVlICUiIFBSSWk2NApkaWZmIC0tZ2l0IGEvaHcvcnRjL3RyYWNlLWV2ZW50cyBiL2h3
L3J0Yy90cmFjZS1ldmVudHMKaW5kZXggMWJjNzE0N2QwZS4uOGJkY2Y3NDI2NCAxMDA2NDQKLS0t
IGEvaHcvcnRjL3RyYWNlLWV2ZW50cworKysgYi9ody9ydGMvdHJhY2UtZXZlbnRzCkBAIC0xOCw3
ICsxOCw3IEBAIHBsMDMxX3dyaXRlKHVpbnQzMl90IGFkZHIsIHVpbnQzMl90IHZhbHVlKSAiYWRk
ciAweCUwOHggdmFsdWUgMHglMDh4IgogcGwwMzFfYWxhcm1fcmFpc2VkKHZvaWQpICJhbGFybSBy
YWlzZWQiCiBwbDAzMV9zZXRfYWxhcm0odWludDMyX3QgdGlja3MpICJhbGFybSBzZXQgZm9yICV1
IHRpY2tzIgogCi0jIGFzcGVlZC1ydGMuYworIyBhc3BlZWRfcnRjLmMKIGFzcGVlZF9ydGNfcmVh
ZCh1aW50NjRfdCBhZGRyLCB1aW50NjRfdCB2YWx1ZSkgImFkZHIgMHglMDIiIFBSSXg2NCAiIHZh
bHVlIDB4JTA4IiBQUkl4NjQKIGFzcGVlZF9ydGNfd3JpdGUodWludDY0X3QgYWRkciwgdWludDY0
X3QgdmFsdWUpICJhZGRyIDB4JTAyIiBQUkl4NjQgIiB2YWx1ZSAweCUwOCIgUFJJeDY0CiAKZGlm
ZiAtLWdpdCBhL2h3L3RwbS90cmFjZS1ldmVudHMgYi9ody90cG0vdHJhY2UtZXZlbnRzCmluZGV4
IGRlOWJmMWUwMWIuLjI2NmRlMTdkMzggMTAwNjQ0Ci0tLSBhL2h3L3RwbS90cmFjZS1ldmVudHMK
KysrIGIvaHcvdHBtL3RyYWNlLWV2ZW50cwpAQCAtNCw3ICs0LDcgQEAKIHRwbV9jcmJfbW1pb19y
ZWFkKHVpbnQ2NF90IGFkZHIsIHVuc2lnbmVkIHNpemUsIHVpbnQzMl90IHZhbCkgIkNSQiByZWFk
IDB4JTAxNiIgUFJJeDY0ICIgbGVuOiV1IHZhbDogMHglIiBQUkl4MzIKIHRwbV9jcmJfbW1pb193
cml0ZSh1aW50NjRfdCBhZGRyLCB1bnNpZ25lZCBzaXplLCB1aW50MzJfdCB2YWwpICJDUkIgd3Jp
dGUgMHglMDE2IiBQUkl4NjQgIiBsZW46JXUgdmFsOiAweCUiIFBSSXgzMgogCi0jIHRwbV90aXMu
YworIyB0cG1fdGlzX2NvbW1vbi5jCiB0cG1fdGlzX3JhaXNlX2lycSh1aW50MzJfdCBpcnFtYXNr
KSAiUmFpc2luZyBJUlEgZm9yIGZsYWcgMHglMDh4IgogdHBtX3Rpc19uZXdfYWN0aXZlX2xvY2Fs
aXR5KHVpbnQ4X3QgbG9jdHkpICJBY3RpdmUgbG9jYWxpdHkgaXMgbm93ICVkIgogdHBtX3Rpc19h
Ym9ydCh1aW50OF90IGxvY3R5KSAiTmV3IGFjdGl2ZSBsb2NhbGl0eSBpcyAlZCIKZGlmZiAtLWdp
dCBhL2h3L3VzYi90cmFjZS1ldmVudHMgYi9ody91c2IvdHJhY2UtZXZlbnRzCmluZGV4IGU5Y2Rl
ZWVkMTQuLjcyZTQyOTg3ODAgMTAwNjQ0Ci0tLSBhL2h3L3VzYi90cmFjZS1ldmVudHMKKysrIGIv
aHcvdXNiL3RyYWNlLWV2ZW50cwpAQCAtMTAsNiArMTAsOSBAQCB1c2JfcG9ydF9hdHRhY2goaW50
IGJ1cywgY29uc3QgY2hhciAqcG9ydCwgY29uc3QgY2hhciAqZGV2c3BlZWQsIGNvbnN0IGNoYXIg
KnBvcgogdXNiX3BvcnRfZGV0YWNoKGludCBidXMsIGNvbnN0IGNoYXIgKnBvcnQpICJidXMgJWQs
IHBvcnQgJXMiCiB1c2JfcG9ydF9yZWxlYXNlKGludCBidXMsIGNvbnN0IGNoYXIgKnBvcnQpICJi
dXMgJWQsIHBvcnQgJXMiCiAKKyMgaGNkLW9oY2ktcGNpLmMKK3VzYl9vaGNpX2V4aXQoY29uc3Qg
Y2hhciAqcykgIiVzIgorCiAjIGhjZC1vaGNpLmMKIHVzYl9vaGNpX2lzb190ZF9yZWFkX2ZhaWxl
ZCh1aW50MzJfdCBhZGRyKSAiSVNPX1REIHJlYWQgZXJyb3IgYXQgMHgleCIKIHVzYl9vaGNpX2lz
b190ZF9oZWFkKHVpbnQzMl90IGhlYWQsIHVpbnQzMl90IHRhaWwsIHVpbnQzMl90IGZsYWdzLCB1
aW50MzJfdCBicCwgdWludDMyX3QgbmV4dCwgdWludDMyX3QgYmUsIHVpbnQzMl90IGZyYW1lbnVt
LCB1aW50MzJfdCBzdGFydGZyYW1lLCB1aW50MzJfdCBmcmFtZWNvdW50LCBpbnQgcmVsX2ZyYW1l
X251bSkgIklTT19URCBFRCBoZWFkIDB4JS44eCB0YWlscCAweCUuOHhcbjB4JS44eCAweCUuOHgg
MHglLjh4IDB4JS44eFxuZnJhbWVfbnVtYmVyIDB4JS44eCBzdGFydGluZ19mcmFtZSAweCUuOHhc
bmZyYW1lX2NvdW50ICAweCUuOHggcmVsYXRpdmUgJWQiCkBAIC0zNSw3ICszOCw2IEBAIHVzYl9v
aGNpX3Jlc2V0KGNvbnN0IGNoYXIgKnMpICIlcyIKIHVzYl9vaGNpX3N0YXJ0KGNvbnN0IGNoYXIg
KnMpICIlczogVVNCIE9wZXJhdGlvbmFsIgogdXNiX29oY2lfcmVzdW1lKGNvbnN0IGNoYXIgKnMp
ICIlczogVVNCIFJlc3VtZSIKIHVzYl9vaGNpX3N0b3AoY29uc3QgY2hhciAqcykgIiVzOiBVU0Ig
U3VzcGVuZGVkIgotdXNiX29oY2lfZXhpdChjb25zdCBjaGFyICpzKSAiJXMiCiB1c2Jfb2hjaV9z
ZXRfY3RsKGNvbnN0IGNoYXIgKnMsIHVpbnQzMl90IG5ld19zdGF0ZSkgIiVzOiBuZXcgc3RhdGUg
MHgleCIKIHVzYl9vaGNpX3RkX3VuZGVycnVuKHZvaWQpICIiCiB1c2Jfb2hjaV90ZF9kZXZfZXJy
b3Iodm9pZCkgIiIKZGlmZiAtLWdpdCBhL2h3L3ZmaW8vdHJhY2UtZXZlbnRzIGIvaHcvdmZpby90
cmFjZS1ldmVudHMKaW5kZXggYjFlZjU1YTMzZi4uOTNhMGJjMjUyMiAxMDA2NDQKLS0tIGEvaHcv
dmZpby90cmFjZS1ldmVudHMKKysrIGIvaHcvdmZpby90cmFjZS1ldmVudHMKQEAgLTgwLDE2ICs4
MCwxOCBAQCB2ZmlvX3F1aXJrX2F0aV9ib25haXJlX3Jlc2V0KGNvbnN0IGNoYXIgKm5hbWUpICIl
cyIKIHZmaW9faW9ldmVudGZkX2V4aXQoY29uc3QgY2hhciAqbmFtZSwgdWludDY0X3QgYWRkciwg
dW5zaWduZWQgc2l6ZSwgdWludDY0X3QgZGF0YSkgIiVzKzB4JSJQUkl4NjQiWyVkXToweCUiUFJJ
eDY0CiB2ZmlvX2lvZXZlbnRmZF9oYW5kbGVyKGNvbnN0IGNoYXIgKm5hbWUsIHVpbnQ2NF90IGFk
ZHIsIHVuc2lnbmVkIHNpemUsIHVpbnQ2NF90IGRhdGEpICIlcysweCUiUFJJeDY0IlslZF0gLT4g
MHglIlBSSXg2NAogdmZpb19pb2V2ZW50ZmRfaW5pdChjb25zdCBjaGFyICpuYW1lLCB1aW50NjRf
dCBhZGRyLCB1bnNpZ25lZCBzaXplLCB1aW50NjRfdCBkYXRhLCBib29sIHZmaW8pICIlcysweCUi
UFJJeDY0IlslZF06MHglIlBSSXg2NCIgdmZpbzolZCIKLXZmaW9fcGNpX2lnZF9iYXI0X3dyaXRl
KGNvbnN0IGNoYXIgKm5hbWUsIHVpbnQzMl90IGluZGV4LCB1aW50MzJfdCBkYXRhLCB1aW50MzJf
dCBiYXNlKSAiJXMgWzB4JTAzeF0gMHglMDh4IC0+IDB4JTA4eCIKLXZmaW9fcGNpX2lnZF9iZHNt
X2VuYWJsZWQoY29uc3QgY2hhciAqbmFtZSwgaW50IHNpemUpICIlcyAlZE1CIgogdmZpb19wY2lf
aWdkX29wcmVnaW9uX2VuYWJsZWQoY29uc3QgY2hhciAqbmFtZSkgIiVzIgotdmZpb19wY2lfaWdk
X2hvc3RfYnJpZGdlX2VuYWJsZWQoY29uc3QgY2hhciAqbmFtZSkgIiVzIgotdmZpb19wY2lfaWdk
X2xwY19icmlkZ2VfZW5hYmxlZChjb25zdCBjaGFyICpuYW1lKSAiJXMiCiAKIHZmaW9fcGNpX252
aWRpYV9ncHVfc2V0dXBfcXVpcmsoY29uc3QgY2hhciAqbmFtZSwgdWludDY0X3QgdGd0LCB1aW50
NjRfdCBzaXplKSAiJXMgdGd0PTB4JSJQUkl4NjQiIHNpemU9MHglIlBSSXg2NAogdmZpb19wY2lf
bnZsaW5rMl9zZXR1cF9xdWlya19zc2F0Z3QoY29uc3QgY2hhciAqbmFtZSwgdWludDY0X3QgdGd0
LCB1aW50NjRfdCBzaXplKSAiJXMgdGd0PTB4JSJQUkl4NjQiIHNpemU9MHglIlBSSXg2NAogdmZp
b19wY2lfbnZsaW5rMl9zZXR1cF9xdWlya19sbmtzcGQoY29uc3QgY2hhciAqbmFtZSwgdWludDMy
X3QgbGlua19zcGVlZCkgIiVzIGxpbmtfc3BlZWQ9MHgleCIKIAorIyBpZ2QuYwordmZpb19wY2lf
aWdkX2JhcjRfd3JpdGUoY29uc3QgY2hhciAqbmFtZSwgdWludDMyX3QgaW5kZXgsIHVpbnQzMl90
IGRhdGEsIHVpbnQzMl90IGJhc2UpICIlcyBbMHglMDN4XSAweCUwOHggLT4gMHglMDh4IgordmZp
b19wY2lfaWdkX2Jkc21fZW5hYmxlZChjb25zdCBjaGFyICpuYW1lLCBpbnQgc2l6ZSkgIiVzICVk
TUIiCit2ZmlvX3BjaV9pZ2RfaG9zdF9icmlkZ2VfZW5hYmxlZChjb25zdCBjaGFyICpuYW1lKSAi
JXMiCit2ZmlvX3BjaV9pZ2RfbHBjX2JyaWRnZV9lbmFibGVkKGNvbnN0IGNoYXIgKm5hbWUpICIl
cyIKKwogIyBjb21tb24uYwogdmZpb19yZWdpb25fd3JpdGUoY29uc3QgY2hhciAqbmFtZSwgaW50
IGluZGV4LCB1aW50NjRfdCBhZGRyLCB1aW50NjRfdCBkYXRhLCB1bnNpZ25lZCBzaXplKSAiICgl
czpyZWdpb24lZCsweCUiUFJJeDY0IiwgMHglIlBSSXg2NCAiLCAlZCkiCiB2ZmlvX3JlZ2lvbl9y
ZWFkKGNoYXIgKm5hbWUsIGludCBpbmRleCwgdWludDY0X3QgYWRkciwgdW5zaWduZWQgc2l6ZSwg
dWludDY0X3QgZGF0YSkgIiAoJXM6cmVnaW9uJWQrMHglIlBSSXg2NCIsICVkKSA9IDB4JSJQUkl4
NjQKZGlmZiAtLWdpdCBhL2h3L3ZpcnRpby90cmFjZS1ldmVudHMgYi9ody92aXJ0aW8vdHJhY2Ut
ZXZlbnRzCmluZGV4IDA0NWU4OWNhZTYuLjg0NTIwMGJmMTAgMTAwNjQ0Ci0tLSBhL2h3L3ZpcnRp
by90cmFjZS1ldmVudHMKKysrIGIvaHcvdmlydGlvL3RyYWNlLWV2ZW50cwpAQCAtNTUsNyArNTUs
NyBAQCB2aXJ0aW9fbW1pb19ndWVzdF9wYWdlKHVpbnQ2NF90IHNpemUsIGludCBzaGlmdCkgImd1
ZXN0IHBhZ2Ugc2l6ZSAweCUiIFBSSXg2NCAiCiB2aXJ0aW9fbW1pb19xdWV1ZV93cml0ZSh1aW50
NjRfdCB2YWx1ZSwgaW50IG1heF9zaXplKSAibW1pb19xdWV1ZSB3cml0ZSAweCUiIFBSSXg2NCAi
IG1heCAlZCIKIHZpcnRpb19tbWlvX3NldHRpbmdfaXJxKGludCBsZXZlbCkgInZpcnRpb19tbWlv
IHNldHRpbmcgSVJRICVkIgogCi0jIGh3L3ZpcnRpby92aXJ0aW8taW9tbXUuYworIyB2aXJ0aW8t
aW9tbXUuYwogdmlydGlvX2lvbW11X2RldmljZV9yZXNldCh2b2lkKSAicmVzZXQhIgogdmlydGlv
X2lvbW11X2dldF9mZWF0dXJlcyh1aW50NjRfdCBmZWF0dXJlcykgImRldmljZSBzdXBwb3J0cyBm
ZWF0dXJlcz0weCUiUFJJeDY0CiB2aXJ0aW9faW9tbXVfZGV2aWNlX3N0YXR1cyh1aW50OF90IHN0
YXR1cykgImRyaXZlciBzdGF0dXMgPSAlZCIKZGlmZiAtLWdpdCBhL21pZ3JhdGlvbi90cmFjZS1l
dmVudHMgYi9taWdyYXRpb24vdHJhY2UtZXZlbnRzCmluZGV4IDZmOTQxMDZiZmEuLjdiYTJmYTY2
NDQgMTAwNjQ0Ci0tLSBhL21pZ3JhdGlvbi90cmFjZS1ldmVudHMKKysrIGIvbWlncmF0aW9uL3Ry
YWNlLWV2ZW50cwpAQCAtOTEsMjMgKzkxLDYgQEAgbWlncmF0aW9uX2JpdG1hcF9zeW5jX3N0YXJ0
KHZvaWQpICIiCiBtaWdyYXRpb25fYml0bWFwX3N5bmNfZW5kKHVpbnQ2NF90IGRpcnR5X3BhZ2Vz
KSAiZGlydHlfcGFnZXMgJSIgUFJJdTY0CiBtaWdyYXRpb25fYml0bWFwX2NsZWFyX2RpcnR5KGNo
YXIgKnN0ciwgdWludDY0X3Qgc3RhcnQsIHVpbnQ2NF90IHNpemUsIHVuc2lnbmVkIGxvbmcgcGFn
ZSkgInJiICVzIHN0YXJ0IDB4JSJQUkl4NjQiIHNpemUgMHglIlBSSXg2NCIgcGFnZSAweCVseCIK
IG1pZ3JhdGlvbl90aHJvdHRsZSh2b2lkKSAiIgotbXVsdGlmZF9uZXdfc2VuZF9jaGFubmVsX2Fz
eW5jKHVpbnQ4X3QgaWQpICJjaGFubmVsICVkIgotbXVsdGlmZF9yZWN2KHVpbnQ4X3QgaWQsIHVp
bnQ2NF90IHBhY2tldF9udW0sIHVpbnQzMl90IHVzZWQsIHVpbnQzMl90IGZsYWdzLCB1aW50MzJf
dCBuZXh0X3BhY2tldF9zaXplKSAiY2hhbm5lbCAlZCBwYWNrZXRfbnVtICUiIFBSSXU2NCAiIHBh
Z2VzICVkIGZsYWdzIDB4JXggbmV4dCBwYWNrZXQgc2l6ZSAlZCIKLW11bHRpZmRfcmVjdl9uZXdf
Y2hhbm5lbCh1aW50OF90IGlkKSAiY2hhbm5lbCAlZCIKLW11bHRpZmRfcmVjdl9zeW5jX21haW4o
bG9uZyBwYWNrZXRfbnVtKSAicGFja2V0IG51bSAlbGQiCi1tdWx0aWZkX3JlY3Zfc3luY19tYWlu
X3NpZ25hbCh1aW50OF90IGlkKSAiY2hhbm5lbCAlZCIKLW11bHRpZmRfcmVjdl9zeW5jX21haW5f
d2FpdCh1aW50OF90IGlkKSAiY2hhbm5lbCAlZCIKLW11bHRpZmRfcmVjdl90ZXJtaW5hdGVfdGhy
ZWFkcyhib29sIGVycm9yKSAiZXJyb3IgJWQiCi1tdWx0aWZkX3JlY3ZfdGhyZWFkX2VuZCh1aW50
OF90IGlkLCB1aW50NjRfdCBwYWNrZXRzLCB1aW50NjRfdCBwYWdlcykgImNoYW5uZWwgJWQgcGFj
a2V0cyAlIiBQUkl1NjQgIiBwYWdlcyAlIiBQUkl1NjQKLW11bHRpZmRfcmVjdl90aHJlYWRfc3Rh
cnQodWludDhfdCBpZCkgIiVkIgotbXVsdGlmZF9zZW5kKHVpbnQ4X3QgaWQsIHVpbnQ2NF90IHBh
Y2tldF9udW0sIHVpbnQzMl90IHVzZWQsIHVpbnQzMl90IGZsYWdzLCB1aW50MzJfdCBuZXh0X3Bh
Y2tldF9zaXplKSAiY2hhbm5lbCAlZCBwYWNrZXRfbnVtICUiIFBSSXU2NCAiIHBhZ2VzICVkIGZs
YWdzIDB4JXggbmV4dCBwYWNrZXQgc2l6ZSAlZCIKLW11bHRpZmRfc2VuZF9lcnJvcih1aW50OF90
IGlkKSAiY2hhbm5lbCAlZCIKLW11bHRpZmRfc2VuZF9zeW5jX21haW4obG9uZyBwYWNrZXRfbnVt
KSAicGFja2V0IG51bSAlbGQiCi1tdWx0aWZkX3NlbmRfc3luY19tYWluX3NpZ25hbCh1aW50OF90
IGlkKSAiY2hhbm5lbCAlZCIKLW11bHRpZmRfc2VuZF9zeW5jX21haW5fd2FpdCh1aW50OF90IGlk
KSAiY2hhbm5lbCAlZCIKLW11bHRpZmRfc2VuZF90ZXJtaW5hdGVfdGhyZWFkcyhib29sIGVycm9y
KSAiZXJyb3IgJWQiCi1tdWx0aWZkX3NlbmRfdGhyZWFkX2VuZCh1aW50OF90IGlkLCB1aW50NjRf
dCBwYWNrZXRzLCB1aW50NjRfdCBwYWdlcykgImNoYW5uZWwgJWQgcGFja2V0cyAlIiBQUkl1NjQg
IiBwYWdlcyAlIiAgUFJJdTY0Ci1tdWx0aWZkX3NlbmRfdGhyZWFkX3N0YXJ0KHVpbnQ4X3QgaWQp
ICIlZCIKIHJhbV9kaXNjYXJkX3JhbmdlKGNvbnN0IGNoYXIgKnJibmFtZSwgdWludDY0X3Qgc3Rh
cnQsIHNpemVfdCBsZW4pICIlczogc3RhcnQ6ICUiIFBSSXg2NCAiICV6eCIKIHJhbV9sb2FkX2xv
b3AoY29uc3QgY2hhciAqcmJuYW1lLCB1aW50NjRfdCBhZGRyLCBpbnQgZmxhZ3MsIHZvaWQgKmhv
c3QpICIlczogYWRkcjogMHglIiBQUkl4NjQgIiBmbGFnczogMHgleCBob3N0OiAlcCIKIHJhbV9s
b2FkX3Bvc3Rjb3B5X2xvb3AodWludDY0X3QgYWRkciwgaW50IGZsYWdzKSAiQCUiIFBSSXg2NCAi
ICV4IgpAQCAtMTI4LDYgKzExMSwyNSBAQCBzYXZlX3hienJsZV9wYWdlX292ZXJmbG93KHZvaWQp
ICIiCiByYW1fc2F2ZV9pdGVyYXRlX2JpZ193YWl0KHVpbnQ2NF90IG1pbGxpY29uZHMsIGludCBp
dGVyYXRpb25zKSAiYmlnIHdhaXQ6ICUiIFBSSXU2NCAiIG1pbGxpc2Vjb25kcywgJWQgaXRlcmF0
aW9ucyIKIHJhbV9sb2FkX2NvbXBsZXRlKGludCByZXQsIHVpbnQ2NF90IHNlcV9pdGVyKSAiZXhp
dF9jb2RlICVkIHNlcSBpdGVyYXRpb24gJSIgUFJJdTY0CiAKKyMgbXVsdGlmZC5jCittdWx0aWZk
X25ld19zZW5kX2NoYW5uZWxfYXN5bmModWludDhfdCBpZCkgImNoYW5uZWwgJWQiCittdWx0aWZk
X3JlY3YodWludDhfdCBpZCwgdWludDY0X3QgcGFja2V0X251bSwgdWludDMyX3QgdXNlZCwgdWlu
dDMyX3QgZmxhZ3MsIHVpbnQzMl90IG5leHRfcGFja2V0X3NpemUpICJjaGFubmVsICVkIHBhY2tl
dF9udW0gJSIgUFJJdTY0ICIgcGFnZXMgJWQgZmxhZ3MgMHgleCBuZXh0IHBhY2tldCBzaXplICVk
IgorbXVsdGlmZF9yZWN2X25ld19jaGFubmVsKHVpbnQ4X3QgaWQpICJjaGFubmVsICVkIgorbXVs
dGlmZF9yZWN2X3N5bmNfbWFpbihsb25nIHBhY2tldF9udW0pICJwYWNrZXQgbnVtICVsZCIKK211
bHRpZmRfcmVjdl9zeW5jX21haW5fc2lnbmFsKHVpbnQ4X3QgaWQpICJjaGFubmVsICVkIgorbXVs
dGlmZF9yZWN2X3N5bmNfbWFpbl93YWl0KHVpbnQ4X3QgaWQpICJjaGFubmVsICVkIgorbXVsdGlm
ZF9yZWN2X3Rlcm1pbmF0ZV90aHJlYWRzKGJvb2wgZXJyb3IpICJlcnJvciAlZCIKK211bHRpZmRf
cmVjdl90aHJlYWRfZW5kKHVpbnQ4X3QgaWQsIHVpbnQ2NF90IHBhY2tldHMsIHVpbnQ2NF90IHBh
Z2VzKSAiY2hhbm5lbCAlZCBwYWNrZXRzICUiIFBSSXU2NCAiIHBhZ2VzICUiIFBSSXU2NAorbXVs
dGlmZF9yZWN2X3RocmVhZF9zdGFydCh1aW50OF90IGlkKSAiJWQiCittdWx0aWZkX3NlbmQodWlu
dDhfdCBpZCwgdWludDY0X3QgcGFja2V0X251bSwgdWludDMyX3QgdXNlZCwgdWludDMyX3QgZmxh
Z3MsIHVpbnQzMl90IG5leHRfcGFja2V0X3NpemUpICJjaGFubmVsICVkIHBhY2tldF9udW0gJSIg
UFJJdTY0ICIgcGFnZXMgJWQgZmxhZ3MgMHgleCBuZXh0IHBhY2tldCBzaXplICVkIgorbXVsdGlm
ZF9zZW5kX2Vycm9yKHVpbnQ4X3QgaWQpICJjaGFubmVsICVkIgorbXVsdGlmZF9zZW5kX3N5bmNf
bWFpbihsb25nIHBhY2tldF9udW0pICJwYWNrZXQgbnVtICVsZCIKK211bHRpZmRfc2VuZF9zeW5j
X21haW5fc2lnbmFsKHVpbnQ4X3QgaWQpICJjaGFubmVsICVkIgorbXVsdGlmZF9zZW5kX3N5bmNf
bWFpbl93YWl0KHVpbnQ4X3QgaWQpICJjaGFubmVsICVkIgorbXVsdGlmZF9zZW5kX3Rlcm1pbmF0
ZV90aHJlYWRzKGJvb2wgZXJyb3IpICJlcnJvciAlZCIKK211bHRpZmRfc2VuZF90aHJlYWRfZW5k
KHVpbnQ4X3QgaWQsIHVpbnQ2NF90IHBhY2tldHMsIHVpbnQ2NF90IHBhZ2VzKSAiY2hhbm5lbCAl
ZCBwYWNrZXRzICUiIFBSSXU2NCAiIHBhZ2VzICUiICBQUkl1NjQKK211bHRpZmRfc2VuZF90aHJl
YWRfc3RhcnQodWludDhfdCBpZCkgIiVkIgorCiAjIG1pZ3JhdGlvbi5jCiBhd2FpdF9yZXR1cm5f
cGF0aF9jbG9zZV9vbl9zb3VyY2VfY2xvc2Uodm9pZCkgIiIKIGF3YWl0X3JldHVybl9wYXRoX2Ns
b3NlX29uX3NvdXJjZV9qb2luaW5nKHZvaWQpICIiCmRpZmYgLS1naXQgYS90YXJnZXQvcmlzY3Yv
dHJhY2UtZXZlbnRzIGIvdGFyZ2V0L3Jpc2N2L3RyYWNlLWV2ZW50cwppbmRleCA0YjZjNjUyYWU5
Li5iN2UzNzFlZTk3IDEwMDY0NAotLS0gYS90YXJnZXQvcmlzY3YvdHJhY2UtZXZlbnRzCisrKyBi
L3RhcmdldC9yaXNjdi90cmFjZS1ldmVudHMKQEAgLTEsNCArMSw0IEBACi0jIHRhcmdldC9yaXNj
di9jcHVfaGVscGVyLmMKKyMgY3B1X2hlbHBlci5jCiByaXNjdl90cmFwKHVpbnQ2NF90IGhhcnRp
ZCwgYm9vbCBhc3luYywgdWludDY0X3QgY2F1c2UsIHVpbnQ2NF90IGVwYywgdWludDY0X3QgdHZh
bCwgY29uc3QgY2hhciAqZGVzYykgImhhcnQ6JSJQUklkNjQiLCBhc3luYzolZCwgY2F1c2U6JSJQ
UklkNjQiLCBlcGM6MHglIlBSSXg2NCIsIHR2YWw6MHglIlBSSXg2NCIsIGRlc2M9JXMiCiAKICMg
cG1wLmMKZGlmZiAtLWdpdCBhL3RyYWNlLWV2ZW50cyBiL3RyYWNlLWV2ZW50cwppbmRleCA1ODgy
YzJkNWZjLi5hYzdjZWY5MzM1IDEwMDY0NAotLS0gYS90cmFjZS1ldmVudHMKKysrIGIvdHJhY2Ut
ZXZlbnRzCkBAIC0zNiw2ICszNiw4IEBAIGRtYV9tYXBfd2FpdCh2b2lkICpkYnMpICJkYnM9JXAi
CiBmaW5kX3JhbV9vZmZzZXQodWludDY0X3Qgc2l6ZSwgdWludDY0X3Qgb2Zmc2V0KSAic2l6ZTog
MHglIiBQUkl4NjQgIiBAIDB4JSIgUFJJeDY0CiBmaW5kX3JhbV9vZmZzZXRfbG9vcCh1aW50NjRf
dCBzaXplLCB1aW50NjRfdCBjYW5kaWRhdGUsIHVpbnQ2NF90IG9mZnNldCwgdWludDY0X3QgbmV4
dCwgdWludDY0X3QgbWluZ2FwKSAidHJ5aW5nIHNpemU6IDB4JSIgUFJJeDY0ICIgQCAweCUiIFBS
SXg2NCAiLCBvZmZzZXQ6IDB4JSIgUFJJeDY0IiBuZXh0OiAweCUiIFBSSXg2NCAiIG1pbmdhcDog
MHglIiBQUkl4NjQKIHJhbV9ibG9ja19kaXNjYXJkX3JhbmdlKGNvbnN0IGNoYXIgKnJibmFtZSwg
dm9pZCAqaHZhLCBzaXplX3QgbGVuZ3RoLCBib29sIG5lZWRfbWFkdmlzZSwgYm9vbCBuZWVkX2Zh
bGxvY2F0ZSwgaW50IHJldCkgIiVzQCVwICsgMHgleng6IG1hZHZpc2U6ICVkIGZhbGxvY2F0ZTog
JWQgcmV0OiAlZCIKKworIyBhY2NlbC90Y2cvY3B1dGxiLmMKIG1lbW9yeV9ub3RkaXJ0eV93cml0
ZV9hY2Nlc3ModWludDY0X3QgdmFkZHIsIHVpbnQ2NF90IHJhbV9hZGRyLCB1bnNpZ25lZCBzaXpl
KSAiMHglIiBQUkl4NjQgIiByYW1fYWRkciAweCUiIFBSSXg2NCAiIHNpemUgJXUiCiBtZW1vcnlf
bm90ZGlydHlfc2V0X2RpcnR5KHVpbnQ2NF90IHZhZGRyKSAiMHglIiBQUkl4NjQKIApAQCAtMTM0
LDggKzEzNiw3IEBAIHZjcHUgZ3Vlc3RfY3B1X3Jlc2V0KHZvaWQpCiAjIFRhcmdldHM6IFRDRyhh
bGwpCiB2Y3B1IHRjZyBndWVzdF9tZW1fYmVmb3JlKFRDR3YgdmFkZHIsIHVpbnQxNl90IGluZm8p
ICJpbmZvPSVkIiwgInZhZGRyPTB4JTAxNiJQUkl4NjQiIGluZm89JWQiCiAKLSMgbGludXgtdXNl
ci9zeXNjYWxsLmMKLSMgYnNkLXVzZXIvc3lzY2FsbC5jCisjIGluY2x1ZGUvdXNlci9zeXNjYWxs
LXRyYWNlLmgKIAogIyBAbnVtOiBTeXN0ZW0gY2FsbCBudW1iZXIuCiAjIEBhcmcqOiBTeXN0ZW0g
Y2FsbCBhcmd1bWVudCB2YWx1ZS4KZGlmZiAtLWdpdCBhL3VpL3RyYWNlLWV2ZW50cyBiL3VpL3Ry
YWNlLWV2ZW50cwppbmRleCA1MzY3ZmQzZjE2Li5iN2Q3MjcwYzAyIDEwMDY0NAotLS0gYS91aS90
cmFjZS1ldmVudHMKKysrIGIvdWkvdHJhY2UtZXZlbnRzCkBAIC0xNyw5ICsxNyw5IEBAIGRpc3Bs
YXljaGFuZ2VsaXN0ZW5lcl9yZWdpc3Rlcih2b2lkICpkY2wsIGNvbnN0IGNoYXIgKm5hbWUpICIl
cCBbICVzIF0iCiBkaXNwbGF5Y2hhbmdlbGlzdGVuZXJfdW5yZWdpc3Rlcih2b2lkICpkY2wsIGNv
bnN0IGNoYXIgKm5hbWUpICIlcCBbICVzIF0iCiBwcG1fc2F2ZShpbnQgZmQsIHZvaWQgKmRpc3Bs
YXlfc3VyZmFjZSkgImZkPSVkIHN1cmZhY2U9JXAiCiAKLSMgZ3RrLmMKLSMgZ3RrLWdsLWFyZWEu
YwogIyBndGstZWdsLmMKKyMgZ3RrLWdsLWFyZWEuYworIyBndGsuYwogZ2Rfc3dpdGNoKGNvbnN0
IGNoYXIgKnRhYiwgaW50IHdpZHRoLCBpbnQgaGVpZ2h0KSAidGFiPSVzLCB3aWR0aD0lZCwgaGVp
Z2h0PSVkIgogZ2RfdXBkYXRlKGNvbnN0IGNoYXIgKnRhYiwgaW50IHgsIGludCB5LCBpbnQgdywg
aW50IGgpICJ0YWI9JXMsIHg9JWQsIHk9JWQsIHc9JWQsIGg9JWQiCiBnZF9rZXlfZXZlbnQoY29u
c3QgY2hhciAqdGFiLCBpbnQgZ2RrX2tleWNvZGUsIGludCBxa2V5Y29kZSwgY29uc3QgY2hhciAq
YWN0aW9uKSAidGFiPSVzLCB0cmFuc2xhdGVkIEdESyBrZXljb2RlICVkIHRvIFFLZXlDb2RlICVk
ICglcykiCkBAIC0yOCw4ICsyOCw4IEBAIGdkX3VuZ3JhYihjb25zdCBjaGFyICp0YWIsIGNvbnN0
IGNoYXIgKmRldmljZSkgInRhYj0lcywgZGV2PSVzIgogZ2Rfa2V5bWFwX3dpbmRvd2luZyhjb25z
dCBjaGFyICpuYW1lKSAiYmFja2VuZD0lcyIKIAogIyB2bmMtYXV0aC1zYXNsLmMKLSMgdm5jLXdz
LmMKICMgdm5jLWF1dGgtdmVuY3J5cHQuYworIyB2bmMtd3MuYwogIyB2bmMuYwogdm5jX2tleV9n
dWVzdF9sZWRzKGJvb2wgY2FwcywgYm9vbCBudW0sIGJvb2wgc2Nyb2xsKSAiY2FwcyAlZCwgbnVt
ICVkLCBzY3JvbGwgJWQiCiB2bmNfa2V5X21hcF9pbml0KGNvbnN0IGNoYXIgKmxheW91dCkgIiVz
IgpkaWZmIC0tZ2l0IGEvdXRpbC90cmFjZS1ldmVudHMgYi91dGlsL3RyYWNlLWV2ZW50cwppbmRl
eCBkOWEwYjRmOGM2Li40ZTg5NGFhOWMzIDEwMDY0NAotLS0gYS91dGlsL3RyYWNlLWV2ZW50cwor
KysgYi91dGlsL3RyYWNlLWV2ZW50cwpAQCAtNDQsOCArNDQsOCBAQCBxZW11X2NvX211dGV4X2xv
Y2tfcmV0dXJuKHZvaWQgKm11dGV4LCB2b2lkICpzZWxmKSAibXV0ZXggJXAgc2VsZiAlcCIKIHFl
bXVfY29fbXV0ZXhfdW5sb2NrX2VudHJ5KHZvaWQgKm11dGV4LCB2b2lkICpzZWxmKSAibXV0ZXgg
JXAgc2VsZiAlcCIKIHFlbXVfY29fbXV0ZXhfdW5sb2NrX3JldHVybih2b2lkICptdXRleCwgdm9p
ZCAqc2VsZikgIm11dGV4ICVwIHNlbGYgJXAiCiAKLSMgb3NsaWItd2luMzIuYwogIyBvc2xpYi1w
b3NpeC5jCisjIG9zbGliLXdpbjMyLmMKIHFlbXVfbWVtYWxpZ24oc2l6ZV90IGFsaWdubWVudCwg
c2l6ZV90IHNpemUsIHZvaWQgKnB0cikgImFsaWdubWVudCAlenUgc2l6ZSAlenUgcHRyICVwIgog
cWVtdV9hbm9uX3JhbV9hbGxvYyhzaXplX3Qgc2l6ZSwgdm9pZCAqcHRyKSAic2l6ZSAlenUgcHRy
ICVwIgogcWVtdV92ZnJlZSh2b2lkICpwdHIpICJwdHIgJXAiCkBAIC03MCw2ICs3MCw4IEBAIGxv
Y2tjbnRfZnV0ZXhfd2FrZShjb25zdCB2b2lkICpsb2NrY250KSAibG9ja2NudCAlcCB3YWtpbmcg
dXAgb25lIHdhaXRlciIKIHNvY2tldF9saXN0ZW4oaW50IG51bSkgImJhY2tsb2c6ICVkIgogCiAj
IHFlbXUtdGhyZWFkLWNvbW1vbi5oCisjIHFlbXUtdGhyZWFkLXBvc2l4LmMKKyMgcWVtdS10aHJl
YWQtd2luMzIuYwogcWVtdV9tdXRleF9sb2NrKHZvaWQgKm11dGV4LCBjb25zdCBjaGFyICpmaWxl
LCBjb25zdCBpbnQgbGluZSkgIndhaXRpbmcgb24gbXV0ZXggJXAgKCVzOiVkKSIKIHFlbXVfbXV0
ZXhfbG9ja2VkKHZvaWQgKm11dGV4LCBjb25zdCBjaGFyICpmaWxlLCBjb25zdCBpbnQgbGluZSkg
InRha2VuIG11dGV4ICVwICglczolZCkiCiBxZW11X211dGV4X3VubG9jayh2b2lkICptdXRleCwg
Y29uc3QgY2hhciAqZmlsZSwgY29uc3QgaW50IGxpbmUpICJyZWxlYXNlZCBtdXRleCAlcCAoJXM6
JWQpIgotLSAKMi4yNi4yCgo=


