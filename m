Return-Path: <qemu-devel-bounces+lists+qemu-devel=lfdr.de@nongnu.org>
X-Original-To: lists+qemu-devel@lfdr.de
Delivered-To: lists+qemu-devel@lfdr.de
Received: from lists.gnu.org (lists.gnu.org [209.51.188.17])
	by mail.lfdr.de (Postfix) with ESMTPS id 929BB25A93F
	for <lists+qemu-devel@lfdr.de>; Wed,  2 Sep 2020 12:17:09 +0200 (CEST)
Received: from localhost ([::1]:54290 helo=lists1p.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.90_1)
	(envelope-from <qemu-devel-bounces+lists+qemu-devel=lfdr.de@nongnu.org>)
	id 1kDPpE-0004Sj-FZ
	for lists+qemu-devel@lfdr.de; Wed, 02 Sep 2020 06:17:08 -0400
Received: from eggs.gnu.org ([2001:470:142:3::10]:48146)
 by lists.gnu.org with esmtps (TLS1.2:ECDHE_RSA_AES_256_GCM_SHA384:256)
 (Exim 4.90_1) (envelope-from <no-reply@patchew.org>)
 id 1kDPoU-0003wc-DS
 for qemu-devel@nongnu.org; Wed, 02 Sep 2020 06:16:22 -0400
Resent-Date: Wed, 02 Sep 2020 06:16:22 -0400
Resent-Message-Id: <E1kDPoU-0003wc-DS@lists.gnu.org>
Received: from sender4-of-o53.zoho.com ([136.143.188.53]:21364)
 by eggs.gnu.org with esmtps (TLS1.2:ECDHE_RSA_AES_256_CBC_SHA1:256)
 (Exim 4.90_1) (envelope-from <no-reply@patchew.org>)
 id 1kDPoP-00026N-4R
 for qemu-devel@nongnu.org; Wed, 02 Sep 2020 06:16:21 -0400
ARC-Seal: i=1; a=rsa-sha256; t=1599041771; cv=none; 
 d=zohomail.com; s=zohoarc; 
 b=WHTkmDKO1hQU+F1jM0QL7RdaCrNcuxYhHpdeltWby+zOVs/aobRx2/LIwP1rBjV5sjMHmpoerUcP1x7CyySeoEhJA+usCecz3+2BfVeEcLjLI3uE6xjUzi/6OV3nBZ+W4owxQ9TUl7b3nUs2z830lSROz+EHzkzM/UlkwKkZuXM=
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=zohomail.com;
 s=zohoarc; t=1599041771;
 h=Content-Type:Content-Transfer-Encoding:Cc:Date:From:In-Reply-To:MIME-Version:Message-ID:Reply-To:Subject:To;
 bh=OdPq3iz5DNqK5xXK5OgDjEDBagistPMKbCS/4lTpc5o=; 
 b=gBid9w3nuwVmskNBMgv+p/gNJcdZuRvkLDQw1SIZUmAEbYLny9O6ZTQpXDeXH8imJebsd8cbY2Lo7uf4kOuhPu5M14i7IZS1ccvKPZ2exV/XqJcc3Vhnl/TrgaFdu9JClwL+PWoxhm4WjTRA9FkCyvzjrddl2jDygHccELXRIUU=
ARC-Authentication-Results: i=1; mx.zohomail.com;
 spf=pass  smtp.mailfrom=no-reply@patchew.org;
 dmarc=pass header.from=<no-reply@patchew.org>
 header.from=<no-reply@patchew.org>
Received: from [172.17.0.3] (23.253.156.214 [23.253.156.214]) by
 mx.zohomail.com with SMTPS id 1599041770640728.4265588846557;
 Wed, 2 Sep 2020 03:16:10 -0700 (PDT)
Subject: Re: [PULL 00/47] target-arm queue
Message-ID: <159904176961.21843.17769338973288236442@66eaa9a8a123>
In-Reply-To: <20200901151823.29785-1-peter.maydell@linaro.org>
MIME-Version: 1.0
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Resent-From: 
From: no-reply@patchew.org
To: peter.maydell@linaro.org
Date: Wed, 2 Sep 2020 03:16:10 -0700 (PDT)
X-ZohoMailClient: External
Received-SPF: pass client-ip=136.143.188.53; envelope-from=no-reply@patchew.org;
 helo=sender4-of-o53.zoho.com
X-detected-operating-system: by eggs.gnu.org: First seen = 2020/09/02 06:16:14
X-ACL-Warn: Detected OS   = Linux 3.11 and newer [fuzzy]
X-Spam_score_int: -18
X-Spam_score: -1.9
X-Spam_bar: -
X-Spam_report: (-1.9 / 5.0 requ) BAYES_00=-1.9, RCVD_IN_DNSWL_NONE=-0.0001,
 RCVD_IN_MSPIKE_H4=0.001, RCVD_IN_MSPIKE_WL=0.001, SPF_HELO_NONE=0.001,
 SPF_PASS=-0.001 autolearn=ham autolearn_force=no
X-Spam_action: no action
X-BeenThere: qemu-devel@nongnu.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: <qemu-devel.nongnu.org>
List-Unsubscribe: <https://lists.nongnu.org/mailman/options/qemu-devel>,
 <mailto:qemu-devel-request@nongnu.org?subject=unsubscribe>
List-Archive: <https://lists.nongnu.org/archive/html/qemu-devel>
List-Post: <mailto:qemu-devel@nongnu.org>
List-Help: <mailto:qemu-devel-request@nongnu.org?subject=help>
List-Subscribe: <https://lists.nongnu.org/mailman/listinfo/qemu-devel>,
 <mailto:qemu-devel-request@nongnu.org?subject=subscribe>
Reply-To: qemu-devel@nongnu.org
Cc: qemu-devel@nongnu.org
Errors-To: qemu-devel-bounces+lists+qemu-devel=lfdr.de@nongnu.org
Sender: "Qemu-devel" <qemu-devel-bounces+lists+qemu-devel=lfdr.de@nongnu.org>

UGF0Y2hldyBVUkw6IGh0dHBzOi8vcGF0Y2hldy5vcmcvUUVNVS8yMDIwMDkwMTE1MTgyMy4yOTc4
NS0xLXBldGVyLm1heWRlbGxAbGluYXJvLm9yZy8KCgoKSGksCgpUaGlzIHNlcmllcyBzZWVtcyB0
byBoYXZlIHNvbWUgY29kaW5nIHN0eWxlIHByb2JsZW1zLiBTZWUgb3V0cHV0IGJlbG93IGZvcgpt
b3JlIGluZm9ybWF0aW9uOgoKVHlwZTogc2VyaWVzCk1lc3NhZ2UtaWQ6IDIwMjAwOTAxMTUxODIz
LjI5Nzg1LTEtcGV0ZXIubWF5ZGVsbEBsaW5hcm8ub3JnClN1YmplY3Q6IFtQVUxMIDAwLzQ3XSB0
YXJnZXQtYXJtIHF1ZXVlCgo9PT0gVEVTVCBTQ1JJUFQgQkVHSU4gPT09CiMhL2Jpbi9iYXNoCmdp
dCByZXYtcGFyc2UgYmFzZSA+IC9kZXYvbnVsbCB8fCBleGl0IDAKZ2l0IGNvbmZpZyAtLWxvY2Fs
IGRpZmYucmVuYW1lbGltaXQgMApnaXQgY29uZmlnIC0tbG9jYWwgZGlmZi5yZW5hbWVzIFRydWUK
Z2l0IGNvbmZpZyAtLWxvY2FsIGRpZmYuYWxnb3JpdGhtIGhpc3RvZ3JhbQouL3NjcmlwdHMvY2hl
Y2twYXRjaC5wbCAtLW1haWxiYWNrIGJhc2UuLgo9PT0gVEVTVCBTQ1JJUFQgRU5EID09PQoKVXBk
YXRpbmcgM2M4Y2Y1YTljMjFmZjg3ODIxNjRkMWRlZjdmNDRiZDg4ODcxMzM4NApGcm9tIGh0dHBz
Oi8vZ2l0aHViLmNvbS9wYXRjaGV3LXByb2plY3QvcWVtdQogKiBbbmV3IHRhZ10gICAgICAgICBw
YXRjaGV3LzE1OTkwMzQ1NDcxNC4yODUwOS43NDM5NDUzMzA5MTE2NzM0Mzc0LnN0Z2l0QHBhc2hh
LVRoaW5rUGFkLVgyODAgLT4gcGF0Y2hldy8xNTk5MDM0NTQ3MTQuMjg1MDkuNzQzOTQ1MzMwOTEx
NjczNDM3NC5zdGdpdEBwYXNoYS1UaGlua1BhZC1YMjgwCiAtIFt0YWcgdXBkYXRlXSAgICAgIHBh
dGNoZXcvMjAyMDA4MjgxMDQxMDIuNDQ5MC0xLWFobWVka2hhbGVka2FyYW1hbkBnbWFpbC5jb20g
LT4gcGF0Y2hldy8yMDIwMDgyODEwNDEwMi40NDkwLTEtYWhtZWRraGFsZWRrYXJhbWFuQGdtYWls
LmNvbQogLSBbdGFnIHVwZGF0ZV0gICAgICBwYXRjaGV3LzIwMjAwOTAxMTAxOTUxLjg1ODkyLTEt
ZjRidWdAYW1zYXQub3JnIC0+IHBhdGNoZXcvMjAyMDA5MDExMDE5NTEuODU4OTItMS1mNGJ1Z0Bh
bXNhdC5vcmcKIC0gW3RhZyB1cGRhdGVdICAgICAgcGF0Y2hldy8yMDIwMDkwMTE0MzQyNC44ODQ3
MzUtMS1tcmVpdHpAcmVkaGF0LmNvbSAtPiBwYXRjaGV3LzIwMjAwOTAxMTQzNDI0Ljg4NDczNS0x
LW1yZWl0ekByZWRoYXQuY29tCiAtIFt0YWcgdXBkYXRlXSAgICAgIHBhdGNoZXcvMjAyMDA5MDIw
ODA1NTIuMTU5ODA2LTEtcGhpbG1kQHJlZGhhdC5jb20gLT4gcGF0Y2hldy8yMDIwMDkwMjA4MDU1
Mi4xNTk4MDYtMS1waGlsbWRAcmVkaGF0LmNvbQogKiBbbmV3IHRhZ10gICAgICAgICBwYXRjaGV3
LzIwMjAwOTAyMDgwODAxLjE2MDY1Mi0xLXBoaWxtZEByZWRoYXQuY29tIC0+IHBhdGNoZXcvMjAy
MDA5MDIwODA4MDEuMTYwNjUyLTEtcGhpbG1kQHJlZGhhdC5jb20KICogW25ldyB0YWddICAgICAg
ICAgcGF0Y2hldy8yMDIwMDkwMjA4MDkwOS4xNjEwMzQtMS1waGlsbWRAcmVkaGF0LmNvbSAtPiBw
YXRjaGV3LzIwMjAwOTAyMDgwOTA5LjE2MTAzNC0xLXBoaWxtZEByZWRoYXQuY29tCiAqIFtuZXcg
dGFnXSAgICAgICAgIHBhdGNoZXcvMjAyMDA5MDIwODE0NDUuMzI5MS0xLWtyYXhlbEByZWRoYXQu
Y29tIC0+IHBhdGNoZXcvMjAyMDA5MDIwODE0NDUuMzI5MS0xLWtyYXhlbEByZWRoYXQuY29tClN3
aXRjaGVkIHRvIGEgbmV3IGJyYW5jaCAndGVzdCcKODY3ZjEyZSBody9hcm0vc2JzYS1yZWYgOiBB
ZGQgZW1iZWRkZWQgY29udHJvbGxlciBpbiBzZWN1cmUgbWVtb3J5CmVmOWI5Y2IgaHcvbWlzYy9z
YnNhX2VjIDogQWRkIGFuIGVtYmVkZGVkIGNvbnRyb2xsZXIgZm9yIHNic2EtcmVmCjg0NWY0OGEg
aHcvYXJtL3Nic2EtcmVmOiBhZGQgInJlZyIgcHJvcGVydHkgdG8gRFQgY3B1IG5vZGVzCjNjYWMy
OTAgdGFyZ2V0L2FybTogRW5hYmxlIEZQMTYgaW4gJy1jcHUgbWF4Jwo3YWMxMzA1IHRhcmdldC9h
cm06IEltcGxlbWVudCBmcDE2IGZvciBOZW9uIFZNVUwsIFZNTEEsIFZNTFMKOGU3ZDllMyB0YXJn
ZXQvYXJtL3ZlY19oZWxwZXI6IEFkZCBndmVjIGZwIGluZGV4ZWQgbXVsdGlwbHktYW5kLWFkZCBv
cGVyYXRpb25zCjJmYjM0MjQgdGFyZ2V0L2FybS92ZWNfaGVscGVyOiBIYW5kbGUgb3Byc3ogbGVz
cyB0aGFuIDE2IGJ5dGVzIGluIGluZGV4ZWQgb3BlcmF0aW9ucwpkYjcxOWY5IHRhcmdldC9hcm06
IEltcGxlbWVudCBmcDE2IGZvciBOZW9uIFZSSU5UWAowN2Q2ZjAyIHRhcmdldC9hcm06IEltcGxl
bWVudCBmcDE2IGZvciBOZW9uIFZSSU5ULXdpdGgtc3BlY2lmaWVkLXJvdW5kaW5nLW1vZGUKMDQ4
MDk4NCB0YXJnZXQvYXJtOiBJbXBsZW1lbnQgZnAxNiBmb3IgTmVvbiBWQ1ZUIHdpdGggcm91bmRp
bmcgbW9kZXMKNmZhMTFmYiB0YXJnZXQvYXJtOiBJbXBsZW1lbnQgZnAxNiBmb3IgTmVvbiBWQ1ZU
IGZpeGVkLXBvaW50CjlhNzUyMmEgdGFyZ2V0L2FybTogQ29udmVydCBOZW9uIFZDVlQgZml4ZWQt
cG9pbnQgdG8gZ3ZlYwpkZmYwNDAyIHRhcmdldC9hcm06IEltcGxlbWVudCBmcDE2IGZvciBOZW9u
IGZsb2F0LWludGVnZXIgVkNWVAo3OGJkYTg5IHRhcmdldC9hcm06IEltcGxlbWVudCBmcDE2IGZv
ciBOZW9uIHBhaXJ3aXNlIGZwIG9wcwo3Y2MzMThlIHRhcmdldC9hcm06IEltcGxlbWVudCBmcDE2
IGZvciBOZW9uIFZSU1FSVFMKNTY2MmY0MCB0YXJnZXQvYXJtOiBJbXBsZW1lbnQgZnAxNiBmb3Ig
TmVvbiBWUkVDUFMKOTQzYjkyNiB0YXJnZXQvYXJtOiBJbXBsZW1lbnQgZnAxNiBmb3IgTmVvbiBm
cCBjb21wYXJlLXZzLTAKM2EwZDEyMSB0YXJnZXQvYXJtOiBJbXBsZW1lbnQgZnAxNiBmb3IgTmVv
biBWRk1BLCBWTUZTCmZmNWI0MmMgdGFyZ2V0L2FybTogSW1wbGVtZW50IGZwMTYgZm9yIE5lb24g
Vk1MQSwgVk1MUyBvcGVyYXRpb25zCmE2MTEyYmEgdGFyZ2V0L2FybTogSW1wbGVtZW50IGZwMTYg
Zm9yIE5lb24gVk1BWE5NLCBWTUlOTk0KZDJlNmFkZCB0YXJnZXQvYXJtOiBJbXBsZW1lbnQgZnAx
NiBmb3IgTmVvbiBWTUFYLCBWTUlOCmRiODNmNjQgdGFyZ2V0L2FybTogSW1wbGVtZW50IGZwMTYg
Zm9yIFZBQ0dFLCBWQUNHVAphZThhOWYzIHRhcmdldC9hcm06IEltcGxlbWVudCBmcDE2IGZvciBW
Q0VRLCBWQ0dFLCBWQ0dUIGNvbXBhcmlzb25zCjYzODNhNjcgdGFyZ2V0L2FybTogSW1wbGVtZW50
IGZwMTYgZm9yIE5lb24gVkFCUywgVk5FRyBvZiBmbG9hdHMKYWE5ZmVjYyB0YXJnZXQvYXJtOiBJ
bXBsZW1lbnQgZnAxNiBmb3IgTmVvbiBWUkVDUEUsIFZSU1FSVEUgdXNpbmcgZ3ZlYwpjY2M5ZTZl
IHRhcmdldC9hcm06IEltcGxlbWVudCBGUDE2IGZvciBOZW9uIFZBREQsIFZTVUIsIFZBQkQsIFZN
VUwKZmU3ODJjMSB0YXJnZXQvYXJtOiBJbXBsZW1lbnQgVkZQIGZwMTYgVk1PViBiZXR3ZWVuIGdw
IGFuZCBoYWxmcHJlYyByZWdpc3RlcnMKNzdjYTU3YyB0YXJnZXQvYXJtOiBJbXBsZW1lbnQgbmV3
IFZGUCBmcDE2IGluc24gVk1PVlgKOTJhYmE0OCB0YXJnZXQvYXJtOiBJbXBsZW1lbnQgbmV3IFZG
UCBmcDE2IGluc24gVklOUwplZTJkZTQ1IHRhcmdldC9hcm06IEltcGxlbWVudCBWRlAgZnAxNiBW
UklOVCoKM2MxOGU4NSB0YXJnZXQvYXJtOiBJbXBsZW1lbnQgVkZQIGZwMTYgVlNFTAowNjU5MGMz
IHRhcmdldC9hcm06IEltcGxlbWVudCBWRlAgdnAxNiBWQ1ZULXdpdGgtc3BlY2lmaWVkLXJvdW5k
aW5nLW1vZGUKYmM0MjFkNSB0YXJnZXQvYXJtOiBJbXBsZW1lbnQgVkZQIGZwMTYgVkNWVCBiZXR3
ZWVuIGZsb2F0IGFuZCBmaXhlZC1wb2ludAphZDFjYjgxIHRhcmdldC9hcm06IFVzZSBtYWNyb3Mg
aW5zdGVhZCBvZiBvcGVuLWNvZGluZyBmcDE2IGNvbnZlcnNpb24gaGVscGVycwo5M2Y3ZDllIHRh
cmdldC9hcm06IE1ha2UgVkZQX0NPTlZfRklYIG1hY3JvcyB0YWtlIHNlcGFyYXRlIGZsb2F0IHR5
cGUgYW5kIGZsb2F0IHNpemUKOWMzNGRmOCB0YXJnZXQvYXJtOiBJbXBsZW1lbnQgVkZQIGZwMTYg
VkNWVCBiZXR3ZWVuIGZsb2F0IGFuZCBpbnRlZ2VyCjMyNDMxYjcgdGFyZ2V0L2FybTogSW1wbGVt
ZW50IFZGUCBmcDE2IFZMRFIgYW5kIFZTVFIKOWU3YWQ4ZCB0YXJnZXQvYXJtOiBJbXBsZW1lbnQg
VkZQIGZwMTYgVkNNUAoyMTllNWU3IHRhcmdldC9hcm06IEltcGxlbWVudCBWRlAgZnAxNiBmb3Ig
Vk1PViBpbW1lZGlhdGUKMTY2MjVhYiB0YXJnZXQvYXJtOiBJbXBsZW1lbnQgVkZQIGZwMTYgZm9y
IFZBQlMsIFZORUcsIFZTUVJUCmFmNzhhZjAgdGFyZ2V0L2FybTogTWFjcm9pZnkgdXNlcyBvZiBk
b192ZnBfMm9wX3NwKCkgYW5kIGRvX3ZmcF8yb3BfZHAoKQo3OTBjNjgzIHRhcmdldC9hcm06IElt
cGxlbWVudCBWRlAgZnAxNiBmb3IgZnVzZWQtbXVsdGlwbHktYWRkCjAzMDExZWQgdGFyZ2V0L2Fy
bTogTWFjcm9pZnkgdHJhbnMgZnVuY3Rpb25zIGZvciBWRk1BLCBWRk1TLCBWRk5NQSwgVkZOTVMK
OWU4NjY2ZiB0YXJnZXQvYXJtOiBJbXBsZW1lbnQgVkZQIGZwMTYgVk1MQSwgVk1MUywgVk5NTFMs
IFZOTUxBLCBWTk1VTApkYzA3ZWYwIHRhcmdldC9hcm06IEltcGxlbWVudCBWRlAgZnAxNiBmb3Ig
VkZQX0JJTk9QIG9wZXJhdGlvbnMKZWFjM2ZjMCB0YXJnZXQvYXJtOiBVc2UgY29ycmVjdCBJRCBy
ZWdpc3RlciBjaGVjayBmb3IgYWEzMl9mcDE2X2FyaXRoCjM0OGFjYzkgdGFyZ2V0L2FybTogUmVt
b3ZlIGxvY2FsIGRlZmluaXRpb25zIG9mIGZsb2F0IGNvbnN0YW50cwoKPT09IE9VVFBVVCBCRUdJ
TiA9PT0KMS80NyBDaGVja2luZyBjb21taXQgMzQ4YWNjOWM1ODhlICh0YXJnZXQvYXJtOiBSZW1v
dmUgbG9jYWwgZGVmaW5pdGlvbnMgb2YgZmxvYXQgY29uc3RhbnRzKQoyLzQ3IENoZWNraW5nIGNv
bW1pdCBlYWMzZmMwYjhkMzIgKHRhcmdldC9hcm06IFVzZSBjb3JyZWN0IElEIHJlZ2lzdGVyIGNo
ZWNrIGZvciBhYTMyX2ZwMTZfYXJpdGgpCjMvNDcgQ2hlY2tpbmcgY29tbWl0IGRjMDdlZjA5YTQ5
OCAodGFyZ2V0L2FybTogSW1wbGVtZW50IFZGUCBmcDE2IGZvciBWRlBfQklOT1Agb3BlcmF0aW9u
cykKNC80NyBDaGVja2luZyBjb21taXQgOWU4NjY2ZmIyMmQ1ICh0YXJnZXQvYXJtOiBJbXBsZW1l
bnQgVkZQIGZwMTYgVk1MQSwgVk1MUywgVk5NTFMsIFZOTUxBLCBWTk1VTCkKNS80NyBDaGVja2lu
ZyBjb21taXQgMDMwMTFlZGM2Zjg1ICh0YXJnZXQvYXJtOiBNYWNyb2lmeSB0cmFucyBmdW5jdGlv
bnMgZm9yIFZGTUEsIFZGTVMsIFZGTk1BLCBWRk5NUykKNi80NyBDaGVja2luZyBjb21taXQgNzkw
YzY4M2Q2NTRlICh0YXJnZXQvYXJtOiBJbXBsZW1lbnQgVkZQIGZwMTYgZm9yIGZ1c2VkLW11bHRp
cGx5LWFkZCkKNy80NyBDaGVja2luZyBjb21taXQgYWY3OGFmMDVhNjZiICh0YXJnZXQvYXJtOiBN
YWNyb2lmeSB1c2VzIG9mIGRvX3ZmcF8yb3Bfc3AoKSBhbmQgZG9fdmZwXzJvcF9kcCgpKQo4LzQ3
IENoZWNraW5nIGNvbW1pdCAxNjYyNWFiYzA1NjkgKHRhcmdldC9hcm06IEltcGxlbWVudCBWRlAg
ZnAxNiBmb3IgVkFCUywgVk5FRywgVlNRUlQpCjkvNDcgQ2hlY2tpbmcgY29tbWl0IDIxOWU1ZTc0
NzZmMSAodGFyZ2V0L2FybTogSW1wbGVtZW50IFZGUCBmcDE2IGZvciBWTU9WIGltbWVkaWF0ZSkK
MTAvNDcgQ2hlY2tpbmcgY29tbWl0IDllN2FkOGQxMjU3ZCAodGFyZ2V0L2FybTogSW1wbGVtZW50
IFZGUCBmcDE2IFZDTVApCjExLzQ3IENoZWNraW5nIGNvbW1pdCAzMjQzMWI3ZGEwZTQgKHRhcmdl
dC9hcm06IEltcGxlbWVudCBWRlAgZnAxNiBWTERSIGFuZCBWU1RSKQoxMi80NyBDaGVja2luZyBj
b21taXQgOWMzNGRmOGMyZTA2ICh0YXJnZXQvYXJtOiBJbXBsZW1lbnQgVkZQIGZwMTYgVkNWVCBi
ZXR3ZWVuIGZsb2F0IGFuZCBpbnRlZ2VyKQoxMy80NyBDaGVja2luZyBjb21taXQgOTNmN2Q5ZTIz
YjQ4ICh0YXJnZXQvYXJtOiBNYWtlIFZGUF9DT05WX0ZJWCBtYWNyb3MgdGFrZSBzZXBhcmF0ZSBm
bG9hdCB0eXBlIGFuZCBmbG9hdCBzaXplKQoxNC80NyBDaGVja2luZyBjb21taXQgYWQxY2I4MWRi
NWM3ICh0YXJnZXQvYXJtOiBVc2UgbWFjcm9zIGluc3RlYWQgb2Ygb3Blbi1jb2RpbmcgZnAxNiBj
b252ZXJzaW9uIGhlbHBlcnMpCjE1LzQ3IENoZWNraW5nIGNvbW1pdCBiYzQyMWQ1M2I3OTYgKHRh
cmdldC9hcm06IEltcGxlbWVudCBWRlAgZnAxNiBWQ1ZUIGJldHdlZW4gZmxvYXQgYW5kIGZpeGVk
LXBvaW50KQoxNi80NyBDaGVja2luZyBjb21taXQgMDY1OTBjMzFkZTY5ICh0YXJnZXQvYXJtOiBJ
bXBsZW1lbnQgVkZQIHZwMTYgVkNWVC13aXRoLXNwZWNpZmllZC1yb3VuZGluZy1tb2RlKQoxNy80
NyBDaGVja2luZyBjb21taXQgM2MxOGU4NWJiNDJiICh0YXJnZXQvYXJtOiBJbXBsZW1lbnQgVkZQ
IGZwMTYgVlNFTCkKMTgvNDcgQ2hlY2tpbmcgY29tbWl0IGVlMmRlNDVjYTVmYSAodGFyZ2V0L2Fy
bTogSW1wbGVtZW50IFZGUCBmcDE2IFZSSU5UKikKMTkvNDcgQ2hlY2tpbmcgY29tbWl0IDkyYWJh
NDgxMzBhYSAodGFyZ2V0L2FybTogSW1wbGVtZW50IG5ldyBWRlAgZnAxNiBpbnNuIFZJTlMpCjIw
LzQ3IENoZWNraW5nIGNvbW1pdCA3N2NhNTdjNzMyMGYgKHRhcmdldC9hcm06IEltcGxlbWVudCBu
ZXcgVkZQIGZwMTYgaW5zbiBWTU9WWCkKMjEvNDcgQ2hlY2tpbmcgY29tbWl0IGZlNzgyYzFjMGIw
NyAodGFyZ2V0L2FybTogSW1wbGVtZW50IFZGUCBmcDE2IFZNT1YgYmV0d2VlbiBncCBhbmQgaGFs
ZnByZWMgcmVnaXN0ZXJzKQoyMi80NyBDaGVja2luZyBjb21taXQgY2NjOWU2ZWEyMWJkICh0YXJn
ZXQvYXJtOiBJbXBsZW1lbnQgRlAxNiBmb3IgTmVvbiBWQURELCBWU1VCLCBWQUJELCBWTVVMKQoy
My80NyBDaGVja2luZyBjb21taXQgYWE5ZmVjY2FlNWRmICh0YXJnZXQvYXJtOiBJbXBsZW1lbnQg
ZnAxNiBmb3IgTmVvbiBWUkVDUEUsIFZSU1FSVEUgdXNpbmcgZ3ZlYykKMjQvNDcgQ2hlY2tpbmcg
Y29tbWl0IDYzODNhNjdkZjBlYiAodGFyZ2V0L2FybTogSW1wbGVtZW50IGZwMTYgZm9yIE5lb24g
VkFCUywgVk5FRyBvZiBmbG9hdHMpCjI1LzQ3IENoZWNraW5nIGNvbW1pdCBhZThhOWYzNTNhMjkg
KHRhcmdldC9hcm06IEltcGxlbWVudCBmcDE2IGZvciBWQ0VRLCBWQ0dFLCBWQ0dUIGNvbXBhcmlz
b25zKQoyNi80NyBDaGVja2luZyBjb21taXQgZGI4M2Y2NDVlNzU0ICh0YXJnZXQvYXJtOiBJbXBs
ZW1lbnQgZnAxNiBmb3IgVkFDR0UsIFZBQ0dUKQoyNy80NyBDaGVja2luZyBjb21taXQgZDJlNmFk
ZDU0ZmEyICh0YXJnZXQvYXJtOiBJbXBsZW1lbnQgZnAxNiBmb3IgTmVvbiBWTUFYLCBWTUlOKQoy
OC80NyBDaGVja2luZyBjb21taXQgYTYxMTJiYTdiMDJhICh0YXJnZXQvYXJtOiBJbXBsZW1lbnQg
ZnAxNiBmb3IgTmVvbiBWTUFYTk0sIFZNSU5OTSkKV0FSTklORzogbGluZSBvdmVyIDgwIGNoYXJh
Y3RlcnMKIzIzOiBGSUxFOiB0YXJnZXQvYXJtL2hlbHBlci5oOjY1NjoKK0RFRl9IRUxQRVJfRkxB
R1NfNShndmVjX2ZtYXhudW1faCwgVENHX0NBTExfTk9fUldHLCB2b2lkLCBwdHIsIHB0ciwgcHRy
LCBwdHIsIGkzMikKCldBUk5JTkc6IGxpbmUgb3ZlciA4MCBjaGFyYWN0ZXJzCiMyNDogRklMRTog
dGFyZ2V0L2FybS9oZWxwZXIuaDo2NTc6CitERUZfSEVMUEVSX0ZMQUdTXzUoZ3ZlY19mbWF4bnVt
X3MsIFRDR19DQUxMX05PX1JXRywgdm9pZCwgcHRyLCBwdHIsIHB0ciwgcHRyLCBpMzIpCgpXQVJO
SU5HOiBsaW5lIG92ZXIgODAgY2hhcmFjdGVycwojMjY6IEZJTEU6IHRhcmdldC9hcm0vaGVscGVy
Lmg6NjU5OgorREVGX0hFTFBFUl9GTEFHU181KGd2ZWNfZm1pbm51bV9oLCBUQ0dfQ0FMTF9OT19S
V0csIHZvaWQsIHB0ciwgcHRyLCBwdHIsIHB0ciwgaTMyKQoKV0FSTklORzogbGluZSBvdmVyIDgw
IGNoYXJhY3RlcnMKIzI3OiBGSUxFOiB0YXJnZXQvYXJtL2hlbHBlci5oOjY2MDoKK0RFRl9IRUxQ
RVJfRkxBR1NfNShndmVjX2ZtaW5udW1fcywgVENHX0NBTExfTk9fUldHLCB2b2lkLCBwdHIsIHB0
ciwgcHRyLCBwdHIsIGkzMikKCnRvdGFsOiAwIGVycm9ycywgNCB3YXJuaW5ncywgNjcgbGluZXMg
Y2hlY2tlZAoKUGF0Y2ggMjgvNDcgaGFzIHN0eWxlIHByb2JsZW1zLCBwbGVhc2UgcmV2aWV3LiAg
SWYgYW55IG9mIHRoZXNlIGVycm9ycwphcmUgZmFsc2UgcG9zaXRpdmVzIHJlcG9ydCB0aGVtIHRv
IHRoZSBtYWludGFpbmVyLCBzZWUKQ0hFQ0tQQVRDSCBpbiBNQUlOVEFJTkVSUy4KMjkvNDcgQ2hl
Y2tpbmcgY29tbWl0IGZmNWI0MmM2NGQwZiAodGFyZ2V0L2FybTogSW1wbGVtZW50IGZwMTYgZm9y
IE5lb24gVk1MQSwgVk1MUyBvcGVyYXRpb25zKQozMC80NyBDaGVja2luZyBjb21taXQgM2EwZDEy
MWFhOWJlICh0YXJnZXQvYXJtOiBJbXBsZW1lbnQgZnAxNiBmb3IgTmVvbiBWRk1BLCBWTUZTKQoz
MS80NyBDaGVja2luZyBjb21taXQgOTQzYjkyNmQwZWU0ICh0YXJnZXQvYXJtOiBJbXBsZW1lbnQg
ZnAxNiBmb3IgTmVvbiBmcCBjb21wYXJlLXZzLTApCjMyLzQ3IENoZWNraW5nIGNvbW1pdCA1NjYy
ZjQwN2RkYjAgKHRhcmdldC9hcm06IEltcGxlbWVudCBmcDE2IGZvciBOZW9uIFZSRUNQUykKV0FS
TklORzogbGluZSBvdmVyIDgwIGNoYXJhY3RlcnMKIzM1OiBGSUxFOiB0YXJnZXQvYXJtL2hlbHBl
ci5oOjY3NjoKK0RFRl9IRUxQRVJfRkxBR1NfNShndmVjX3JlY3BzX25mX2gsIFRDR19DQUxMX05P
X1JXRywgdm9pZCwgcHRyLCBwdHIsIHB0ciwgcHRyLCBpMzIpCgpXQVJOSU5HOiBsaW5lIG92ZXIg
ODAgY2hhcmFjdGVycwojMzY6IEZJTEU6IHRhcmdldC9hcm0vaGVscGVyLmg6Njc3OgorREVGX0hF
TFBFUl9GTEFHU181KGd2ZWNfcmVjcHNfbmZfcywgVENHX0NBTExfTk9fUldHLCB2b2lkLCBwdHIs
IHB0ciwgcHRyLCBwdHIsIGkzMikKCnRvdGFsOiAwIGVycm9ycywgMiB3YXJuaW5ncywgMTExIGxp
bmVzIGNoZWNrZWQKClBhdGNoIDMyLzQ3IGhhcyBzdHlsZSBwcm9ibGVtcywgcGxlYXNlIHJldmll
dy4gIElmIGFueSBvZiB0aGVzZSBlcnJvcnMKYXJlIGZhbHNlIHBvc2l0aXZlcyByZXBvcnQgdGhl
bSB0byB0aGUgbWFpbnRhaW5lciwgc2VlCkNIRUNLUEFUQ0ggaW4gTUFJTlRBSU5FUlMuCjMzLzQ3
IENoZWNraW5nIGNvbW1pdCA3Y2MzMThlOWYzZWMgKHRhcmdldC9hcm06IEltcGxlbWVudCBmcDE2
IGZvciBOZW9uIFZSU1FSVFMpCldBUk5JTkc6IGxpbmUgb3ZlciA4MCBjaGFyYWN0ZXJzCiMzNDog
RklMRTogdGFyZ2V0L2FybS9oZWxwZXIuaDo2Nzg6CitERUZfSEVMUEVSX0ZMQUdTXzUoZ3ZlY19y
c3FydHNfbmZfaCwgVENHX0NBTExfTk9fUldHLCB2b2lkLCBwdHIsIHB0ciwgcHRyLCBwdHIsIGkz
MikKCldBUk5JTkc6IGxpbmUgb3ZlciA4MCBjaGFyYWN0ZXJzCiMzNTogRklMRTogdGFyZ2V0L2Fy
bS9oZWxwZXIuaDo2Nzk6CitERUZfSEVMUEVSX0ZMQUdTXzUoZ3ZlY19yc3FydHNfbmZfcywgVENH
X0NBTExfTk9fUldHLCB2b2lkLCBwdHIsIHB0ciwgcHRyLCBwdHIsIGkzMikKCnRvdGFsOiAwIGVy
cm9ycywgMiB3YXJuaW5ncywgMTEyIGxpbmVzIGNoZWNrZWQKClBhdGNoIDMzLzQ3IGhhcyBzdHls
ZSBwcm9ibGVtcywgcGxlYXNlIHJldmlldy4gIElmIGFueSBvZiB0aGVzZSBlcnJvcnMKYXJlIGZh
bHNlIHBvc2l0aXZlcyByZXBvcnQgdGhlbSB0byB0aGUgbWFpbnRhaW5lciwgc2VlCkNIRUNLUEFU
Q0ggaW4gTUFJTlRBSU5FUlMuCjM0LzQ3IENoZWNraW5nIGNvbW1pdCA3OGJkYTg5ZWQ4NjcgKHRh
cmdldC9hcm06IEltcGxlbWVudCBmcDE2IGZvciBOZW9uIHBhaXJ3aXNlIGZwIG9wcykKV0FSTklO
RzogQmxvY2sgY29tbWVudHMgdXNlIGEgbGVhZGluZyAvKiBvbiBhIHNlcGFyYXRlIGxpbmUKIzEy
ODogRklMRTogdGFyZ2V0L2FybS92ZWNfaGVscGVyLmM6MTc4NToKKyAgICAgICAgLyogUmVhZCBh
bGwgaW5wdXRzIGJlZm9yZSB3cml0aW5nIG91dHB1dHMgaW4gY2FzZSB2bSA9PSB2ZCAqLyAgIFwK
CldBUk5JTkc6IEJsb2NrIGNvbW1lbnRzIHVzZSBhIGxlYWRpbmcgLyogb24gYSBzZXBhcmF0ZSBs
aW5lCiMxNDU6IEZJTEU6IHRhcmdldC9hcm0vdmVjX2hlbHBlci5jOjE4MDI6CisgICAgICAgIC8q
IFJlYWQgYWxsIGlucHV0cyBiZWZvcmUgd3JpdGluZyBvdXRwdXRzIGluIGNhc2Ugdm0gPT0gdmQg
Ki8gICBcCgp0b3RhbDogMCBlcnJvcnMsIDIgd2FybmluZ3MsIDEyOCBsaW5lcyBjaGVja2VkCgpQ
YXRjaCAzNC80NyBoYXMgc3R5bGUgcHJvYmxlbXMsIHBsZWFzZSByZXZpZXcuICBJZiBhbnkgb2Yg
dGhlc2UgZXJyb3JzCmFyZSBmYWxzZSBwb3NpdGl2ZXMgcmVwb3J0IHRoZW0gdG8gdGhlIG1haW50
YWluZXIsIHNlZQpDSEVDS1BBVENIIGluIE1BSU5UQUlORVJTLgozNS80NyBDaGVja2luZyBjb21t
aXQgZGZmMDQwMmI4Mzg3ICh0YXJnZXQvYXJtOiBJbXBsZW1lbnQgZnAxNiBmb3IgTmVvbiBmbG9h
dC1pbnRlZ2VyIFZDVlQpCjM2LzQ3IENoZWNraW5nIGNvbW1pdCA5YTc1MjJhMWE3N2QgKHRhcmdl
dC9hcm06IENvbnZlcnQgTmVvbiBWQ1ZUIGZpeGVkLXBvaW50IHRvIGd2ZWMpCjM3LzQ3IENoZWNr
aW5nIGNvbW1pdCA2ZmExMWZiMTY3MGUgKHRhcmdldC9hcm06IEltcGxlbWVudCBmcDE2IGZvciBO
ZW9uIFZDVlQgZml4ZWQtcG9pbnQpCjM4LzQ3IENoZWNraW5nIGNvbW1pdCAwNDgwOTg0N2Q5MjYg
KHRhcmdldC9hcm06IEltcGxlbWVudCBmcDE2IGZvciBOZW9uIFZDVlQgd2l0aCByb3VuZGluZyBt
b2RlcykKMzkvNDcgQ2hlY2tpbmcgY29tbWl0IDA3ZDZmMDIzNGU3OSAodGFyZ2V0L2FybTogSW1w
bGVtZW50IGZwMTYgZm9yIE5lb24gVlJJTlQtd2l0aC1zcGVjaWZpZWQtcm91bmRpbmctbW9kZSkK
NDAvNDcgQ2hlY2tpbmcgY29tbWl0IGRiNzE5ZjljN2FiMSAodGFyZ2V0L2FybTogSW1wbGVtZW50
IGZwMTYgZm9yIE5lb24gVlJJTlRYKQo0MS80NyBDaGVja2luZyBjb21taXQgMmZiMzQyNDRlNzkx
ICh0YXJnZXQvYXJtL3ZlY19oZWxwZXI6IEhhbmRsZSBvcHJzeiBsZXNzIHRoYW4gMTYgYnl0ZXMg
aW4gaW5kZXhlZCBvcGVyYXRpb25zKQo0Mi80NyBDaGVja2luZyBjb21taXQgOGU3ZDllM2FlNDky
ICh0YXJnZXQvYXJtL3ZlY19oZWxwZXI6IEFkZCBndmVjIGZwIGluZGV4ZWQgbXVsdGlwbHktYW5k
LWFkZCBvcGVyYXRpb25zKQpFUlJPUjogc3BhY2UgcHJvaGliaXRlZCBiZWZvcmUgdGhhdCBjbG9z
ZSBwYXJlbnRoZXNpcyAnKScKIzY5OiBGSUxFOiB0YXJnZXQvYXJtL3ZlY19oZWxwZXIuYzoxMTEx
OgorRE9fRk1VTF9JRFgoZ3ZlY19mbXVsX2lkeF9kLCBub3AsIGZsb2F0NjQsICkKCnRvdGFsOiAx
IGVycm9ycywgMCB3YXJuaW5ncywgNjEgbGluZXMgY2hlY2tlZAoKUGF0Y2ggNDIvNDcgaGFzIHN0
eWxlIHByb2JsZW1zLCBwbGVhc2UgcmV2aWV3LiAgSWYgYW55IG9mIHRoZXNlIGVycm9ycwphcmUg
ZmFsc2UgcG9zaXRpdmVzIHJlcG9ydCB0aGVtIHRvIHRoZSBtYWludGFpbmVyLCBzZWUKQ0hFQ0tQ
QVRDSCBpbiBNQUlOVEFJTkVSUy4KCjQzLzQ3IENoZWNraW5nIGNvbW1pdCA3YWMxMzA1ZTc1ODUg
KHRhcmdldC9hcm06IEltcGxlbWVudCBmcDE2IGZvciBOZW9uIFZNVUwsIFZNTEEsIFZNTFMpCjQ0
LzQ3IENoZWNraW5nIGNvbW1pdCAzY2FjMjkwYmZjMTEgKHRhcmdldC9hcm06IEVuYWJsZSBGUDE2
IGluICctY3B1IG1heCcpCjQ1LzQ3IENoZWNraW5nIGNvbW1pdCA4NDVmNDhhYzkyMTEgKGh3L2Fy
bS9zYnNhLXJlZjogYWRkICJyZWciIHByb3BlcnR5IHRvIERUIGNwdSBub2RlcykKNDYvNDcgQ2hl
Y2tpbmcgY29tbWl0IGVmOWI5Y2JlYWVlNiAoaHcvbWlzYy9zYnNhX2VjIDogQWRkIGFuIGVtYmVk
ZGVkIGNvbnRyb2xsZXIgZm9yIHNic2EtcmVmKQpXQVJOSU5HOiBhZGRlZCwgbW92ZWQgb3IgZGVs
ZXRlZCBmaWxlKHMpLCBkb2VzIE1BSU5UQUlORVJTIG5lZWQgdXBkYXRpbmc/CiMzNDogCm5ldyBm
aWxlIG1vZGUgMTAwNjQ0Cgp0b3RhbDogMCBlcnJvcnMsIDEgd2FybmluZ3MsIDEwMyBsaW5lcyBj
aGVja2VkCgpQYXRjaCA0Ni80NyBoYXMgc3R5bGUgcHJvYmxlbXMsIHBsZWFzZSByZXZpZXcuICBJ
ZiBhbnkgb2YgdGhlc2UgZXJyb3JzCmFyZSBmYWxzZSBwb3NpdGl2ZXMgcmVwb3J0IHRoZW0gdG8g
dGhlIG1haW50YWluZXIsIHNlZQpDSEVDS1BBVENIIGluIE1BSU5UQUlORVJTLgo0Ny80NyBDaGVj
a2luZyBjb21taXQgODY3ZjEyZTg3M2YyIChody9hcm0vc2JzYS1yZWYgOiBBZGQgZW1iZWRkZWQg
Y29udHJvbGxlciBpbiBzZWN1cmUgbWVtb3J5KQo9PT0gT1VUUFVUIEVORCA9PT0KClRlc3QgY29t
bWFuZCBleGl0ZWQgd2l0aCBjb2RlOiAxCgoKVGhlIGZ1bGwgbG9nIGlzIGF2YWlsYWJsZSBhdApo
dHRwOi8vcGF0Y2hldy5vcmcvbG9ncy8yMDIwMDkwMTE1MTgyMy4yOTc4NS0xLXBldGVyLm1heWRl
bGxAbGluYXJvLm9yZy90ZXN0aW5nLmNoZWNrcGF0Y2gvP3R5cGU9bWVzc2FnZS4KLS0tCkVtYWls
IGdlbmVyYXRlZCBhdXRvbWF0aWNhbGx5IGJ5IFBhdGNoZXcgW2h0dHBzOi8vcGF0Y2hldy5vcmcv
XS4KUGxlYXNlIHNlbmQgeW91ciBmZWVkYmFjayB0byBwYXRjaGV3LWRldmVsQHJlZGhhdC5jb20=

