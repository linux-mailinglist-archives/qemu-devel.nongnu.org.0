Return-Path: <qemu-devel-bounces+lists+qemu-devel=lfdr.de@nongnu.org>
X-Original-To: lists+qemu-devel@lfdr.de
Delivered-To: lists+qemu-devel@lfdr.de
Received: from lists.gnu.org (lists.gnu.org [209.51.188.17])
	by mail.lfdr.de (Postfix) with ESMTPS id D68CC2F810D
	for <lists+qemu-devel@lfdr.de>; Fri, 15 Jan 2021 17:43:47 +0100 (CET)
Received: from localhost ([::1]:50230 helo=lists1p.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.90_1)
	(envelope-from <qemu-devel-bounces+lists+qemu-devel=lfdr.de@nongnu.org>)
	id 1l0SCQ-0001iX-Un
	for lists+qemu-devel@lfdr.de; Fri, 15 Jan 2021 11:43:46 -0500
Received: from eggs.gnu.org ([2001:470:142:3::10]:58454)
 by lists.gnu.org with esmtps (TLS1.2:ECDHE_RSA_AES_256_GCM_SHA384:256)
 (Exim 4.90_1) (envelope-from <richard.henderson@linaro.org>)
 id 1l0S8y-0007K3-Px
 for qemu-devel@nongnu.org; Fri, 15 Jan 2021 11:40:13 -0500
Received: from mail-pf1-x431.google.com ([2607:f8b0:4864:20::431]:43876)
 by eggs.gnu.org with esmtps (TLS1.2:ECDHE_RSA_AES_128_GCM_SHA256:128)
 (Exim 4.90_1) (envelope-from <richard.henderson@linaro.org>)
 id 1l0S8s-0000Cw-7t
 for qemu-devel@nongnu.org; Fri, 15 Jan 2021 11:40:08 -0500
Received: by mail-pf1-x431.google.com with SMTP id c12so5818034pfo.10
 for <qemu-devel@nongnu.org>; Fri, 15 Jan 2021 08:40:05 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=linaro.org; s=google;
 h=subject:to:cc:references:from:message-id:date:user-agent
 :mime-version:in-reply-to:content-language:content-transfer-encoding;
 bh=CltrdbYuLXVKY3LDVHCnngcjOfhZpfm1o2jvOUIdbEM=;
 b=wMxo94kENtzUgOXsFcb0gkE9p2XqDnIBkKY0BZ8GN42xIGHBLyWP5Ve5DHD65dYQRJ
 3uLyxVd95MDKSqL8jRE+vAkUgjoX/az9vOjqqviekUgkoFSLUIe4VHvI+XSpQkaBhRzT
 8xH7f8GDq1mcasXXIQ65IeE892ZpHZx0OaZlFd/wv32223sBw3zg/PuSHxBsoN8XQn20
 ydS7qDnPRaP9TLuTF3sH01ov7dK38T8l6XouVTe35O8XUkzM//2qKzWKsUOHVSyI2AnB
 Tx7j7QrlJFXgSCRfvId5/DscWpy4z4Vlzzua6uIjV3ynBHgjAjwt0Bn7gm2j+AHN82BQ
 4TZA==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
 d=1e100.net; s=20161025;
 h=x-gm-message-state:subject:to:cc:references:from:message-id:date
 :user-agent:mime-version:in-reply-to:content-language
 :content-transfer-encoding;
 bh=CltrdbYuLXVKY3LDVHCnngcjOfhZpfm1o2jvOUIdbEM=;
 b=c9VDt8dM+S5F8qv4GB5q3FH8jdmqonRa5s4l4do0jdw27SVZ4mCCN79ug6CCKMBlXO
 a7mJFort+aHf5aR3B13zu8PJvBZtLIPKv/SAy2PKV3MLxWtn5EJxCTrAlhGMaEutuNYF
 vWdHyAmcF6esZm6QLO7JREcbW2bEryR9S3gc33v6Z2XGVrXjunzVvfaX9HFMsTcwdisT
 PGzYhELUyAMkKKxvApNdHd2KPi417y1XllqbxDRoqNdNBXDXCoR0m6EK/l93k3xbGZ9A
 j3XuvJU3sNfUxs/e9M/A7tiY4+iXnXH4B/l8N1xBKylD4gc9sUcvV84soPi8TgXjY+h5
 1wGA==
X-Gm-Message-State: AOAM53369NvqDoxQb1R8C/r+Ck+cjU0MwTE0QkEKbwsnh9MmB7e84hSi
 ukjRBFyICDjtRZTxXXXLRn7oTw==
X-Google-Smtp-Source: ABdhPJyvzSxPTxK8EFX3e37b8QdcTs7SSWCE/81rIZfaCbhkn2coEmZr3soYivm5iNaZk2uvPC+H0Q==
X-Received: by 2002:a63:5407:: with SMTP id i7mr13671649pgb.418.1610728803945; 
 Fri, 15 Jan 2021 08:40:03 -0800 (PST)
Received: from [10.25.18.3] (rrcs-173-197-107-21.west.biz.rr.com.
 [173.197.107.21])
 by smtp.gmail.com with ESMTPSA id a188sm1282543pfb.108.2021.01.15.08.40.02
 (version=TLS1_3 cipher=TLS_AES_128_GCM_SHA256 bits=128/128);
 Fri, 15 Jan 2021 08:40:03 -0800 (PST)
Subject: Re: [PATCH] util/cacheflush: Fix error generated by clang
To: Gan Qixin <ganqixin@huawei.com>, qemu-devel@nongnu.org,
 qemu-trivial@nongnu.org
References: <20210115075656.717957-1-ganqixin@huawei.com>
From: Richard Henderson <richard.henderson@linaro.org>
Message-ID: <8d1971bb-0c0d-b7cb-5fed-4d105e17a511@linaro.org>
Date: Fri, 15 Jan 2021 06:39:59 -1000
User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:68.0) Gecko/20100101
 Thunderbird/68.10.0
MIME-Version: 1.0
In-Reply-To: <20210115075656.717957-1-ganqixin@huawei.com>
Content-Type: text/plain; charset=utf-8
Content-Language: en-US
Content-Transfer-Encoding: 7bit
Received-SPF: pass client-ip=2607:f8b0:4864:20::431;
 envelope-from=richard.henderson@linaro.org; helo=mail-pf1-x431.google.com
X-Spam_score_int: -20
X-Spam_score: -2.1
X-Spam_bar: --
X-Spam_report: (-2.1 / 5.0 requ) BAYES_00=-1.9, DKIM_SIGNED=0.1,
 DKIM_VALID=-0.1, DKIM_VALID_AU=-0.1, DKIM_VALID_EF=-0.1, NICE_REPLY_A=-0.001,
 RCVD_IN_DNSWL_NONE=-0.0001, SPF_HELO_NONE=0.001,
 SPF_PASS=-0.001 autolearn=unavailable autolearn_force=no
X-Spam_action: no action
X-BeenThere: qemu-devel@nongnu.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: <qemu-devel.nongnu.org>
List-Unsubscribe: <https://lists.nongnu.org/mailman/options/qemu-devel>,
 <mailto:qemu-devel-request@nongnu.org?subject=unsubscribe>
List-Archive: <https://lists.nongnu.org/archive/html/qemu-devel>
List-Post: <mailto:qemu-devel@nongnu.org>
List-Help: <mailto:qemu-devel-request@nongnu.org?subject=help>
List-Subscribe: <https://lists.nongnu.org/mailman/listinfo/qemu-devel>,
 <mailto:qemu-devel-request@nongnu.org?subject=subscribe>
Cc: kuhn.chenqun@huawei.com, Paolo Bonzini <pbonzini@redhat.com>,
 zhang.zhanghailiang@huawei.com, Euler Robot <euler.robot@huawei.com>
Errors-To: qemu-devel-bounces+lists+qemu-devel=lfdr.de@nongnu.org
Sender: "Qemu-devel" <qemu-devel-bounces+lists+qemu-devel=lfdr.de@nongnu.org>

On 1/14/21 9:56 PM, Gan Qixin wrote:
> When compiling qemu-fuzz-i386 on aarch64 host, clang reported the following
> error:
> 
> ../util/cacheflush.c:38:44: error: value size does not match register size
> specified by the constraint and modifier [-Werror,-Wasm-operand-widths]
>     asm volatile("mrs\t%0, ctr_el0" : "=r"(save_ctr_el0));
>                                            ^
> ../util/cacheflush.c:38:24: note: use constraint modifier "w"
>     asm volatile("mrs\t%0, ctr_el0" : "=r"(save_ctr_el0));
>                        ^~
>                        %w0
> 
> Modify the type of save_ctr_el0 to uint64_t to fix it.
> 
> Reported-by: Euler Robot <euler.robot@huawei.com>
> Signed-off-by: Gan Qixin <ganqixin@huawei.com>
> ---
> Cc: Richard Henderson <richard.henderson@linaro.org>
> Cc: Paolo Bonzini <pbonzini@redhat.com>
> ---
>  util/cacheflush.c | 8 ++++----
>  1 file changed, 4 insertions(+), 4 deletions(-)

This is clang being overly-picky.  IMO it should have done the mrs into a
64-bit register, then truncated the value when storing to the 32-bit variable.
 Which is what GCC does.  Certainly the code as written only needs the low 20
bits of the result.

But your change will not really make any difference to the generated code,
except for 4 more bytes of storage, so:

Reviewed-by: Richard Henderson <richard.henderson@linaro.org>


r~

