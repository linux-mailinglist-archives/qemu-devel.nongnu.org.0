Return-Path: <qemu-devel-bounces+lists+qemu-devel=lfdr.de@nongnu.org>
X-Original-To: lists+qemu-devel@lfdr.de
Delivered-To: lists+qemu-devel@lfdr.de
Received: from lists.gnu.org (lists.gnu.org [209.51.188.17])
	by mail.lfdr.de (Postfix) with ESMTPS id 429BE158714
	for <lists+qemu-devel@lfdr.de>; Tue, 11 Feb 2020 01:53:36 +0100 (CET)
Received: from localhost ([::1]:41710 helo=lists1p.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.90_1)
	(envelope-from <qemu-devel-bounces+lists+qemu-devel=lfdr.de@nongnu.org>)
	id 1j1Jnz-0003lg-AB
	for lists+qemu-devel@lfdr.de; Mon, 10 Feb 2020 19:53:35 -0500
Received: from eggs.gnu.org ([2001:470:142:3::10]:60483)
 by lists.gnu.org with esmtp (Exim 4.90_1)
 (envelope-from <tsimpson@qualcomm.com>) id 1j1Jc7-0001Hp-0g
 for qemu-devel@nongnu.org; Mon, 10 Feb 2020 19:41:23 -0500
Received: from Debian-exim by eggs.gnu.org with spam-scanned (Exim 4.71)
 (envelope-from <tsimpson@qualcomm.com>) id 1j1Jc3-00065C-Kk
 for qemu-devel@nongnu.org; Mon, 10 Feb 2020 19:41:17 -0500
Received: from alexa-out-sd-01.qualcomm.com ([199.106.114.38]:3646)
 by eggs.gnu.org with esmtps (TLS1.0:RSA_AES_256_CBC_SHA1:32)
 (Exim 4.71) (envelope-from <tsimpson@qualcomm.com>)
 id 1j1Jc3-0004rG-5k
 for qemu-devel@nongnu.org; Mon, 10 Feb 2020 19:41:15 -0500
DKIM-Signature: v=1; a=rsa-sha256; c=simple/simple;
 d=quicinc.com; i=@quicinc.com; q=dns/txt; s=qcdkim;
 t=1581381675; x=1612917675;
 h=from:to:cc:subject:date:message-id:in-reply-to:
 references:mime-version:content-transfer-encoding;
 bh=4vtZEfOSLeU3621TPV3vno3kao4G33uNKRWfOwH39w8=;
 b=ZDK9iaOBxu2HcJrM0hA/2cNmVu4qb++x3h0nKJNvrV3EWotGK65ksxsU
 m9P/1Q02Mhg5+fiimM4TSCawSOMQ3bohEWCbwca9KS926QK/1PGa9nbXX
 +3z0kKFJWEFT/InjpT9vUZIupO2HNUDln+SEtof3wdyBxgPR1moQnm8pG A=;
Received: from unknown (HELO ironmsg01-sd.qualcomm.com) ([10.53.140.141])
 by alexa-out-sd-01.qualcomm.com with ESMTP; 10 Feb 2020 16:41:00 -0800
Received: from vu-tsimpson-aus.qualcomm.com (HELO
 vu-tsimpson1-aus.qualcomm.com) ([10.222.150.1])
 by ironmsg01-sd.qualcomm.com with ESMTP; 10 Feb 2020 16:41:00 -0800
Received: by vu-tsimpson1-aus.qualcomm.com (Postfix, from userid 47164)
 id 356AF1B48; Mon, 10 Feb 2020 18:41:00 -0600 (CST)
From: Taylor Simpson <tsimpson@quicinc.com>
To: qemu-devel@nongnu.org
Subject: [RFC PATCH 29/66] Hexagon opcode data structures
Date: Mon, 10 Feb 2020 18:40:07 -0600
Message-Id: <1581381644-13678-30-git-send-email-tsimpson@quicinc.com>
X-Mailer: git-send-email 2.7.4
In-Reply-To: <1581381644-13678-1-git-send-email-tsimpson@quicinc.com>
References: <1581381644-13678-1-git-send-email-tsimpson@quicinc.com>
MIME-Version: 1.0
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
X-detected-operating-system: by eggs.gnu.org: FreeBSD 9.x [fuzzy]
X-Received-From: 199.106.114.38
X-BeenThere: qemu-devel@nongnu.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: <qemu-devel.nongnu.org>
List-Unsubscribe: <https://lists.nongnu.org/mailman/options/qemu-devel>,
 <mailto:qemu-devel-request@nongnu.org?subject=unsubscribe>
List-Archive: <https://lists.nongnu.org/archive/html/qemu-devel>
List-Post: <mailto:qemu-devel@nongnu.org>
List-Help: <mailto:qemu-devel-request@nongnu.org?subject=help>
List-Subscribe: <https://lists.nongnu.org/mailman/listinfo/qemu-devel>,
 <mailto:qemu-devel-request@nongnu.org?subject=subscribe>
Cc: riku.voipio@iki.fi, richard.henderson@linaro.org, laurent@vivier.eu,
 Taylor Simpson <tsimpson@quicinc.com>, philmd@redhat.com,
 aleksandar.m.mail@gmail.com
Errors-To: qemu-devel-bounces+lists+qemu-devel=lfdr.de@nongnu.org
Sender: "Qemu-devel" <qemu-devel-bounces+lists+qemu-devel=lfdr.de@nongnu.org>

U2lnbmVkLW9mZi1ieTogVGF5bG9yIFNpbXBzb24gPHRzaW1wc29uQHF1aWNpbmMuY29tPgotLS0K
IHRhcmdldC9oZXhhZ29uL29wY29kZXMuYyB8IDIyMyArKysrKysrKysrKysrKysrKysrKysrKysr
KysrKysrKysrKysrKysrKysrKysrKwogdGFyZ2V0L2hleGFnb24vb3Bjb2Rlcy5oIHwgIDY3ICsr
KysrKysrKysrKysrCiAyIGZpbGVzIGNoYW5nZWQsIDI5MCBpbnNlcnRpb25zKCspCiBjcmVhdGUg
bW9kZSAxMDA2NDQgdGFyZ2V0L2hleGFnb24vb3Bjb2Rlcy5jCiBjcmVhdGUgbW9kZSAxMDA2NDQg
dGFyZ2V0L2hleGFnb24vb3Bjb2Rlcy5oCgpkaWZmIC0tZ2l0IGEvdGFyZ2V0L2hleGFnb24vb3Bj
b2Rlcy5jIGIvdGFyZ2V0L2hleGFnb24vb3Bjb2Rlcy5jCm5ldyBmaWxlIG1vZGUgMTAwNjQ0Cmlu
ZGV4IDAwMDAwMDAuLjFjMWIyMDAKLS0tIC9kZXYvbnVsbAorKysgYi90YXJnZXQvaGV4YWdvbi9v
cGNvZGVzLmMKQEAgLTAsMCArMSwyMjMgQEAKKy8qCisgKiAgQ29weXJpZ2h0IChjKSAyMDE5IFF1
YWxjb21tIElubm92YXRpb24gQ2VudGVyLCBJbmMuIEFsbCBSaWdodHMgUmVzZXJ2ZWQuCisgKgor
ICogIFRoaXMgcHJvZ3JhbSBpcyBmcmVlIHNvZnR3YXJlOyB5b3UgY2FuIHJlZGlzdHJpYnV0ZSBp
dCBhbmQvb3IgbW9kaWZ5CisgKiAgaXQgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBHTlUgR2VuZXJh
bCBQdWJsaWMgTGljZW5zZSBhcyBwdWJsaXNoZWQgYnkKKyAqICB0aGUgRnJlZSBTb2Z0d2FyZSBG
b3VuZGF0aW9uOyBlaXRoZXIgdmVyc2lvbiAyIG9mIHRoZSBMaWNlbnNlLCBvcgorICogIChhdCB5
b3VyIG9wdGlvbikgYW55IGxhdGVyIHZlcnNpb24uCisgKgorICogIFRoaXMgcHJvZ3JhbSBpcyBk
aXN0cmlidXRlZCBpbiB0aGUgaG9wZSB0aGF0IGl0IHdpbGwgYmUgdXNlZnVsLAorICogIGJ1dCBX
SVRIT1VUIEFOWSBXQVJSQU5UWTsgd2l0aG91dCBldmVuIHRoZSBpbXBsaWVkIHdhcnJhbnR5IG9m
CisgKiAgTUVSQ0hBTlRBQklMSVRZIG9yIEZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NF
LiAgU2VlIHRoZQorICogIEdOVSBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlIGZvciBtb3JlIGRldGFp
bHMuCisgKgorICogIFlvdSBzaG91bGQgaGF2ZSByZWNlaXZlZCBhIGNvcHkgb2YgdGhlIEdOVSBH
ZW5lcmFsIFB1YmxpYyBMaWNlbnNlCisgKiAgYWxvbmcgd2l0aCB0aGlzIHByb2dyYW07IGlmIG5v
dCwgc2VlIDxodHRwOi8vd3d3LmdudS5vcmcvbGljZW5zZXMvPi4KKyAqLworCisvKgorICogb3Bj
b2Rlcy5jCisgKgorICogZGF0YSB0YWJsZXMgZ2VuZXJhdGVkIGF1dG9tYXRpY2FsbHkKKyAqIE1h
eWJlIHNvbWUgZnVuY3Rpb25zIHRvbworICovCisKKyNpbmNsdWRlIDxzdGRpby5oPgorI2luY2x1
ZGUgPHN0ZGxpYi5oPgorI2luY2x1ZGUgPHN0cmluZ3MuaD4KKyNpbmNsdWRlIDxzdHJpbmcuaD4K
KyNpbmNsdWRlIDxzdGRhcmcuaD4KKyNpbmNsdWRlIDxjdHlwZS5oPgorI2luY2x1ZGUgInFlbXUv
b3NkZXAuaCIKKyNpbmNsdWRlICJvcGNvZGVzLmgiCisjaW5jbHVkZSAiZGVjb2RlLmgiCisKKyNk
ZWZpbmUgVkVDX0RFU0NSKEEsIEIsIEMpIERFU0NSKEEsIEIsIEMpCisjZGVmaW5lIERPTkFNRShY
KSAjWAorCitjb25zdCBjaGFyICpvcGNvZGVfbmFtZXNbXSA9IHsKKyNkZWZpbmUgT1BDT0RFKElJ
RCkgRE9OQU1FKElJRCkKKyNpbmNsdWRlICJvcGNvZGVzX2RlZl9nZW5lcmF0ZWQuaCIKKyAgICBO
VUxMCisjdW5kZWYgT1BDT0RFCit9OworCitjb25zdCBjaGFyICpvcGNvZGVfcmVnaW5mb1tdID0g
eworI2RlZmluZSBJTU1JTkZPKFRBRywgU0lHTiwgU0laRSwgU0hBTVQsIFNJR04yLCBTSVpFMiwg
U0hBTVQyKSAgICAvKiBub3RoaW5nICovCisjZGVmaW5lIFJFR0lORk8oVEFHLCBSRUdJTkZPLCBS
UkVHUywgV1JFR1MpIFJFR0lORk8sCisjaW5jbHVkZSAib3BfcmVnc19nZW5lcmF0ZWQuaCIKKyAg
ICBOVUxMCisjdW5kZWYgUkVHSU5GTworI3VuZGVmIElNTUlORk8KK307CisKKworY29uc3QgY2hh
ciAqb3Bjb2RlX3JyZWdzW10gPSB7CisjZGVmaW5lIElNTUlORk8oVEFHLCBTSUdOLCBTSVpFLCBT
SEFNVCwgU0lHTjIsIFNJWkUyLCBTSEFNVDIpICAgIC8qIG5vdGhpbmcgKi8KKyNkZWZpbmUgUkVH
SU5GTyhUQUcsIFJFR0lORk8sIFJSRUdTLCBXUkVHUykgUlJFR1MsCisjaW5jbHVkZSAib3BfcmVn
c19nZW5lcmF0ZWQuaCIKKyAgICBOVUxMCisjdW5kZWYgUkVHSU5GTworI3VuZGVmIElNTUlORk8K
K307CisKKworY29uc3QgY2hhciAqb3Bjb2RlX3dyZWdzW10gPSB7CisjZGVmaW5lIElNTUlORk8o
VEFHLCBTSUdOLCBTSVpFLCBTSEFNVCwgU0lHTjIsIFNJWkUyLCBTSEFNVDIpICAgIC8qIG5vdGhp
bmcgKi8KKyNkZWZpbmUgUkVHSU5GTyhUQUcsIFJFR0lORk8sIFJSRUdTLCBXUkVHUykgV1JFR1Ms
CisjaW5jbHVkZSAib3BfcmVnc19nZW5lcmF0ZWQuaCIKKyAgICBOVUxMCisjdW5kZWYgUkVHSU5G
TworI3VuZGVmIElNTUlORk8KK307CisKK2NvbnN0IGNoYXIgKm9wY29kZV9zaG9ydF9zZW1hbnRp
Y3NbXSA9IHsKKyNkZWZpbmUgT1BDT0RFKFgpICAgICAgICAgICAgICBOVUxMCisjaW5jbHVkZSAi
b3Bjb2Rlc19kZWZfZ2VuZXJhdGVkLmgiCisjdW5kZWYgT1BDT0RFCisgICAgTlVMTAorfTsKKwor
CitzaXplNHVfdAorICAgIG9wY29kZV9hdHRyaWJzW1hYX0xBU1RfT1BDT0RFXVsoQV9aWl9MQVNU
QVRUUklCIC8gQVRUUklCX1dJRFRIKSArIDFdID0gezB9OworCitzdGF0aWMgdm9pZCBpbml0X2F0
dHJpYnMoaW50IHRhZywgLi4uKQoreworICAgIHZhX2xpc3QgYXA7CisgICAgaW50IGF0dHI7Cisg
ICAgdmFfc3RhcnQoYXAsIHRhZyk7CisgICAgd2hpbGUgKChhdHRyID0gdmFfYXJnKGFwLCBpbnQp
KSAhPSAwKSB7CisgICAgICAgIG9wY29kZV9hdHRyaWJzW3RhZ11bYXR0ciAvIEFUVFJJQl9XSURU
SF0gfD0gMSA8PCAoYXR0ciAlIEFUVFJJQl9XSURUSCk7CisgICAgfQorfQorCitzdGF0aWMgc2l6
ZTR1X3Qgc3RyMnZhbChjb25zdCBjaGFyICpzdHIpCit7CisgICAgc2l6ZTR1X3QgcmV0ID0gMDsK
KyAgICBmb3IgKCA7ICpzdHI7IHN0cisrKSB7CisgICAgICAgIHN3aXRjaCAoKnN0cikgeworICAg
ICAgICBjYXNlICcgJzoKKyAgICAgICAgY2FzZSAnXHQnOgorICAgICAgICAgICAgYnJlYWs7Cisg
ICAgICAgIGNhc2UgJ3MnOgorICAgICAgICBjYXNlICd0JzoKKyAgICAgICAgY2FzZSAndSc6Cisg
ICAgICAgIGNhc2UgJ3YnOgorICAgICAgICBjYXNlICd3JzoKKyAgICAgICAgY2FzZSAnZCc6Cisg
ICAgICAgIGNhc2UgJ2UnOgorICAgICAgICBjYXNlICd4JzoKKyAgICAgICAgY2FzZSAneSc6Cisg
ICAgICAgIGNhc2UgJ2knOgorICAgICAgICBjYXNlICdJJzoKKyAgICAgICAgY2FzZSAnUCc6Cisg
ICAgICAgIGNhc2UgJ0UnOgorICAgICAgICBjYXNlICdvJzoKKyAgICAgICAgY2FzZSAnLSc6Cisg
ICAgICAgIGNhc2UgJzAnOgorICAgICAgICAgICAgcmV0ID0gKHJldCA8PCAxKSB8IDA7CisgICAg
ICAgICAgICBicmVhazsKKyAgICAgICAgY2FzZSAnMSc6CisgICAgICAgICAgICByZXQgPSAocmV0
IDw8IDEpIHwgMTsKKyAgICAgICAgICAgIGJyZWFrOworICAgICAgICBkZWZhdWx0OgorICAgICAg
ICAgICAgYnJlYWs7CisgICAgICAgIH0KKyAgICB9CisgICAgcmV0dXJuIHJldDsKK30KKworc3Rh
dGljIHNpemUxdV90IGhhc19lZShjb25zdCBjaGFyICpzdHIpCit7CisgICAgcmV0dXJuIChzdHJj
aHIoc3RyLCAnRScpICE9IE5VTEwpOworfQorCitvcGNvZGVfZW5jb2RpbmdfdCBvcGNvZGVfZW5j
b2RpbmdzW10gPSB7CisjZGVmaW5lIERFRl9FTkMzMihPUENPREUsIEVOQ1NUUikgXAorICAgIFtP
UENPREVdID0geyAuZW5jb2RpbmcgPSBFTkNTVFIgfSwKKworI2RlZmluZSBERUZfRU5DX1NVQklO
U04oT1BDT0RFLCBDTEFTUywgRU5DU1RSKSBcCisgICAgW09QQ09ERV0gPSB7IC5lbmNvZGluZyA9
IEVOQ1NUUiwgLmVuY19jbGFzcyA9IENMQVNTIH0sCisKKyNkZWZpbmUgREVGX0VYVF9FTkMoT1BD
T0RFLCBDTEFTUywgRU5DU1RSKSBcCisgICAgW09QQ09ERV0gPSB7IC5lbmNvZGluZyA9IEVOQ1NU
UiwgLmVuY19jbGFzcyA9IENMQVNTIH0sCisKKyNpbmNsdWRlICJpbXBvcnRlZC9lbmNvZGUuZGVm
IgorCisjdW5kZWYgREVGX0VOQzMyCisjdW5kZWYgREVGX0VOQ19TVUJJTlNOCisjdW5kZWYgREVG
X0VYVF9FTkMKK307CisKK3ZvaWQgb3Bjb2RlX2luaXQodm9pZCkKK3sKKyAgICBpbml0X2F0dHJp
YnMoMCwgMCk7CisKKyNkZWZpbmUgREVGX0VOQzMyKE9QQ09ERSwgRU5DU1RSKSBcCisgICAgb3Bj
b2RlX2VuY29kaW5nc1tPUENPREVdLnZhbHMgPSBzdHIydmFsKEVOQ1NUUik7IFwKKyAgICBvcGNv
ZGVfZW5jb2RpbmdzW09QQ09ERV0uaXNfZWUgPSBoYXNfZWUoRU5DU1RSKTsKKworI2RlZmluZSBE
RUZfRU5DX1NVQklOU04oT1BDT0RFLCBDTEFTUywgRU5DU1RSKSBcCisgICAgb3Bjb2RlX2VuY29k
aW5nc1tPUENPREVdLnZhbHMgPSBzdHIydmFsKEVOQ1NUUik7CisKKyNkZWZpbmUgTEVHQUNZX0RF
Rl9FTkMzMihPUENPREUsIEVOQ1NUUikgXAorICAgIG9wY29kZV9lbmNvZGluZ3NbT1BDT0RFXS5k
ZXBfdmFscyA9IHN0cjJ2YWwoRU5DU1RSKTsKKworI2RlZmluZSBERUZfRVhUX0VOQyhPUENPREUs
IENMQVNTLCBFTkNTVFIpIFwKKyAgICBvcGNvZGVfZW5jb2RpbmdzW09QQ09ERV0udmFscyA9IHN0
cjJ2YWwoRU5DU1RSKTsKKworI2luY2x1ZGUgImltcG9ydGVkL2VuY29kZS5kZWYiCisKKyN1bmRl
ZiBMRUdBQ1lfREVGX0VOQzMyCisjdW5kZWYgREVGX0VOQzMyCisjdW5kZWYgREVGX0VOQ19TVUJJ
TlNOCisjdW5kZWYgREVGX0VYVF9FTkMKKworI2RlZmluZSBBVFRSSUJTKC4uLikgLCAjIyBfX1ZB
X0FSR1NfXywgMAorI2RlZmluZSBPUF9BVFRSSUIoVEFHLCBBUkdTKSBpbml0X2F0dHJpYnMoVEFH
IEFSR1MpOworI2luY2x1ZGUgIm9wX2F0dHJpYnNfZ2VuZXJhdGVkLmgiCisjdW5kZWYgT1BfQVRU
UklCCisjdW5kZWYgQVRUUklCUworCisgICAgZGVjb2RlX2luaXQoKTsKKworI2RlZmluZSBERUZf
UUVNVShUQUcsIFNIT1JUQ09ERSwgSEVMUEVSLCBHRU5GTiwgSEVMUEZOKSBcCisgICAgb3Bjb2Rl
X3Nob3J0X3NlbWFudGljc1tUQUddID0gI1NIT1JUQ09ERTsKKyNpbmNsdWRlICJxZW11X2RlZl9n
ZW5lcmF0ZWQuaCIKKyN1bmRlZiBERUZfUUVNVQorfQorCisKKyNkZWZpbmUgTkVFRExFICJJTU1F
WFQoIgorCitpbnQgb3Bjb2RlX3doaWNoX2ltbWVkaWF0ZV9pc19leHRlbmRlZChvcGNvZGVfdCBv
cGNvZGUpCit7CisgICAgY29uc3QgY2hhciAqcDsKKyAgICBpZiAob3Bjb2RlID49IFhYX0xBU1Rf
T1BDT0RFKSB7CisgICAgICAgIGdfYXNzZXJ0X25vdF9yZWFjaGVkKCk7CisgICAgICAgIHJldHVy
biAwOworICAgIH0KKyAgICBpZiAoIUdFVF9BVFRSSUIob3Bjb2RlLCBBX0VYVEVOREFCTEUpKSB7
CisgICAgICAgIGdfYXNzZXJ0X25vdF9yZWFjaGVkKCk7CisgICAgICAgIHJldHVybiAwOworICAg
IH0KKyAgICBwID0gb3Bjb2RlX3Nob3J0X3NlbWFudGljc1tvcGNvZGVdOworICAgIHAgPSBzdHJz
dHIocCwgTkVFRExFKTsKKyAgICBpZiAocCA9PSBOVUxMKSB7CisgICAgICAgIGdfYXNzZXJ0X25v
dF9yZWFjaGVkKCk7CisgICAgICAgIHJldHVybiAwOworICAgIH0KKyAgICBwICs9IHN0cmxlbihO
RUVETEUpOworICAgIHdoaWxlIChpc3NwYWNlKCpwKSkgeworICAgICAgICBwKys7CisgICAgfQor
ICAgIC8qIGxvd2VyIGlzIGFsd2F5cyBpbW0gMCwgdXBwZXIgYWx3YXlzIGltbSAxLiAqLworICAg
IGlmIChpc2xvd2VyKCpwKSkgeworICAgICAgICByZXR1cm4gMDsKKyAgICB9IGVsc2UgaWYgKGlz
dXBwZXIoKnApKSB7CisgICAgICAgIHJldHVybiAxOworICAgIH0gZWxzZSB7CisgICAgICAgIGdf
YXNzZXJ0X25vdF9yZWFjaGVkKCk7CisgICAgfQorfQpkaWZmIC0tZ2l0IGEvdGFyZ2V0L2hleGFn
b24vb3Bjb2Rlcy5oIGIvdGFyZ2V0L2hleGFnb24vb3Bjb2Rlcy5oCm5ldyBmaWxlIG1vZGUgMTAw
NjQ0CmluZGV4IDAwMDAwMDAuLmZmOTAyMDcKLS0tIC9kZXYvbnVsbAorKysgYi90YXJnZXQvaGV4
YWdvbi9vcGNvZGVzLmgKQEAgLTAsMCArMSw2NyBAQAorLyoKKyAqICBDb3B5cmlnaHQgKGMpIDIw
MTkgUXVhbGNvbW0gSW5ub3ZhdGlvbiBDZW50ZXIsIEluYy4gQWxsIFJpZ2h0cyBSZXNlcnZlZC4K
KyAqCisgKiAgVGhpcyBwcm9ncmFtIGlzIGZyZWUgc29mdHdhcmU7IHlvdSBjYW4gcmVkaXN0cmli
dXRlIGl0IGFuZC9vciBtb2RpZnkKKyAqICBpdCB1bmRlciB0aGUgdGVybXMgb2YgdGhlIEdOVSBH
ZW5lcmFsIFB1YmxpYyBMaWNlbnNlIGFzIHB1Ymxpc2hlZCBieQorICogIHRoZSBGcmVlIFNvZnR3
YXJlIEZvdW5kYXRpb247IGVpdGhlciB2ZXJzaW9uIDIgb2YgdGhlIExpY2Vuc2UsIG9yCisgKiAg
KGF0IHlvdXIgb3B0aW9uKSBhbnkgbGF0ZXIgdmVyc2lvbi4KKyAqCisgKiAgVGhpcyBwcm9ncmFt
IGlzIGRpc3RyaWJ1dGVkIGluIHRoZSBob3BlIHRoYXQgaXQgd2lsbCBiZSB1c2VmdWwsCisgKiAg
YnV0IFdJVEhPVVQgQU5ZIFdBUlJBTlRZOyB3aXRob3V0IGV2ZW4gdGhlIGltcGxpZWQgd2FycmFu
dHkgb2YKKyAqICBNRVJDSEFOVEFCSUxJVFkgb3IgRklUTkVTUyBGT1IgQSBQQVJUSUNVTEFSIFBV
UlBPU0UuICBTZWUgdGhlCisgKiAgR05VIEdlbmVyYWwgUHVibGljIExpY2Vuc2UgZm9yIG1vcmUg
ZGV0YWlscy4KKyAqCisgKiAgWW91IHNob3VsZCBoYXZlIHJlY2VpdmVkIGEgY29weSBvZiB0aGUg
R05VIEdlbmVyYWwgUHVibGljIExpY2Vuc2UKKyAqICBhbG9uZyB3aXRoIHRoaXMgcHJvZ3JhbTsg
aWYgbm90LCBzZWUgPGh0dHA6Ly93d3cuZ251Lm9yZy9saWNlbnNlcy8+LgorICovCisKKyNpZm5k
ZWYgT1BDT0RFU19ICisjZGVmaW5lIE9QQ09ERVNfSAorCisjaW5jbHVkZSAiaGV4X2FyY2hfdHlw
ZXMuaCIKKyNpbmNsdWRlICJhdHRyaWJzLmgiCisKK3R5cGVkZWYgZW51bSB7CisjZGVmaW5lIE9Q
Q09ERShJSUQpIElJRAorI2luY2x1ZGUgIm9wY29kZXNfZGVmX2dlbmVyYXRlZC5oIgorICAgIFhY
X0xBU1RfT1BDT0RFCisjdW5kZWYgT1BDT0RFCit9IG9wY29kZV90OworCit0eXBlZGVmIGVudW0g
eworICAgIE5PUk1BTCwKKyAgICBIQUxGLAorICAgIFNVQklOU05fQSwKKyAgICBTVUJJTlNOX0wx
LAorICAgIFNVQklOU05fTDIsCisgICAgU1VCSU5TTl9TMSwKKyAgICBTVUJJTlNOX1MyLAorICAg
IEVYVF9ub2V4dCwKKyAgICBFWFRfbW12ZWMsCisgICAgWFhfTEFTVF9FTkNfQ0xBU1MKK30gZW5j
X2NsYXNzX3Q7CisKK2V4dGVybiBjb25zdCBjaGFyICpvcGNvZGVfbmFtZXNbXTsKKworZXh0ZXJu
IGNvbnN0IGNoYXIgKm9wY29kZV9yZWdpbmZvW107CitleHRlcm4gY29uc3QgY2hhciAqb3Bjb2Rl
X3JyZWdzW107CitleHRlcm4gY29uc3QgY2hhciAqb3Bjb2RlX3dyZWdzW107CisKK3R5cGVkZWYg
c3RydWN0IHsKKyAgICBjb25zdCBjaGFyICogY29uc3QgZW5jb2Rpbmc7CisgICAgc2l6ZTR1X3Qg
dmFsczsKKyAgICBzaXplNHVfdCBkZXBfdmFsczsKKyAgICBjb25zdCBlbmNfY2xhc3NfdCBlbmNf
Y2xhc3M7CisgICAgc2l6ZTF1X3QgaXNfZWU6MTsKK30gb3Bjb2RlX2VuY29kaW5nX3Q7CisKK2V4
dGVybiBvcGNvZGVfZW5jb2RpbmdfdCBvcGNvZGVfZW5jb2RpbmdzW1hYX0xBU1RfT1BDT0RFXTsK
KworZXh0ZXJuIHNpemU0dV90CisgICAgb3Bjb2RlX2F0dHJpYnNbWFhfTEFTVF9PUENPREVdWyhB
X1paX0xBU1RBVFRSSUIgLyBBVFRSSUJfV0lEVEgpICsgMV07CisKK2V4dGVybiB2b2lkIG9wY29k
ZV9pbml0KHZvaWQpOworCitleHRlcm4gaW50IG9wY29kZV93aGljaF9pbW1lZGlhdGVfaXNfZXh0
ZW5kZWQob3Bjb2RlX3Qgb3Bjb2RlKTsKKworI2VuZGlmCi0tIAoyLjcuNAoK

