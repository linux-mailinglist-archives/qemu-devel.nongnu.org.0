Return-Path: <qemu-devel-bounces+lists+qemu-devel=lfdr.de@nongnu.org>
X-Original-To: lists+qemu-devel@lfdr.de
Delivered-To: lists+qemu-devel@lfdr.de
Received: from lists.gnu.org (lists.gnu.org [209.51.188.17])
	by mail.lfdr.de (Postfix) with ESMTPS id D29322FA7E3
	for <lists+qemu-devel@lfdr.de>; Mon, 18 Jan 2021 18:50:42 +0100 (CET)
Received: from localhost ([::1]:45008 helo=lists1p.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.90_1)
	(envelope-from <qemu-devel-bounces+lists+qemu-devel=lfdr.de@nongnu.org>)
	id 1l1Yfp-0004xy-U0
	for lists+qemu-devel@lfdr.de; Mon, 18 Jan 2021 12:50:41 -0500
Received: from eggs.gnu.org ([2001:470:142:3::10]:51202)
 by lists.gnu.org with esmtps (TLS1.2:ECDHE_RSA_AES_256_GCM_SHA384:256)
 (Exim 4.90_1) (envelope-from <no-reply@patchew.org>)
 id 1l1YBI-00047r-D0
 for qemu-devel@nongnu.org; Mon, 18 Jan 2021 12:19:11 -0500
Resent-Date: Mon, 18 Jan 2021 12:19:08 -0500
Resent-Message-Id: <E1l1YBI-00047r-D0@lists.gnu.org>
Received: from sender4-of-o54.zoho.com ([136.143.188.54]:21473)
 by eggs.gnu.org with esmtps (TLS1.2:ECDHE_RSA_AES_256_GCM_SHA384:256)
 (Exim 4.90_1) (envelope-from <no-reply@patchew.org>)
 id 1l1YBD-0002fA-4c
 for qemu-devel@nongnu.org; Mon, 18 Jan 2021 12:19:07 -0500
ARC-Seal: i=1; a=rsa-sha256; t=1610990334; cv=none; 
 d=zohomail.com; s=zohoarc; 
 b=DC4lZoBtnWPLluZh1amiEemfMEH97BfwZGgjY+bC3/i1XhoZ4wrslauPw1T+CyFG6qBlGJLa0Q4G3Jrnh8d9mKi8LAf/nN1ER7d6uGR/Kcqmwt6smdfWb5qxlZ8cRxwhK7n+2/AiWTHfaj7zJU45HiDU33CgvY80nidrrytVD4I=
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=zohomail.com;
 s=zohoarc; t=1610990334;
 h=Content-Type:Content-Transfer-Encoding:Cc:Date:From:In-Reply-To:MIME-Version:Message-ID:Reply-To:Subject:To;
 bh=uEHa56h6mkFNAgcTFsDB0z8D9k9F02zD3KN93tuXnkU=; 
 b=DfyN8RIR0bASuTulDPt/f6l3Dzk6G1HmITGR4r/iApimat9Gh23u5M+LtB7Y6rlxd6TKx1Mt5ULfwgrsivgrkyNA52PpuBswIJ3q3VQcaQ0m7SLLLaZWGVaboqn0aZOObXFADoE5Bb4w32QifWHD3ZMWRCcItarzXtGKNKUkqxs=
ARC-Authentication-Results: i=1; mx.zohomail.com;
 spf=pass  smtp.mailfrom=no-reply@patchew.org;
 dmarc=pass header.from=<no-reply@patchew.org>
 header.from=<no-reply@patchew.org>
Received: from [172.17.0.3] (23.253.156.214 [23.253.156.214]) by
 mx.zohomail.com with SMTPS id 1610990333154223.30758087472987;
 Mon, 18 Jan 2021 09:18:53 -0800 (PST)
In-Reply-To: <20210118163113.780171-1-pbonzini@redhat.com>
Subject: Re: [PATCH 00/25] qemu-option, keyval,
 vl: switch -object/-M/-accel to keyval parsing
Message-ID: <161099033187.23800.4315070097013825273@73fb1a5943b8>
MIME-Version: 1.0
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Resent-From: 
From: no-reply@patchew.org
To: pbonzini@redhat.com
Date: Mon, 18 Jan 2021 09:18:53 -0800 (PST)
X-ZohoMailClient: External
Received-SPF: pass client-ip=136.143.188.54; envelope-from=no-reply@patchew.org;
 helo=sender4-of-o54.zoho.com
X-Spam_score_int: -18
X-Spam_score: -1.9
X-Spam_bar: -
X-Spam_report: (-1.9 / 5.0 requ) BAYES_00=-1.9, RCVD_IN_DNSWL_NONE=-0.0001,
 RCVD_IN_MSPIKE_H2=-0.001, SPF_HELO_NONE=0.001,
 SPF_PASS=-0.001 autolearn=ham autolearn_force=no
X-Spam_action: no action
X-BeenThere: qemu-devel@nongnu.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: <qemu-devel.nongnu.org>
List-Unsubscribe: <https://lists.nongnu.org/mailman/options/qemu-devel>,
 <mailto:qemu-devel-request@nongnu.org?subject=unsubscribe>
List-Archive: <https://lists.nongnu.org/archive/html/qemu-devel>
List-Post: <mailto:qemu-devel@nongnu.org>
List-Help: <mailto:qemu-devel-request@nongnu.org?subject=help>
List-Subscribe: <https://lists.nongnu.org/mailman/listinfo/qemu-devel>,
 <mailto:qemu-devel-request@nongnu.org?subject=subscribe>
Reply-To: qemu-devel@nongnu.org
Cc: kwolf@redhat.com, imammedo@redhat.com, qemu-devel@nongnu.org,
 armbru@redhat.com
Errors-To: qemu-devel-bounces+lists+qemu-devel=lfdr.de@nongnu.org
Sender: "Qemu-devel" <qemu-devel-bounces+lists+qemu-devel=lfdr.de@nongnu.org>

UGF0Y2hldyBVUkw6IGh0dHBzOi8vcGF0Y2hldy5vcmcvUUVNVS8yMDIxMDExODE2MzExMy43ODAx
NzEtMS1wYm9uemluaUByZWRoYXQuY29tLwoKCgpIaSwKClRoaXMgc2VyaWVzIHNlZW1zIHRvIGhh
dmUgc29tZSBjb2Rpbmcgc3R5bGUgcHJvYmxlbXMuIFNlZSBvdXRwdXQgYmVsb3cgZm9yCm1vcmUg
aW5mb3JtYXRpb246CgpUeXBlOiBzZXJpZXMKTWVzc2FnZS1pZDogMjAyMTAxMTgxNjMxMTMuNzgw
MTcxLTEtcGJvbnppbmlAcmVkaGF0LmNvbQpTdWJqZWN0OiBbUEFUQ0ggMDAvMjVdIHFlbXUtb3B0
aW9uLCBrZXl2YWwsIHZsOiBzd2l0Y2ggLW9iamVjdC8tTS8tYWNjZWwgdG8ga2V5dmFsIHBhcnNp
bmcKCj09PSBURVNUIFNDUklQVCBCRUdJTiA9PT0KIyEvYmluL2Jhc2gKZ2l0IHJldi1wYXJzZSBi
YXNlID4gL2Rldi9udWxsIHx8IGV4aXQgMApnaXQgY29uZmlnIC0tbG9jYWwgZGlmZi5yZW5hbWVs
aW1pdCAwCmdpdCBjb25maWcgLS1sb2NhbCBkaWZmLnJlbmFtZXMgVHJ1ZQpnaXQgY29uZmlnIC0t
bG9jYWwgZGlmZi5hbGdvcml0aG0gaGlzdG9ncmFtCi4vc2NyaXB0cy9jaGVja3BhdGNoLnBsIC0t
bWFpbGJhY2sgYmFzZS4uCj09PSBURVNUIFNDUklQVCBFTkQgPT09CgpVcGRhdGluZyAzYzhjZjVh
OWMyMWZmODc4MjE2NGQxZGVmN2Y0NGJkODg4NzEzMzg0CkZyb20gaHR0cHM6Ly9naXRodWIuY29t
L3BhdGNoZXctcHJvamVjdC9xZW11CiAqIFtuZXcgdGFnXSAgICAgICAgIHBhdGNoZXcvMjAyMTAx
MTgxNjMxMTMuNzgwMTcxLTEtcGJvbnppbmlAcmVkaGF0LmNvbSAtPiBwYXRjaGV3LzIwMjEwMTE4
MTYzMTEzLjc4MDE3MS0xLXBib256aW5pQHJlZGhhdC5jb20KU3dpdGNoZWQgdG8gYSBuZXcgYnJh
bmNoICd0ZXN0JwplYzI2ZmE0IHZsOiBzd2l0Y2ggLWFjY2VsIHBhcnNpbmcgdG8ga2V5dmFsCmI5
NzUwYzAgcWVtdS1vcHRpb246IHJlbW92ZSBub3ctZGVhZCBjb2RlCjBlYzA1M2Qgdmw6IHN3aXRj
aCAtTSBwYXJzaW5nIHRvIGtleXZhbAoyYmZlZGUwIHFvbTogZXhwb3J0IG1vcmUgZnVuY3Rpb25z
IGZvciB1c2Ugd2l0aCBub24tVXNlckNyZWF0YWJsZSBvYmplY3RzCjJjODQyMGQgc3RvcmFnZS1k
YWVtb246IGRvIG5vdCByZWdpc3RlciB0aGUgIm9iamVjdCIgZ3JvdXAgd2l0aCBRZW11T3B0cwo2
MDcyODc3IHFlbXU6IHVzZSBrZXl2YWwgZm9yIC1vYmplY3QgcGFyc2luZwpkNTk3Njc0IHFlbXUt
aW1nOiB1c2Uga2V5dmFsIGZvciAtb2JqZWN0IHBhcnNpbmcKNGJmMTFmYSBxZW11LW5iZDogdXNl
IGtleXZhbCBmb3IgLW9iamVjdCBwYXJzaW5nCjg1YTVlNWEgcWVtdS1pbzogdXNlIGtleXZhbCBm
b3IgLW9iamVjdCBwYXJzaW5nCjlhNDQ5MDEgcW9tOiBkbyBub3QgbW9kaWZ5IFFEaWN0IGFyZ3Vt
ZW50IGluIHVzZXJfY3JlYXRhYmxlX2FkZF9kaWN0CjE5M2M2YTIgdmw6IHBsdW1iIGtleXZhbC1i
YXNlZCBvcHRpb25zIGludG8gLXNldCBhbmQgLXJlYWRjb25maWcKMzE1NzllMCBxZW11LWNvbmZp
ZzogcGFyc2UgY29uZmlndXJhdGlvbiBmaWxlcyB0byBhIFFEaWN0CmJjMjAwNjggcWVtdS1vcHRp
b246IHN1cHBvcnQgYWNjZXB0LWFueSBRZW11T3B0c0xpc3QgaW4gcWVtdV9vcHRzX2Fic29yYl9x
ZGljdApjYTM5MGMzIHFlbXUtY29uZmlnOiBhZGQgZXJyb3IgcHJvcGFnYXRpb24gdG8gcWVtdV9j
b25maWdfcGFyc2UKNTliOTUxZiByZW1vdmUgLXdyaXRlY29uZmlnCmZhNDVhNzggaG1wOiBzcGVj
aWFsIGNhc2UgaGVscCBvcHRpb25zIGZvciBvYmplY3RfYWRkCjI1NjFiNzkgcW9tOiB1c2UgcWVt
dV9wcmludGYgdG8gcHJpbnQgaGVscCBmb3IgdXNlci1jcmVhdGFibGUgb2JqZWN0cwowY2FiNWY5
IGhtcDogcmVwbGFjZSAiTyIgcGFyc2VyIHdpdGgga2V5dmFsCmJkNjUxOWYga2V5dmFsOiBpbnRy
b2R1Y2Uga2V5dmFsX3BhcnNlX2ludG8KZDNmYzYyOCB0ZXN0czogY29udmVydCBjaGVjay1xb20t
cHJvcGxpc3QgdG8ga2V5dmFsCjQzN2ZkNDAga2V5dmFsOiBzaW1wbGlmeSBrZXl2YWxfcGFyc2Vf
b25lCmZmYzU1NDcga2V5dmFsOiBhY2NlcHQgZXNjYXBlZCBjb21tYXMgaW4gaW1wbGllZCBvcHRp
b24KOGEyNTFiZiBxZW11LW9wdGlvbjogd2FybiBmb3Igc2hvcnQtZm9ybSBib29sZWFuIG9wdGlv
bnMKYzJkOTg4OSBxZW11LW9wdGlvbjogbW92ZSBoZWxwIGhhbmRsaW5nIHRvIGdldF9vcHRfbmFt
ZV92YWx1ZQplMDY3YWQ2IHFlbXUtb3B0aW9uOiBjbGVhbiB1cCBpZCB2cy4gbGlzdC0+bWVyZ2Vf
bGlzdHMKCj09PSBPVVRQVVQgQkVHSU4gPT09CjEvMjUgQ2hlY2tpbmcgY29tbWl0IGUwNjdhZDY3
ZjE4ZiAocWVtdS1vcHRpb246IGNsZWFuIHVwIGlkIHZzLiBsaXN0LT5tZXJnZV9saXN0cykKMi8y
NSBDaGVja2luZyBjb21taXQgYzJkOTg4OTNkMDk1IChxZW11LW9wdGlvbjogbW92ZSBoZWxwIGhh
bmRsaW5nIHRvIGdldF9vcHRfbmFtZV92YWx1ZSkKMy8yNSBDaGVja2luZyBjb21taXQgOGEyNTFi
ZjUyNzM3IChxZW11LW9wdGlvbjogd2FybiBmb3Igc2hvcnQtZm9ybSBib29sZWFuIG9wdGlvbnMp
CldBUk5JTkc6IGxpbmUgb3ZlciA4MCBjaGFyYWN0ZXJzCiM4MjogRklMRTogdXRpbC9xZW11LW9w
dGlvbi5jOjc4NzoKKyAgICAgICAgICAgICAgICB3YXJuX3JlcG9ydCgic2hvcnQtZm9ybSBib29s
ZWFuIG9wdGlvbiAnJXMlcycgZGVwcmVjYXRlZCIsIHByZWZpeCwgKm5hbWUpOwoKV0FSTklORzog
bGluZSBvdmVyIDgwIGNoYXJhY3RlcnMKIzEwMTogRklMRTogdXRpbC9xZW11LW9wdGlvbi5jOjgx
ODoKKyAgICAgICAgcCA9IGdldF9vcHRfbmFtZV92YWx1ZShwLCBmaXJzdG5hbWUsIHdhcm5fb25f
ZmxhZywgaGVscF93YW50ZWQsICZvcHRpb24sICZ2YWx1ZSk7Cgp0b3RhbDogMCBlcnJvcnMsIDIg
d2FybmluZ3MsIDEyNyBsaW5lcyBjaGVja2VkCgpQYXRjaCAzLzI1IGhhcyBzdHlsZSBwcm9ibGVt
cywgcGxlYXNlIHJldmlldy4gIElmIGFueSBvZiB0aGVzZSBlcnJvcnMKYXJlIGZhbHNlIHBvc2l0
aXZlcyByZXBvcnQgdGhlbSB0byB0aGUgbWFpbnRhaW5lciwgc2VlCkNIRUNLUEFUQ0ggaW4gTUFJ
TlRBSU5FUlMuCjQvMjUgQ2hlY2tpbmcgY29tbWl0IGZmYzU1NDc4YjFjYiAoa2V5dmFsOiBhY2Nl
cHQgZXNjYXBlZCBjb21tYXMgaW4gaW1wbGllZCBvcHRpb24pCjUvMjUgQ2hlY2tpbmcgY29tbWl0
IDQzN2ZkNDAwMGIzNSAoa2V5dmFsOiBzaW1wbGlmeSBrZXl2YWxfcGFyc2Vfb25lKQo2LzI1IENo
ZWNraW5nIGNvbW1pdCBkM2ZjNjI4NzVmNmEgKHRlc3RzOiBjb252ZXJ0IGNoZWNrLXFvbS1wcm9w
bGlzdCB0byBrZXl2YWwpCjcvMjUgQ2hlY2tpbmcgY29tbWl0IGJkNjUxOWZmZDJkMSAoa2V5dmFs
OiBpbnRyb2R1Y2Uga2V5dmFsX3BhcnNlX2ludG8pCldBUk5JTkc6IGxpbmUgb3ZlciA4MCBjaGFy
YWN0ZXJzCiMyNTogRklMRTogaW5jbHVkZS9xZW11L29wdGlvbi5oOjE1MDoKK1FEaWN0ICprZXl2
YWxfcGFyc2VfaW50byhRRGljdCAqcWRpY3QsIGNvbnN0IGNoYXIgKnBhcmFtcywgY29uc3QgY2hh
ciAqaW1wbGllZF9rZXksCgpXQVJOSU5HOiBsaW5lIG92ZXIgODAgY2hhcmFjdGVycwojNDQ6IEZJ
TEU6IHV0aWwva2V5dmFsLmM6NDQyOgorUURpY3QgKmtleXZhbF9wYXJzZV9pbnRvKFFEaWN0ICpx
ZGljdCwgY29uc3QgY2hhciAqcGFyYW1zLCBjb25zdCBjaGFyICppbXBsaWVkX2tleSwKCnRvdGFs
OiAwIGVycm9ycywgMiB3YXJuaW5ncywgNzUgbGluZXMgY2hlY2tlZAoKUGF0Y2ggNy8yNSBoYXMg
c3R5bGUgcHJvYmxlbXMsIHBsZWFzZSByZXZpZXcuICBJZiBhbnkgb2YgdGhlc2UgZXJyb3JzCmFy
ZSBmYWxzZSBwb3NpdGl2ZXMgcmVwb3J0IHRoZW0gdG8gdGhlIG1haW50YWluZXIsIHNlZQpDSEVD
S1BBVENIIGluIE1BSU5UQUlORVJTLgo4LzI1IENoZWNraW5nIGNvbW1pdCAwY2FiNWY5N2FiM2Qg
KGhtcDogcmVwbGFjZSAiTyIgcGFyc2VyIHdpdGgga2V5dmFsKQo5LzI1IENoZWNraW5nIGNvbW1p
dCAyNTYxYjc5Yzc4M2UgKHFvbTogdXNlIHFlbXVfcHJpbnRmIHRvIHByaW50IGhlbHAgZm9yIHVz
ZXItY3JlYXRhYmxlIG9iamVjdHMpCjEwLzI1IENoZWNraW5nIGNvbW1pdCBmYTQ1YTc4YTlkOGYg
KGhtcDogc3BlY2lhbCBjYXNlIGhlbHAgb3B0aW9ucyBmb3Igb2JqZWN0X2FkZCkKMTEvMjUgQ2hl
Y2tpbmcgY29tbWl0IDU5Yjk1MWY5YjExMCAocmVtb3ZlIC13cml0ZWNvbmZpZykKMTIvMjUgQ2hl
Y2tpbmcgY29tbWl0IGNhMzkwYzNhZTdkZiAocWVtdS1jb25maWc6IGFkZCBlcnJvciBwcm9wYWdh
dGlvbiB0byBxZW11X2NvbmZpZ19wYXJzZSkKV0FSTklORzogbGluZSBvdmVyIDgwIGNoYXJhY3Rl
cnMKIzQzOiBGSUxFOiBpbmNsdWRlL3FlbXUvY29uZmlnLWZpbGUuaDoxMzoKK2ludCBxZW11X2Nv
bmZpZ19wYXJzZShGSUxFICpmcCwgUWVtdU9wdHNMaXN0ICoqbGlzdHMsIGNvbnN0IGNoYXIgKmZu
YW1lLCBFcnJvciAqKmVycnApOwoKV0FSTklORzogbGluZSBvdmVyIDgwIGNoYXJhY3RlcnMKIzEx
OTogRklMRTogdXRpbC9xZW11LWNvbmZpZy5jOjMxMToKK2ludCBxZW11X2NvbmZpZ19wYXJzZShG
SUxFICpmcCwgUWVtdU9wdHNMaXN0ICoqbGlzdHMsIGNvbnN0IGNoYXIgKmZuYW1lLCBFcnJvciAq
KmVycnApCgp0b3RhbDogMCBlcnJvcnMsIDIgd2FybmluZ3MsIDE0MSBsaW5lcyBjaGVja2VkCgpQ
YXRjaCAxMi8yNSBoYXMgc3R5bGUgcHJvYmxlbXMsIHBsZWFzZSByZXZpZXcuICBJZiBhbnkgb2Yg
dGhlc2UgZXJyb3JzCmFyZSBmYWxzZSBwb3NpdGl2ZXMgcmVwb3J0IHRoZW0gdG8gdGhlIG1haW50
YWluZXIsIHNlZQpDSEVDS1BBVENIIGluIE1BSU5UQUlORVJTLgoxMy8yNSBDaGVja2luZyBjb21t
aXQgYmMyMDA2ODI3NDQ2IChxZW11LW9wdGlvbjogc3VwcG9ydCBhY2NlcHQtYW55IFFlbXVPcHRz
TGlzdCBpbiBxZW11X29wdHNfYWJzb3JiX3FkaWN0KQoxNC8yNSBDaGVja2luZyBjb21taXQgMzE1
NzllMDMwODU0IChxZW11LWNvbmZpZzogcGFyc2UgY29uZmlndXJhdGlvbiBmaWxlcyB0byBhIFFE
aWN0KQpXQVJOSU5HOiBsaW5lIG92ZXIgODAgY2hhcmFjdGVycwojMjg6IEZJTEU6IGluY2x1ZGUv
cWVtdS9jb25maWctZmlsZS5oOjQ6Cit0eXBlZGVmIHZvaWQgUUVNVUNvbmZpZ0NCKGNvbnN0IGNo
YXIgKmdyb3VwLCBRRGljdCAqcWRpY3QsIHZvaWQgKm9wYXF1ZSwgRXJyb3IgKiplcnJwKTsKCldB
Uk5JTkc6IGxpbmUgb3ZlciA4MCBjaGFyYWN0ZXJzCiMzODogRklMRTogaW5jbHVkZS9xZW11L2Nv
bmZpZy1maWxlLmg6MTc6Cit2b2lkIHFlbXVfY29uZmlnX2RvX3BhcnNlKGNvbnN0IGNoYXIgKmdy
b3VwLCBRRGljdCAqcWRpY3QsIHZvaWQgKm9wYXF1ZSwgRXJyb3IgKiplcnJwKTsKCldBUk5JTkc6
IGxpbmUgb3ZlciA4MCBjaGFyYWN0ZXJzCiM2MjogRklMRTogc29mdG1tdS92bC5jOjMzMTY6Cisg
ICAgICAgICAgICAgICAgcWVtdV9yZWFkX2NvbmZpZ19maWxlKG9wdGFyZywgcWVtdV9jb25maWdf
ZG9fcGFyc2UsICZlcnJvcl9mYXRhbCk7CgpXQVJOSU5HOiBsaW5lIG92ZXIgODAgY2hhcmFjdGVy
cwojMTcwOiBGSUxFOiB1dGlsL3FlbXUtY29uZmlnLmM6Mzg0Ogordm9pZCBxZW11X2NvbmZpZ19k
b19wYXJzZShjb25zdCBjaGFyICpncm91cCwgUURpY3QgKnFkaWN0LCB2b2lkICpvcGFxdWUsIEVy
cm9yICoqZXJycCkKCldBUk5JTkc6IGxpbmUgb3ZlciA4MCBjaGFyYWN0ZXJzCiMxOTI6IEZJTEU6
IHV0aWwvcWVtdS1jb25maWcuYzo0MDY6CitpbnQgcWVtdV9jb25maWdfcGFyc2UoRklMRSAqZnAs
IFFlbXVPcHRzTGlzdCAqKmxpc3RzLCBjb25zdCBjaGFyICpmbmFtZSwgRXJyb3IgKiplcnJwKQoK
dG90YWw6IDAgZXJyb3JzLCA1IHdhcm5pbmdzLCAxNzAgbGluZXMgY2hlY2tlZAoKUGF0Y2ggMTQv
MjUgaGFzIHN0eWxlIHByb2JsZW1zLCBwbGVhc2UgcmV2aWV3LiAgSWYgYW55IG9mIHRoZXNlIGVy
cm9ycwphcmUgZmFsc2UgcG9zaXRpdmVzIHJlcG9ydCB0aGVtIHRvIHRoZSBtYWludGFpbmVyLCBz
ZWUKQ0hFQ0tQQVRDSCBpbiBNQUlOVEFJTkVSUy4KMTUvMjUgQ2hlY2tpbmcgY29tbWl0IDE5M2M2
YTJjYjE3MSAodmw6IHBsdW1iIGtleXZhbC1iYXNlZCBvcHRpb25zIGludG8gLXNldCBhbmQgLXJl
YWRjb25maWcpCldBUk5JTkc6IGxpbmUgb3ZlciA4MCBjaGFyYWN0ZXJzCiMxMTU6IEZJTEU6IHNv
ZnRtbXUvdmwuYzoyMDk1Ogorc3RhdGljIHZvaWQgcWVtdV9yZWNvcmRfY29uZmlnX2dyb3VwKGNv
bnN0IGNoYXIgKmdyb3VwLCBRRGljdCAqZGljdCwgRXJyb3IgKiplcnJwKQoKV0FSTklORzogbGlu
ZSBvdmVyIDgwIGNoYXJhY3RlcnMKIzEyNzogRklMRTogc29mdG1tdS92bC5jOjIxMDc6CitzdGF0
aWMgdm9pZCBxZW11X3NldF9xZGljdF9vcHRpb24oUURpY3QgKmRpY3QsIGNvbnN0IGNoYXIgKmtl
eSwgY29uc3QgY2hhciAqdmFsdWUsCgpXQVJOSU5HOiBsaW5lIG92ZXIgODAgY2hhcmFjdGVycwoj
MTUyOiBGSUxFOiBzb2Z0bW11L3ZsLmM6MjEzMjoKKyAgICAgICAgICAgIGVycm9yX3NldGcoZXJy
cCwgIkxpc3RzIGNhbm5vdCBiZSBhdCB0b3AgbGV2ZWwgb2YgYSBjb25maWd1cmF0aW9uIHNlY3Rp
b24iKTsKCldBUk5JTkc6IGxpbmUgb3ZlciA4MCBjaGFyYWN0ZXJzCiMyNTA6IEZJTEU6IHNvZnRt
bXUvdmwuYzozNDA1OgorICAgICAgICAgICAgICAgIHFlbXVfcmVhZF9jb25maWdfZmlsZShvcHRh
cmcsIHFlbXVfcGFyc2VfY29uZmlnX2dyb3VwLCAmZXJyb3JfZmF0YWwpOwoKRVJST1I6IGxpbmUg
b3ZlciA5MCBjaGFyYWN0ZXJzCiMyNjg6IEZJTEU6IHRlc3RzL3Rlc3Qta2V5dmFsLmM6NzQ2Ogor
ICAgIFFEaWN0ICpjb21iaW5lZCA9IGtleXZhbF9wYXJzZSgib3B0MT1BQkMsb3B0Mi5zdWIxPWRl
ZixvcHQyLnN1YjI9R0hJLG9wdDIuc3ViMz1KS0wsb3B0Mz14eXoiLAoKV0FSTklORzogbGluZSBv
dmVyIDgwIGNoYXJhY3RlcnMKIzMxODogRklMRTogdXRpbC9rZXl2YWwuYzozMTk6CitzdGF0aWMg
dm9pZCBrZXl2YWxfZG9fbWVyZ2UoUURpY3QgKm9sZCwgY29uc3QgUURpY3QgKm5ldywgR1N0cmlu
ZyAqc3RyLCBFcnJvciAqKmVycnApCgpXQVJOSU5HOiBsaW5lIG92ZXIgODAgY2hhcmFjdGVycwoj
MzI3OiBGSUxFOiB1dGlsL2tleXZhbC5jOjMyODoKKyAgICAgICAgICAgIGVycm9yX3NldGcoZXJy
cCwgIlBhcmFtZXRlciAnJXMlcycgdXNlZCBpbmNvbnNpc3RlbnRseSIsIHN0ci0+c3RyLCBlbnQt
PmtleSk7Cgp0b3RhbDogMSBlcnJvcnMsIDYgd2FybmluZ3MsIDI5MyBsaW5lcyBjaGVja2VkCgpQ
YXRjaCAxNS8yNSBoYXMgc3R5bGUgcHJvYmxlbXMsIHBsZWFzZSByZXZpZXcuICBJZiBhbnkgb2Yg
dGhlc2UgZXJyb3JzCmFyZSBmYWxzZSBwb3NpdGl2ZXMgcmVwb3J0IHRoZW0gdG8gdGhlIG1haW50
YWluZXIsIHNlZQpDSEVDS1BBVENIIGluIE1BSU5UQUlORVJTLgoKMTYvMjUgQ2hlY2tpbmcgY29t
bWl0IDlhNDQ5MDEzYzU2OCAocW9tOiBkbyBub3QgbW9kaWZ5IFFEaWN0IGFyZ3VtZW50IGluIHVz
ZXJfY3JlYXRhYmxlX2FkZF9kaWN0KQoxNy8yNSBDaGVja2luZyBjb21taXQgODVhNWU1YTRhZWVl
IChxZW11LWlvOiB1c2Uga2V5dmFsIGZvciAtb2JqZWN0IHBhcnNpbmcpCjE4LzI1IENoZWNraW5n
IGNvbW1pdCA0YmYxMWZhY2FlOGMgKHFlbXUtbmJkOiB1c2Uga2V5dmFsIGZvciAtb2JqZWN0IHBh
cnNpbmcpCjE5LzI1IENoZWNraW5nIGNvbW1pdCBkNTk3Njc0ZDIzZDcgKHFlbXUtaW1nOiB1c2Ug
a2V5dmFsIGZvciAtb2JqZWN0IHBhcnNpbmcpCjIwLzI1IENoZWNraW5nIGNvbW1pdCA2MDcyODc3
YjYyMjYgKHFlbXU6IHVzZSBrZXl2YWwgZm9yIC1vYmplY3QgcGFyc2luZykKRVJST1I6IGRvIG5v
dCBpbml0aWFsaXNlIHN0YXRpY3MgdG8gMCBvciBOVUxMCiMyMTE6IEZJTEU6IHNvZnRtbXUvdmwu
YzoxMzk6CitzdGF0aWMgR1NMaXN0ICpvYmplY3Rfb3B0c19saXN0ID0gTlVMTDsKCldBUk5JTkc6
IGxpbmUgb3ZlciA4MCBjaGFyYWN0ZXJzCiMzNDY6IEZJTEU6IHNvZnRtbXUvdmwuYzozNDcxOgor
ICAgICAgICAgICAgICAgICAgICBhcmdzID0ga2V5dmFsX3BhcnNlKG9wdGFyZywgInFvbS10eXBl
IiwgJmhlbHAsICZlcnJvcl9mYXRhbCk7Cgp0b3RhbDogMSBlcnJvcnMsIDEgd2FybmluZ3MsIDMy
NCBsaW5lcyBjaGVja2VkCgpQYXRjaCAyMC8yNSBoYXMgc3R5bGUgcHJvYmxlbXMsIHBsZWFzZSBy
ZXZpZXcuICBJZiBhbnkgb2YgdGhlc2UgZXJyb3JzCmFyZSBmYWxzZSBwb3NpdGl2ZXMgcmVwb3J0
IHRoZW0gdG8gdGhlIG1haW50YWluZXIsIHNlZQpDSEVDS1BBVENIIGluIE1BSU5UQUlORVJTLgoK
MjEvMjUgQ2hlY2tpbmcgY29tbWl0IDJjODQyMGQzNGU2MiAoc3RvcmFnZS1kYWVtb246IGRvIG5v
dCByZWdpc3RlciB0aGUgIm9iamVjdCIgZ3JvdXAgd2l0aCBRZW11T3B0cykKMjIvMjUgQ2hlY2tp
bmcgY29tbWl0IDJiZmVkZTA1YTgwYiAocW9tOiBleHBvcnQgbW9yZSBmdW5jdGlvbnMgZm9yIHVz
ZSB3aXRoIG5vbi1Vc2VyQ3JlYXRhYmxlIG9iamVjdHMpCkVSUk9SOiBjb2RlIGluZGVudCBzaG91
bGQgbmV2ZXIgdXNlIHRhYnMKIzQ1OiBGSUxFOiBpbmNsdWRlL3FvbS9vYmplY3QuaDo4ODI6Cite
SV5JXkleSSAgICAgICBFcnJvciAqKmVycnApOyQKCnRvdGFsOiAxIGVycm9ycywgMCB3YXJuaW5n
cywgMTA4IGxpbmVzIGNoZWNrZWQKClBhdGNoIDIyLzI1IGhhcyBzdHlsZSBwcm9ibGVtcywgcGxl
YXNlIHJldmlldy4gIElmIGFueSBvZiB0aGVzZSBlcnJvcnMKYXJlIGZhbHNlIHBvc2l0aXZlcyBy
ZXBvcnQgdGhlbSB0byB0aGUgbWFpbnRhaW5lciwgc2VlCkNIRUNLUEFUQ0ggaW4gTUFJTlRBSU5F
UlMuCgoyMy8yNSBDaGVja2luZyBjb21taXQgMGVjMDUzZGU5ZTVlICh2bDogc3dpdGNoIC1NIHBh
cnNpbmcgdG8ga2V5dmFsKQpXQVJOSU5HOiBsaW5lIG92ZXIgODAgY2hhcmFjdGVycwojMTg3OiBG
SUxFOiBzb2Z0bW11L3ZsLmM6MTU1ODoKKyAgICAgICAgICAgIGVycm9yX3NldGcoJmxvY2FsX2Vy
ciwgIk5vIG1hY2hpbmUgc3BlY2lmaWVkLCBhbmQgdGhlcmUgaXMgbm8gZGVmYXVsdCIpOwoKV0FS
TklORzogbGluZSBvdmVyIDgwIGNoYXJhY3RlcnMKIzIwMDogRklMRTogc29mdG1tdS92bC5jOjE1
NjQ6CisgICAgICAgIGVycm9yX2FwcGVuZF9oaW50KCZsb2NhbF9lcnIsICJVc2UgLW1hY2hpbmUg
aGVscCB0byBsaXN0IHN1cHBvcnRlZCBtYWNoaW5lc1xuIik7CgpXQVJOSU5HOiBsaW5lIG92ZXIg
ODAgY2hhcmFjdGVycwojMjM3OiBGSUxFOiBzb2Z0bW11L3ZsLmM6MTYwNToKKyAgICAgICAgICAg
IGVycm9yX3NldGcoZXJycCwgIkNvbmZsaWN0IGJldHdlZW4gJyVzJyBhbmQgJyVzJyIsIGVudC0+
a2V5LCBuZXdfa2V5KTsKCldBUk5JTkc6IGxpbmUgb3ZlciA4MCBjaGFyYWN0ZXJzCiMyNzc6IEZJ
TEU6IHNvZnRtbXUvdmwuYzoxNjI5OgorICAgICAgICBvYmplY3RfcmVnaXN0ZXJfc3VnYXJfcHJv
cChBQ0NFTF9DTEFTU19OQU1FKCJ4ZW4iKSwgImlnZC1wYXNzdGhydSIsIHZhbHVlKTsKCldBUk5J
Tkc6IGxpbmUgb3ZlciA4MCBjaGFyYWN0ZXJzCiMyODM6IEZJTEU6IHNvZnRtbXUvdmwuYzoxNjM1
OgorICAgICAgICBvYmplY3RfcmVnaXN0ZXJfc3VnYXJfcHJvcChBQ0NFTF9DTEFTU19OQU1FKCJr
dm0iKSwgImt2bS1zaGFkb3ctbWVtIiwgdmFsdWUpOwoKV0FSTklORzogbGluZSBvdmVyIDgwIGNo
YXJhY3RlcnMKIzI4OTogRklMRTogc29mdG1tdS92bC5jOjE2NDE6CisgICAgICAgIG9iamVjdF9y
ZWdpc3Rlcl9zdWdhcl9wcm9wKEFDQ0VMX0NMQVNTX05BTUUoImt2bSIpLCAia2VybmVsLWlycWNo
aXAiLCB2YWx1ZSk7CgpXQVJOSU5HOiBsaW5lIG92ZXIgODAgY2hhcmFjdGVycwojMjkwOiBGSUxF
OiBzb2Z0bW11L3ZsLmM6MTY0MjoKKyAgICAgICAgb2JqZWN0X3JlZ2lzdGVyX3N1Z2FyX3Byb3Ao
QUNDRUxfQ0xBU1NfTkFNRSgid2hweCIpLCAia2VybmVsLWlycWNoaXAiLCB2YWx1ZSk7CgpXQVJO
SU5HOiBsaW5lIG92ZXIgODAgY2hhcmFjdGVycwojMzExOiBGSUxFOiBzb2Z0bW11L3ZsLmM6MTcw
OToKKyAgICBvYmplY3Rfc2V0X3Byb3BlcnRpZXNfZnJvbV9rZXl2YWwoT0JKRUNUKGN1cnJlbnRf
bWFjaGluZSksIHFkaWN0LCAmZXJyb3JfZmF0YWwpOwoKRVJST1I6IGxpbmUgb3ZlciA5MCBjaGFy
YWN0ZXJzCiMzMjM6IEZJTEU6IHNvZnRtbXUvdmwuYzoxNzM5OgorICAgICAgICBzZW1paG9zdGlu
Z19hcmdfZmFsbGJhY2soY3VycmVudF9tYWNoaW5lLT5rZXJuZWxfZmlsZW5hbWUsIGN1cnJlbnRf
bWFjaGluZS0+a2VybmVsX2NtZGxpbmUpOwoKRVJST1I6IGxpbmUgb3ZlciA5MCBjaGFyYWN0ZXJz
CiMzNjU6IEZJTEU6IHNvZnRtbXUvdmwuYzoyMDE1OgorICAgICAgICBvYmplY3Rfc2V0X3Byb3Bl
cnRpZXNfZnJvbV9rZXl2YWwoT0JKRUNUKGN1cnJlbnRfbWFjaGluZSksIGRlZmF1bHRfb3B0cywg
JmVycm9yX2Fib3J0KTsKCkVSUk9SOiBsaW5lIG92ZXIgOTAgY2hhcmFjdGVycwojNDkzOiBGSUxF
OiBzb2Z0bW11L3ZsLmM6MzIwMjoKKyAgICAgICAgICAgICAgICAgICAga2V5dmFsX3BhcnNlX2lu
dG8obWFjaGluZV9vcHRzX2RpY3QsIG9wdGFyZywgInR5cGUiLCAmaGVscCwgJmVycm9yX2ZhdGFs
KTsKCnRvdGFsOiAzIGVycm9ycywgOCB3YXJuaW5ncywgNTIzIGxpbmVzIGNoZWNrZWQKClBhdGNo
IDIzLzI1IGhhcyBzdHlsZSBwcm9ibGVtcywgcGxlYXNlIHJldmlldy4gIElmIGFueSBvZiB0aGVz
ZSBlcnJvcnMKYXJlIGZhbHNlIHBvc2l0aXZlcyByZXBvcnQgdGhlbSB0byB0aGUgbWFpbnRhaW5l
ciwgc2VlCkNIRUNLUEFUQ0ggaW4gTUFJTlRBSU5FUlMuCgoyNC8yNSBDaGVja2luZyBjb21taXQg
Yjk3NTBjMGFkOTcwIChxZW11LW9wdGlvbjogcmVtb3ZlIG5vdy1kZWFkIGNvZGUpCjI1LzI1IENo
ZWNraW5nIGNvbW1pdCBlYzI2ZmE0NDcyNjMgKHZsOiBzd2l0Y2ggLWFjY2VsIHBhcnNpbmcgdG8g
a2V5dmFsKQpXQVJOSU5HOiBsaW5lIG92ZXIgODAgY2hhcmFjdGVycwojMjk6IEZJTEU6IGFjY2Vs
L2FjY2VsLmM6NTE6CisgICAgZ19hdXRvZnJlZSBjaGFyICpjbGFzc19uYW1lID0gZ19zdHJkdXBf
cHJpbnRmKEFDQ0VMX0NMQVNTX05BTUUoIiVzIiksIG9wdF9uYW1lKTsKCkVSUk9SOiBkbyBub3Qg
aW5pdGlhbGlzZSBzdGF0aWNzIHRvIDAgb3IgTlVMTAojNTY6IEZJTEU6IHNvZnRtbXUvdmwuYzox
NDI6CitzdGF0aWMgR1NMaXN0ICphY2NlbF9vcHRzX2xpc3QgPSBOVUxMOwoKV0FSTklORzogbGlu
ZSBvdmVyIDgwIGNoYXJhY3RlcnMKIzE3MjogRklMRTogc29mdG1tdS92bC5jOjIxOTg6CisgICAg
ICAgICAgICBlcnJvcl9yZXBvcnQoImZhaWxlZCB0byBpbml0aWFsaXplICVzOiAlcyIsIGFjLT5u
YW1lLCBzdHJlcnJvcigtcmV0KSk7Cgp0b3RhbDogMSBlcnJvcnMsIDIgd2FybmluZ3MsIDI1NyBs
aW5lcyBjaGVja2VkCgpQYXRjaCAyNS8yNSBoYXMgc3R5bGUgcHJvYmxlbXMsIHBsZWFzZSByZXZp
ZXcuICBJZiBhbnkgb2YgdGhlc2UgZXJyb3JzCmFyZSBmYWxzZSBwb3NpdGl2ZXMgcmVwb3J0IHRo
ZW0gdG8gdGhlIG1haW50YWluZXIsIHNlZQpDSEVDS1BBVENIIGluIE1BSU5UQUlORVJTLgoKPT09
IE9VVFBVVCBFTkQgPT09CgpUZXN0IGNvbW1hbmQgZXhpdGVkIHdpdGggY29kZTogMQoKClRoZSBm
dWxsIGxvZyBpcyBhdmFpbGFibGUgYXQKaHR0cDovL3BhdGNoZXcub3JnL2xvZ3MvMjAyMTAxMTgx
NjMxMTMuNzgwMTcxLTEtcGJvbnppbmlAcmVkaGF0LmNvbS90ZXN0aW5nLmNoZWNrcGF0Y2gvP3R5
cGU9bWVzc2FnZS4KLS0tCkVtYWlsIGdlbmVyYXRlZCBhdXRvbWF0aWNhbGx5IGJ5IFBhdGNoZXcg
W2h0dHBzOi8vcGF0Y2hldy5vcmcvXS4KUGxlYXNlIHNlbmQgeW91ciBmZWVkYmFjayB0byBwYXRj
aGV3LWRldmVsQHJlZGhhdC5jb20=

