Return-Path: <qemu-devel-bounces+lists+qemu-devel=lfdr.de@nongnu.org>
X-Original-To: lists+qemu-devel@lfdr.de
Delivered-To: lists+qemu-devel@lfdr.de
Received: from lists.gnu.org (lists.gnu.org [209.51.188.17])
	by mail.lfdr.de (Postfix) with ESMTPS id 7151C1587B6
	for <lists+qemu-devel@lfdr.de>; Tue, 11 Feb 2020 02:09:58 +0100 (CET)
Received: from localhost ([::1]:41944 helo=lists1p.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.90_1)
	(envelope-from <qemu-devel-bounces+lists+qemu-devel=lfdr.de@nongnu.org>)
	id 1j1K3p-0004am-GZ
	for lists+qemu-devel@lfdr.de; Mon, 10 Feb 2020 20:09:57 -0500
Received: from eggs.gnu.org ([2001:470:142:3::10]:60883)
 by lists.gnu.org with esmtp (Exim 4.90_1)
 (envelope-from <tsimpson@qualcomm.com>) id 1j1JcI-0001b5-Gn
 for qemu-devel@nongnu.org; Mon, 10 Feb 2020 19:41:32 -0500
Received: from Debian-exim by eggs.gnu.org with spam-scanned (Exim 4.71)
 (envelope-from <tsimpson@qualcomm.com>) id 1j1JcG-0006u5-BO
 for qemu-devel@nongnu.org; Mon, 10 Feb 2020 19:41:30 -0500
Received: from alexa-out-sd-02.qualcomm.com ([199.106.114.39]:59190)
 by eggs.gnu.org with esmtps (TLS1.0:RSA_AES_256_CBC_SHA1:32)
 (Exim 4.71) (envelope-from <tsimpson@qualcomm.com>)
 id 1j1JcF-0004pJ-Rc
 for qemu-devel@nongnu.org; Mon, 10 Feb 2020 19:41:28 -0500
DKIM-Signature: v=1; a=rsa-sha256; c=simple/simple;
 d=quicinc.com; i=@quicinc.com; q=dns/txt; s=qcdkim;
 t=1581381687; x=1612917687;
 h=from:to:cc:subject:date:message-id:in-reply-to:
 references:mime-version:content-transfer-encoding;
 bh=xCc8tU0ZmtsfOyTgqnpxrk8yBWhTG0TuiJxZPqvrxxM=;
 b=bGq7ODgDrRAABb0YO/1SdK9hE5zazGEh/IxmKiIUVXRBpyf4Oy9kl5A8
 mL+nQ6KYYvK9QFl3NKS1jtDYcC0bBFCun5cGw3ibGTJU2iLI7Op2Lk2mG
 PR4OeTUiaOYfvrHQZTCcpmlkoPTzQPMp/0X4VcEUDI+8o+k0af3b9KHhf M=;
Received: from unknown (HELO ironmsg05-sd.qualcomm.com) ([10.53.140.145])
 by alexa-out-sd-02.qualcomm.com with ESMTP; 10 Feb 2020 16:41:01 -0800
Received: from vu-tsimpson-aus.qualcomm.com (HELO
 vu-tsimpson1-aus.qualcomm.com) ([10.222.150.1])
 by ironmsg05-sd.qualcomm.com with ESMTP; 10 Feb 2020 16:41:00 -0800
Received: by vu-tsimpson1-aus.qualcomm.com (Postfix, from userid 47164)
 id 7B17D1BB0; Mon, 10 Feb 2020 18:41:00 -0600 (CST)
From: Taylor Simpson <tsimpson@quicinc.com>
To: qemu-devel@nongnu.org
Subject: [RFC PATCH 32/66] Hexagon instruction classes
Date: Mon, 10 Feb 2020 18:40:10 -0600
Message-Id: <1581381644-13678-33-git-send-email-tsimpson@quicinc.com>
X-Mailer: git-send-email 2.7.4
In-Reply-To: <1581381644-13678-1-git-send-email-tsimpson@quicinc.com>
References: <1581381644-13678-1-git-send-email-tsimpson@quicinc.com>
MIME-Version: 1.0
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
X-detected-operating-system: by eggs.gnu.org: FreeBSD 9.x [fuzzy]
X-Received-From: 199.106.114.39
X-BeenThere: qemu-devel@nongnu.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: <qemu-devel.nongnu.org>
List-Unsubscribe: <https://lists.nongnu.org/mailman/options/qemu-devel>,
 <mailto:qemu-devel-request@nongnu.org?subject=unsubscribe>
List-Archive: <https://lists.nongnu.org/archive/html/qemu-devel>
List-Post: <mailto:qemu-devel@nongnu.org>
List-Help: <mailto:qemu-devel-request@nongnu.org?subject=help>
List-Subscribe: <https://lists.nongnu.org/mailman/listinfo/qemu-devel>,
 <mailto:qemu-devel-request@nongnu.org?subject=subscribe>
Cc: riku.voipio@iki.fi, richard.henderson@linaro.org, laurent@vivier.eu,
 Taylor Simpson <tsimpson@quicinc.com>, philmd@redhat.com,
 aleksandar.m.mail@gmail.com
Errors-To: qemu-devel-bounces+lists+qemu-devel=lfdr.de@nongnu.org
Sender: "Qemu-devel" <qemu-devel-bounces+lists+qemu-devel=lfdr.de@nongnu.org>

VXNlZCB0byBkZXRlcm1pbmUgbGVnYWwgVkxJVyBzbG90cyBmb3IgZWFjaCBpbnN0cnVjdGlvbgoK
U2lnbmVkLW9mZi1ieTogVGF5bG9yIFNpbXBzb24gPHRzaW1wc29uQHF1aWNpbmMuY29tPgotLS0K
IHRhcmdldC9oZXhhZ29uL2ljbGFzcy5jIHwgMTA5ICsrKysrKysrKysrKysrKysrKysrKysrKysr
KysrKysrKysrKysrKysrKysrKysrKwogdGFyZ2V0L2hleGFnb24vaWNsYXNzLmggfCAgNDYgKysr
KysrKysrKysrKysrKysrKysKIDIgZmlsZXMgY2hhbmdlZCwgMTU1IGluc2VydGlvbnMoKykKIGNy
ZWF0ZSBtb2RlIDEwMDY0NCB0YXJnZXQvaGV4YWdvbi9pY2xhc3MuYwogY3JlYXRlIG1vZGUgMTAw
NjQ0IHRhcmdldC9oZXhhZ29uL2ljbGFzcy5oCgpkaWZmIC0tZ2l0IGEvdGFyZ2V0L2hleGFnb24v
aWNsYXNzLmMgYi90YXJnZXQvaGV4YWdvbi9pY2xhc3MuYwpuZXcgZmlsZSBtb2RlIDEwMDY0NApp
bmRleCAwMDAwMDAwLi5iNDFkM2RlCi0tLSAvZGV2L251bGwKKysrIGIvdGFyZ2V0L2hleGFnb24v
aWNsYXNzLmMKQEAgLTAsMCArMSwxMDkgQEAKKy8qCisgKiAgQ29weXJpZ2h0IChjKSAyMDE5IFF1
YWxjb21tIElubm92YXRpb24gQ2VudGVyLCBJbmMuIEFsbCBSaWdodHMgUmVzZXJ2ZWQuCisgKgor
ICogIFRoaXMgcHJvZ3JhbSBpcyBmcmVlIHNvZnR3YXJlOyB5b3UgY2FuIHJlZGlzdHJpYnV0ZSBp
dCBhbmQvb3IgbW9kaWZ5CisgKiAgaXQgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBHTlUgR2VuZXJh
bCBQdWJsaWMgTGljZW5zZSBhcyBwdWJsaXNoZWQgYnkKKyAqICB0aGUgRnJlZSBTb2Z0d2FyZSBG
b3VuZGF0aW9uOyBlaXRoZXIgdmVyc2lvbiAyIG9mIHRoZSBMaWNlbnNlLCBvcgorICogIChhdCB5
b3VyIG9wdGlvbikgYW55IGxhdGVyIHZlcnNpb24uCisgKgorICogIFRoaXMgcHJvZ3JhbSBpcyBk
aXN0cmlidXRlZCBpbiB0aGUgaG9wZSB0aGF0IGl0IHdpbGwgYmUgdXNlZnVsLAorICogIGJ1dCBX
SVRIT1VUIEFOWSBXQVJSQU5UWTsgd2l0aG91dCBldmVuIHRoZSBpbXBsaWVkIHdhcnJhbnR5IG9m
CisgKiAgTUVSQ0hBTlRBQklMSVRZIG9yIEZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NF
LiAgU2VlIHRoZQorICogIEdOVSBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlIGZvciBtb3JlIGRldGFp
bHMuCisgKgorICogIFlvdSBzaG91bGQgaGF2ZSByZWNlaXZlZCBhIGNvcHkgb2YgdGhlIEdOVSBH
ZW5lcmFsIFB1YmxpYyBMaWNlbnNlCisgKiAgYWxvbmcgd2l0aCB0aGlzIHByb2dyYW07IGlmIG5v
dCwgc2VlIDxodHRwOi8vd3d3LmdudS5vcmcvbGljZW5zZXMvPi4KKyAqLworCisjaW5jbHVkZSA8
c3RkZGVmLmg+CisjaW5jbHVkZSA8c3RkaW8uaD4KKyNpbmNsdWRlICJxZW11L29zZGVwLmgiCisj
aW5jbHVkZSAiaWNsYXNzLmgiCisKK3R5cGVkZWYgc3RydWN0IHsKKyAgICBjb25zdCBjaGFyICog
Y29uc3Qgc2xvdHM7Cit9IGljbGFzc19pbmZvX3Q7CisKK3N0YXRpYyBjb25zdCBpY2xhc3NfaW5m
b190IGljbGFzc19pbmZvW10gPSB7CisKKyNkZWZpbmUgREVGX0VFX0lDTEFTUzMyKFRZUEUsIFNM
T1RTLCBVTklUUykgICAgLyogbm90aGluZyAqLworI2RlZmluZSBERUZfUFBfSUNMQVNTMzIoVFlQ
RSwgU0xPVFMsIFVOSVRTKSBcCisgICAgW0lDTEFTU19GUk9NX1RZUEUoVFlQRSldID0geyAuc2xv
dHMgPSAjU0xPVFMgfSwKKworI2luY2x1ZGUgImltcG9ydGVkL2ljbGFzcy5kZWYiCisjdW5kZWYg
REVGX1BQX0lDTEFTUzMyCisjdW5kZWYgREVGX0VFX0lDTEFTUzMyCisKKyNkZWZpbmUgREVGX1BQ
X0lDTEFTUzMyKFRZUEUsIFNMT1RTLCBVTklUUykgICAgLyogbm90aGluZyAqLworI2RlZmluZSBE
RUZfRUVfSUNMQVNTMzIoVFlQRSwgU0xPVFMsIFVOSVRTKSBcCisgICAgW0lDTEFTU19GUk9NX1RZ
UEUoVFlQRSldID0geyAuc2xvdHMgPSAjU0xPVFMgfSwKKworI2luY2x1ZGUgImltcG9ydGVkL2lj
bGFzcy5kZWYiCisjdW5kZWYgREVGX1BQX0lDTEFTUzMyCisjdW5kZWYgREVGX0VFX0lDTEFTUzMy
CisKKyAgICB7MH0KK307CisKK2NvbnN0IGNoYXIgKmZpbmRfaWNsYXNzX3Nsb3RzKG9wY29kZV90
IG9wY29kZSwgaW50IGl0eXBlKQoreworICAgIC8qIFRoZXJlIGFyZSBzb21lIGV4Y2VwdGlvbnMg
dG8gd2hhdCB0aGUgaWNsYXNzIGRpY3RhdGVzICovCisgICAgaWYgKEdFVF9BVFRSSUIob3Bjb2Rl
LCBBX0lDT1ApKSB7CisgICAgICAgIHJldHVybiAiMiI7CisgICAgfSBlbHNlIGlmIChHRVRfQVRU
UklCKG9wY29kZSwgQV9SRVNUUklDVF9TTE9UME9OTFkpKSB7CisgICAgICAgIHJldHVybiAiMCI7
CisgICAgfSBlbHNlIGlmIChHRVRfQVRUUklCKG9wY29kZSwgQV9SRVNUUklDVF9TTE9UMU9OTFkp
KSB7CisgICAgICAgIHJldHVybiAiMSI7CisgICAgfSBlbHNlIGlmIChHRVRfQVRUUklCKG9wY29k
ZSwgQV9SRVNUUklDVF9TTE9UMk9OTFkpKSB7CisgICAgICAgIHJldHVybiAiMiI7CisgICAgfSBl
bHNlIGlmIChHRVRfQVRUUklCKG9wY29kZSwgQV9SRVNUUklDVF9TTE9UM09OTFkpKSB7CisgICAg
ICAgIHJldHVybiAiMyI7CisgICAgfSBlbHNlIGlmIChHRVRfQVRUUklCKG9wY29kZSwgQV9DT0Yp
ICYmCisgICAgICAgICAgICAgICBHRVRfQVRUUklCKG9wY29kZSwgQV9JTkRJUkVDVCkgJiYKKyAg
ICAgICAgICAgICAgICFHRVRfQVRUUklCKG9wY29kZSwgQV9NRU1MSUtFKSAmJgorICAgICAgICAg
ICAgICAgIUdFVF9BVFRSSUIob3Bjb2RlLCBBX01FTUxJS0VfUEFDS0VUX1JVTEVTKSkgeworICAg
ICAgICByZXR1cm4gIjIiOworICAgIH0gZWxzZSBpZiAoR0VUX0FUVFJJQihvcGNvZGUsIEFfUkVT
VFJJQ1RfTk9TTE9UMSkpIHsKKyAgICAgICAgcmV0dXJuICIwIjsKKyAgICB9IGVsc2UgaWYgKChv
cGNvZGUgPT0gSjJfdHJhcDApIHx8IChvcGNvZGUgPT0gSjJfdHJhcDEpIHx8CisgICAgICAgICAg
ICAgICAob3Bjb2RlID09IFkyX2lzeW5jKSB8fCAob3Bjb2RlID09IEoyX3J0ZSkgfHwKKyAgICAg
ICAgICAgICAgIChvcGNvZGUgPT0gSjJfcGF1c2UpIHx8IChvcGNvZGUgPT0gSjRfaGludGp1bXBy
KSkgeworICAgICAgICByZXR1cm4gIjIiOworICAgIH0gZWxzZSBpZiAoKGl0eXBlID09IElDTEFT
U19WMkxEU1QpICYmIChHRVRfQVRUUklCKG9wY29kZSwgQV9TVE9SRSkpKSB7CisgICAgICAgIHJl
dHVybiAiMDEiOworICAgIH0gZWxzZSBpZiAoKGl0eXBlID09IElDTEFTU19WMkxEU1QpICYmICgh
R0VUX0FUVFJJQihvcGNvZGUsIEFfU1RPUkUpKSkgeworICAgICAgICByZXR1cm4gIjAxIjsKKyAg
ICB9IGVsc2UgaWYgKEdFVF9BVFRSSUIob3Bjb2RlLCBBX0NSU0xPVDIzKSkgeworICAgICAgICBy
ZXR1cm4gIjIzIjsKKyAgICB9IGVsc2UgaWYgKEdFVF9BVFRSSUIob3Bjb2RlLCBBX1JFU1RSSUNU
X1BSRUZFUlNMT1QwKSkgeworICAgICAgICByZXR1cm4gIjAiOworICAgIH0gZWxzZSBpZiAoR0VU
X0FUVFJJQihvcGNvZGUsIEFfU1VCSU5TTikpIHsKKyAgICAgICAgcmV0dXJuICIwMSI7CisgICAg
fSBlbHNlIGlmIChHRVRfQVRUUklCKG9wY29kZSwgQV9DQUxMKSkgeworICAgICAgICByZXR1cm4g
IjIzIjsKKyAgICB9IGVsc2UgaWYgKChvcGNvZGUgPT0gSjRfanVtcHNldGkpIHx8IChvcGNvZGUg
PT0gSjRfanVtcHNldHIpKSB7CisgICAgICAgIHJldHVybiAiMjMiOworICAgIH0gZWxzZSBpZiAo
R0VUX0FUVFJJQihvcGNvZGUsIEFfRVhURU5TSU9OKSAmJiBHRVRfQVRUUklCKG9wY29kZSwgQV9D
VkkpKSB7CisgICAgICAgIC8qIENWSSBFWFRFTlNJT05TICovCisgICAgICAgIGlmIChHRVRfQVRU
UklCKG9wY29kZSwgQV9DVklfVk0pKSB7CisgICAgICAgICAgICByZXR1cm4gIjAxIjsKKyAgICAg
ICAgfSBlbHNlIGlmIChHRVRfQVRUUklCKG9wY29kZSwgQV9SRVNUUklDVF9TTE9UMk9OTFkpKSB7
CisgICAgICAgICAgICByZXR1cm4gIjIiOworICAgICAgICB9IGVsc2UgaWYgKEdFVF9BVFRSSUIo
b3Bjb2RlLCBBX0NWSV9TTE9UMjMpKSB7CisgICAgICAgICAgICByZXR1cm4gIjIzIjsKKyAgICAg
ICAgfSBlbHNlIGlmIChHRVRfQVRUUklCKG9wY29kZSwgQV9DVklfVlgpKSB7CisgICAgICAgICAg
ICByZXR1cm4gIjIzIjsKKyAgICAgICAgfSBlbHNlIGlmIChHRVRfQVRUUklCKG9wY29kZSwgQV9D
VklfVlhfRFYpKSB7CisgICAgICAgICAgICByZXR1cm4gIjIzIjsKKyAgICAgICAgfSBlbHNlIGlm
IChHRVRfQVRUUklCKG9wY29kZSwgQV9DVklfVlNfVlgpKSB7CisgICAgICAgICAgICByZXR1cm4g
IjIzIjsKKyAgICAgICAgfSBlbHNlIGlmIChHRVRfQVRUUklCKG9wY29kZSwgQV9NRU1MSUtFKSkg
eworICAgICAgICAgICAgcmV0dXJuICIwMSI7CisgICAgICAgIH0gZWxzZSB7CisgICAgICAgICAg
ICByZXR1cm4gIjAxMjMiOworICAgICAgICB9CisgICAgfSBlbHNlIHsKKyAgICAgICAgcmV0dXJu
IGljbGFzc19pbmZvW2l0eXBlXS5zbG90czsKKyAgICB9Cit9CisKZGlmZiAtLWdpdCBhL3Rhcmdl
dC9oZXhhZ29uL2ljbGFzcy5oIGIvdGFyZ2V0L2hleGFnb24vaWNsYXNzLmgKbmV3IGZpbGUgbW9k
ZSAxMDA2NDQKaW5kZXggMDAwMDAwMC4uOTFjMDczNgotLS0gL2Rldi9udWxsCisrKyBiL3Rhcmdl
dC9oZXhhZ29uL2ljbGFzcy5oCkBAIC0wLDAgKzEsNDYgQEAKKy8qCisgKiAgQ29weXJpZ2h0IChj
KSAyMDE5IFF1YWxjb21tIElubm92YXRpb24gQ2VudGVyLCBJbmMuIEFsbCBSaWdodHMgUmVzZXJ2
ZWQuCisgKgorICogIFRoaXMgcHJvZ3JhbSBpcyBmcmVlIHNvZnR3YXJlOyB5b3UgY2FuIHJlZGlz
dHJpYnV0ZSBpdCBhbmQvb3IgbW9kaWZ5CisgKiAgaXQgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBH
TlUgR2VuZXJhbCBQdWJsaWMgTGljZW5zZSBhcyBwdWJsaXNoZWQgYnkKKyAqICB0aGUgRnJlZSBT
b2Z0d2FyZSBGb3VuZGF0aW9uOyBlaXRoZXIgdmVyc2lvbiAyIG9mIHRoZSBMaWNlbnNlLCBvcgor
ICogIChhdCB5b3VyIG9wdGlvbikgYW55IGxhdGVyIHZlcnNpb24uCisgKgorICogIFRoaXMgcHJv
Z3JhbSBpcyBkaXN0cmlidXRlZCBpbiB0aGUgaG9wZSB0aGF0IGl0IHdpbGwgYmUgdXNlZnVsLAor
ICogIGJ1dCBXSVRIT1VUIEFOWSBXQVJSQU5UWTsgd2l0aG91dCBldmVuIHRoZSBpbXBsaWVkIHdh
cnJhbnR5IG9mCisgKiAgTUVSQ0hBTlRBQklMSVRZIG9yIEZJVE5FU1MgRk9SIEEgUEFSVElDVUxB
UiBQVVJQT1NFLiAgU2VlIHRoZQorICogIEdOVSBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlIGZvciBt
b3JlIGRldGFpbHMuCisgKgorICogIFlvdSBzaG91bGQgaGF2ZSByZWNlaXZlZCBhIGNvcHkgb2Yg
dGhlIEdOVSBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlCisgKiAgYWxvbmcgd2l0aCB0aGlzIHByb2dy
YW07IGlmIG5vdCwgc2VlIDxodHRwOi8vd3d3LmdudS5vcmcvbGljZW5zZXMvPi4KKyAqLworCisj
aWZuZGVmIElDTEFTU19ICisjZGVmaW5lIElDTEFTU19ICisKKyNpbmNsdWRlICJvcGNvZGVzLmgi
CisKKyNkZWZpbmUgSUNMQVNTX0ZST01fVFlQRShUWVBFKSBJQ0xBU1NfIyNUWVBFCisKK3R5cGVk
ZWYgZW51bSB7CisKKyNkZWZpbmUgREVGX1BQX0lDTEFTUzMyKFRZUEUsIFNMT1RTLCBVTklUUykg
ICAgSUNMQVNTX0ZST01fVFlQRShUWVBFKSwKKyNkZWZpbmUgREVGX0VFX0lDTEFTUzMyKFRZUEUs
IFNMT1RTLCBVTklUUykgICAgLyogbm90aGluZyAqLworI2luY2x1ZGUgImltcG9ydGVkL2ljbGFz
cy5kZWYiCisjdW5kZWYgREVGX1BQX0lDTEFTUzMyCisjdW5kZWYgREVGX0VFX0lDTEFTUzMyCisK
KyNkZWZpbmUgREVGX0VFX0lDTEFTUzMyKFRZUEUsIFNMT1RTLCBVTklUUykgICAgSUNMQVNTX0ZS
T01fVFlQRShUWVBFKSwKKyNkZWZpbmUgREVGX1BQX0lDTEFTUzMyKFRZUEUsIFNMT1RTLCBVTklU
UykgICAgLyogbm90aGluZyAqLworI2luY2x1ZGUgImltcG9ydGVkL2ljbGFzcy5kZWYiCisjdW5k
ZWYgREVGX1BQX0lDTEFTUzMyCisjdW5kZWYgREVGX0VFX0lDTEFTUzMyCisKKyAgICBJQ0xBU1Nf
RlJPTV9UWVBFKENPUFJPQ19WWCksCisgICAgSUNMQVNTX0ZST01fVFlQRShDT1BST0NfVk1FTSks
CisgICAgTlVNX0lDTEFTU0VTCit9IGljbGFzc190OworCitleHRlcm4gY29uc3QgY2hhciAqZmlu
ZF9pY2xhc3Nfc2xvdHMob3Bjb2RlX3Qgb3Bjb2RlLCBpbnQgaXR5cGUpOworCisjZW5kaWYKLS0g
CjIuNy40Cgo=

