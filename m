Return-Path: <qemu-devel-bounces+lists+qemu-devel=lfdr.de@nongnu.org>
X-Original-To: lists+qemu-devel@lfdr.de
Delivered-To: lists+qemu-devel@lfdr.de
Received: from lists.gnu.org (lists.gnu.org [209.51.188.17])
	by mail.lfdr.de (Postfix) with ESMTPS id 3908630AC1D
	for <lists+qemu-devel@lfdr.de>; Mon,  1 Feb 2021 16:57:50 +0100 (CET)
Received: from localhost ([::1]:37866 helo=lists1p.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.90_1)
	(envelope-from <qemu-devel-bounces+lists+qemu-devel=lfdr.de@nongnu.org>)
	id 1l6baH-0001sU-8H
	for lists+qemu-devel@lfdr.de; Mon, 01 Feb 2021 10:57:49 -0500
Received: from eggs.gnu.org ([2001:470:142:3::10]:43116)
 by lists.gnu.org with esmtps (TLS1.2:ECDHE_RSA_AES_256_GCM_SHA384:256)
 (Exim 4.90_1) (envelope-from <stefanha@redhat.com>)
 id 1l6bSu-0001Xs-Kz
 for qemu-devel@nongnu.org; Mon, 01 Feb 2021 10:50:12 -0500
Received: from us-smtp-delivery-124.mimecast.com ([216.205.24.124]:44639)
 by eggs.gnu.org with esmtps (TLS1.2:ECDHE_RSA_AES_256_CBC_SHA1:256)
 (Exim 4.90_1) (envelope-from <stefanha@redhat.com>)
 id 1l6bSn-0007zo-Qv
 for qemu-devel@nongnu.org; Mon, 01 Feb 2021 10:50:12 -0500
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=redhat.com;
 s=mimecast20190719; t=1612194604;
 h=from:from:reply-to:subject:subject:date:date:message-id:message-id:
 to:to:cc:cc:mime-version:mime-version:content-type:content-type:
 content-transfer-encoding:content-transfer-encoding:
 in-reply-to:in-reply-to:references:references;
 bh=q6OgaUSnngZHbYWWm4QIoi/uhcxQ8/I++PU8y9xYgbQ=;
 b=Vrzhq8cZbY3O9bNPrmDnf2Utwk+G/UaZoBJMu3jOiHdiKBVld2L1W4rki7xFVnGpAHPxvv
 j8Obh0Eyj2IdDXFfHsieOr57HaQ3RfehgTSECPS/dKNPz8geDmRKo3qYfUUeIc5Y10R38Q
 gNqg6WQrkA59Vk86OW/v2tCVZ1ti39M=
Received: from mimecast-mx01.redhat.com (mimecast-mx01.redhat.com
 [209.132.183.4]) (Using TLS) by relay.mimecast.com with ESMTP id
 us-mta-589-bROkb8sgOES5l1k48_rOCg-1; Mon, 01 Feb 2021 10:49:59 -0500
X-MC-Unique: bROkb8sgOES5l1k48_rOCg-1
Received: from smtp.corp.redhat.com (int-mx07.intmail.prod.int.phx2.redhat.com
 [10.5.11.22])
 (using TLSv1.2 with cipher AECDH-AES256-SHA (256/256 bits))
 (No client certificate requested)
 by mimecast-mx01.redhat.com (Postfix) with ESMTPS id 859981140752;
 Mon,  1 Feb 2021 15:47:53 +0000 (UTC)
Received: from localhost (ovpn-115-140.ams2.redhat.com [10.36.115.140])
 by smtp.corp.redhat.com (Postfix) with ESMTP id DCF8D100164C;
 Mon,  1 Feb 2021 15:47:52 +0000 (UTC)
From: Stefan Hajnoczi <stefanha@redhat.com>
To: qemu-devel@nongnu.org
Subject: [PULL 02/11] tracing: convert documentation to rST
Date: Mon,  1 Feb 2021 15:46:54 +0000
Message-Id: <20210201154703.180022-3-stefanha@redhat.com>
In-Reply-To: <20210201154703.180022-1-stefanha@redhat.com>
References: <20210201154703.180022-1-stefanha@redhat.com>
MIME-Version: 1.0
X-Scanned-By: MIMEDefang 2.84 on 10.5.11.22
Authentication-Results: relay.mimecast.com;
 auth=pass smtp.auth=CUSA124A263 smtp.mailfrom=stefanha@redhat.com
X-Mimecast-Spam-Score: 0
X-Mimecast-Originator: redhat.com
Content-Transfer-Encoding: base64
Content-Type: text/plain; charset="US-ASCII"
Received-SPF: pass client-ip=216.205.24.124; envelope-from=stefanha@redhat.com;
 helo=us-smtp-delivery-124.mimecast.com
X-Spam_score_int: -13
X-Spam_score: -1.4
X-Spam_bar: -
X-Spam_report: (-1.4 / 5.0 requ) BAYES_00=-1.9, DKIMWL_WL_HIGH=-0.351,
 DKIM_SIGNED=0.1, DKIM_VALID=-0.1, DKIM_VALID_AU=-0.1, DKIM_VALID_EF=-0.1,
 MIME_BASE64_TEXT=1.741, RCVD_IN_DNSWL_LOW=-0.7, RCVD_IN_MSPIKE_H3=0.001,
 RCVD_IN_MSPIKE_WL=0.001, SPF_HELO_NONE=0.001,
 SPF_PASS=-0.001 autolearn=unavailable autolearn_force=no
X-Spam_action: no action
X-BeenThere: qemu-devel@nongnu.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: <qemu-devel.nongnu.org>
List-Unsubscribe: <https://lists.nongnu.org/mailman/options/qemu-devel>,
 <mailto:qemu-devel-request@nongnu.org?subject=unsubscribe>
List-Archive: <https://lists.nongnu.org/archive/html/qemu-devel>
List-Post: <mailto:qemu-devel@nongnu.org>
List-Help: <mailto:qemu-devel-request@nongnu.org?subject=help>
List-Subscribe: <https://lists.nongnu.org/mailman/listinfo/qemu-devel>,
 <mailto:qemu-devel-request@nongnu.org?subject=subscribe>
Cc: Peter Maydell <peter.maydell@linaro.org>,
 Eduardo Habkost <ehabkost@redhat.com>, qemu-block@nongnu.org,
 Markus Armbruster <armbru@redhat.com>, Stefan Hajnoczi <stefanha@redhat.com>,
 Cleber Rosa <crosa@redhat.com>, Paolo Bonzini <pbonzini@redhat.com>
Errors-To: qemu-devel-bounces+lists+qemu-devel=lfdr.de@nongnu.org
Sender: "Qemu-devel" <qemu-devel-bounces+lists+qemu-devel=lfdr.de@nongnu.org>

VGhpcyBpcyBhIHNpbXBsZSByU1QgY29udmVyc2lvbiBvZiB0aGUgZG9jdW1lbnRhdGlvbi4KClJl
dmlld2VkLWJ5OiBQZXRlciBNYXlkZWxsIDxwZXRlci5tYXlkZWxsQGxpbmFyby5vcmc+ClNpZ25l
ZC1vZmYtYnk6IFN0ZWZhbiBIYWpub2N6aSA8c3RlZmFuaGFAcmVkaGF0LmNvbT4KTWVzc2FnZS1p
ZDogMjAyMDEyMTYxNjA5MjMuNzIyODk0LTMtc3RlZmFuaGFAcmVkaGF0LmNvbQpTaWduZWQtb2Zm
LWJ5OiBTdGVmYW4gSGFqbm9jemkgPHN0ZWZhbmhhQHJlZGhhdC5jb20+Ci0tLQogZG9jcy9kZXZl
bC9pbmRleC5yc3QgICAgICAgICAgICAgICAgICAgIHwgICAxICsKIGRvY3MvZGV2ZWwve3RyYWNp
bmcudHh0ID0+IHRyYWNpbmcucnN0fSB8IDEzNCArKysrKysrKysrKysrKy0tLS0tLS0tLS0KIDIg
ZmlsZXMgY2hhbmdlZCwgODEgaW5zZXJ0aW9ucygrKSwgNTQgZGVsZXRpb25zKC0pCiByZW5hbWUg
ZG9jcy9kZXZlbC97dHJhY2luZy50eHQgPT4gdHJhY2luZy5yc3R9ICg4OSUpCgpkaWZmIC0tZ2l0
IGEvZG9jcy9kZXZlbC9pbmRleC5yc3QgYi9kb2NzL2RldmVsL2luZGV4LnJzdAppbmRleCBlYTBl
MWUxN2FlLi45OGE3MDE2YTliIDEwMDY0NAotLS0gYS9kb2NzL2RldmVsL2luZGV4LnJzdAorKysg
Yi9kb2NzL2RldmVsL2luZGV4LnJzdApAQCAtMjgsNiArMjgsNyBAQCBDb250ZW50czoKICAgIHNl
Y3VyZS1jb2RpbmctcHJhY3RpY2VzCiAgICB0Y2cKICAgIHRjZy1pY291bnQKKyAgIHRyYWNpbmcK
ICAgIG11bHRpLXRocmVhZC10Y2cKICAgIHRjZy1wbHVnaW5zCiAgICBiaXRvcHMKZGlmZiAtLWdp
dCBhL2RvY3MvZGV2ZWwvdHJhY2luZy50eHQgYi9kb2NzL2RldmVsL3RyYWNpbmcucnN0CnNpbWls
YXJpdHkgaW5kZXggODklCnJlbmFtZSBmcm9tIGRvY3MvZGV2ZWwvdHJhY2luZy50eHQKcmVuYW1l
IHRvIGRvY3MvZGV2ZWwvdHJhY2luZy5yc3QKaW5kZXggMzEzYjhlYTRlOS4uZjdlNTg5ZjY3YyAx
MDA2NDQKLS0tIGEvZG9jcy9kZXZlbC90cmFjaW5nLnR4dAorKysgYi9kb2NzL2RldmVsL3RyYWNp
bmcucnN0CkBAIC0xLDMyICsxLDM4IEBACi09IFRyYWNpbmcgPQorPT09PT09PQorVHJhY2luZwor
PT09PT09PQogCi09PSBJbnRyb2R1Y3Rpb24gPT0KK0ludHJvZHVjdGlvbgorPT09PT09PT09PT09
CiAKIFRoaXMgZG9jdW1lbnQgZGVzY3JpYmVzIHRoZSB0cmFjaW5nIGluZnJhc3RydWN0dXJlIGlu
IFFFTVUgYW5kIGhvdyB0byB1c2UgaXQKIGZvciBkZWJ1Z2dpbmcsIHByb2ZpbGluZywgYW5kIG9i
c2VydmluZyBleGVjdXRpb24uCiAKLT09IFF1aWNrc3RhcnQgPT0KK1F1aWNrc3RhcnQKKz09PT09
PT09PT0KIAotMS4gQnVpbGQgd2l0aCB0aGUgJ3NpbXBsZScgdHJhY2UgYmFja2VuZDoKKzEuIEJ1
aWxkIHdpdGggdGhlICdzaW1wbGUnIHRyYWNlIGJhY2tlbmQ6OgogCiAgICAgLi9jb25maWd1cmUg
LS1lbmFibGUtdHJhY2UtYmFja2VuZHM9c2ltcGxlCiAgICAgbWFrZQogCi0yLiBDcmVhdGUgYSBm
aWxlIHdpdGggdGhlIGV2ZW50cyB5b3Ugd2FudCB0byB0cmFjZToKKzIuIENyZWF0ZSBhIGZpbGUg
d2l0aCB0aGUgZXZlbnRzIHlvdSB3YW50IHRvIHRyYWNlOjoKIAotICAgZWNobyBtZW1vcnlfcmVn
aW9uX29wc19yZWFkID4vdG1wL2V2ZW50cworICAgIGVjaG8gbWVtb3J5X3JlZ2lvbl9vcHNfcmVh
ZCA+L3RtcC9ldmVudHMKIAotMy4gUnVuIHRoZSB2aXJ0dWFsIG1hY2hpbmUgdG8gcHJvZHVjZSBh
IHRyYWNlIGZpbGU6CiszLiBSdW4gdGhlIHZpcnR1YWwgbWFjaGluZSB0byBwcm9kdWNlIGEgdHJh
Y2UgZmlsZTo6CiAKICAgICBxZW11IC0tdHJhY2UgZXZlbnRzPS90bXAvZXZlbnRzIC4uLiAjIHlv
dXIgbm9ybWFsIFFFTVUgaW52b2NhdGlvbgogCi00LiBQcmV0dHktcHJpbnQgdGhlIGJpbmFyeSB0
cmFjZSBmaWxlOgorNC4gUHJldHR5LXByaW50IHRoZSBiaW5hcnkgdHJhY2UgZmlsZTo6CiAKICAg
ICAuL3NjcmlwdHMvc2ltcGxldHJhY2UucHkgdHJhY2UtZXZlbnRzLWFsbCB0cmFjZS0qICMgT3Zl
cnJpZGUgKiB3aXRoIFFFTVUgPHBpZD4KIAotPT0gVHJhY2UgZXZlbnRzID09CitUcmFjZSBldmVu
dHMKKz09PT09PT09PT09PQogCi09PT0gU3ViLWRpcmVjdG9yeSBzZXR1cCA9PT0KK1N1Yi1kaXJl
Y3Rvcnkgc2V0dXAKKy0tLS0tLS0tLS0tLS0tLS0tLS0KIAogRWFjaCBkaXJlY3RvcnkgaW4gdGhl
IHNvdXJjZSB0cmVlIGNhbiBkZWNsYXJlIGEgc2V0IG9mIHN0YXRpYyB0cmFjZSBldmVudHMKIGlu
IGEgbG9jYWwgInRyYWNlLWV2ZW50cyIgZmlsZS4gQWxsIGRpcmVjdG9yaWVzIHdoaWNoIGNvbnRh
aW4gInRyYWNlLWV2ZW50cyIKQEAgLTUwLDcgKzU2LDcgQEAgSW4gdGhlIHN1Yi1kaXJlY3Rvcnkg
dGhlIGZvbGxvd2luZyBmaWxlcyB3aWxsIGJlIGF1dG9tYXRpY2FsbHkgZ2VuZXJhdGVkCiAgLSB0
cmFjZS11c3QuaCAtIFVTVCBldmVudCBwcm9iZSBoZWxwZXIgZGVjbGFyYXRpb25zCiAKIFNvdXJj
ZSBmaWxlcyBpbiB0aGUgc3ViLWRpcmVjdG9yeSBzaG91bGQgI2luY2x1ZGUgdGhlIGxvY2FsICd0
cmFjZS5oJyBmaWxlLAotd2l0aG91dCBhbnkgc3ViLWRpcmVjdG9yeSBwYXRoIHByZWZpeC4gZWcg
aW8vY2hhbm5lbC1idWZmZXIuYyB3b3VsZCBkbword2l0aG91dCBhbnkgc3ViLWRpcmVjdG9yeSBw
YXRoIHByZWZpeC4gZWcgaW8vY2hhbm5lbC1idWZmZXIuYyB3b3VsZCBkbzo6CiAKICAgI2luY2x1
ZGUgInRyYWNlLmgiCiAKQEAgLTYzLDkgKzY5LDEwIEBAIFRoZSB0b3AgbGV2ZWwgZGlyZWN0b3J5
IGdlbmVyYXRlcyB0cmFjZSBmaWxlcyB3aXRoIGEgZmlsZW5hbWUgcHJlZml4IG9mCiAidHJhY2Uv
dHJhY2Utcm9vdCIgaW5zdGVhZCBvZiBqdXN0ICJ0cmFjZSIuIFRoaXMgaXMgdG8gYXZvaWQgYW1i
aWd1aXR5IGJldHdlZW4KIGEgdHJhY2UuaCBpbiB0aGUgY3VycmVudCBkaXJlY3RvcnksIHZzIHRo
ZSB0b3AgbGV2ZWwgZGlyZWN0b3J5LgogCi09PT0gVXNpbmcgdHJhY2UgZXZlbnRzID09PQorVXNp
bmcgdHJhY2UgZXZlbnRzCistLS0tLS0tLS0tLS0tLS0tLS0KIAotVHJhY2UgZXZlbnRzIGFyZSBp
bnZva2VkIGRpcmVjdGx5IGZyb20gc291cmNlIGNvZGUgbGlrZSB0aGlzOgorVHJhY2UgZXZlbnRz
IGFyZSBpbnZva2VkIGRpcmVjdGx5IGZyb20gc291cmNlIGNvZGUgbGlrZSB0aGlzOjoKIAogICAg
ICNpbmNsdWRlICJ0cmFjZS5oIiAgLyogbmVlZGVkIGZvciB0cmFjZSBldmVudCBwcm90b3R5cGUg
Ki8KICAgICAKQEAgLTgyLDcgKzg5LDggQEAgVHJhY2UgZXZlbnRzIGFyZSBpbnZva2VkIGRpcmVj
dGx5IGZyb20gc291cmNlIGNvZGUgbGlrZSB0aGlzOgogICAgICAgICByZXR1cm4gcHRyOwogICAg
IH0KIAotPT09IERlY2xhcmluZyB0cmFjZSBldmVudHMgPT09CitEZWNsYXJpbmcgdHJhY2UgZXZl
bnRzCistLS0tLS0tLS0tLS0tLS0tLS0tLS0tCiAKIFRoZSAidHJhY2V0b29sIiBzY3JpcHQgcHJv
ZHVjZXMgdGhlIHRyYWNlLmggaGVhZGVyIGZpbGUgd2hpY2ggaXMgaW5jbHVkZWQgYnkKIGV2ZXJ5
IHNvdXJjZSBmaWxlIHRoYXQgdXNlcyB0cmFjZSBldmVudHMuICBTaW5jZSBtYW55IHNvdXJjZSBm
aWxlcyBpbmNsdWRlCkBAIC0xMTYsMTMgKzEyNCwxNCBAQCBGb3JtYXQgc3RyaW5ncyBtdXN0IG5v
dCBlbmQgd2l0aCBhIG5ld2xpbmUgY2hhcmFjdGVyLiAgSXQgaXMgdGhlIHJlc3BvbnNpYmlsaXR5
CiBvZiBiYWNrZW5kcyB0byBhZGFwdCBsaW5lIGVuZGluZyBmb3IgcHJvcGVyIGxvZ2dpbmcuCiAK
IEVhY2ggZXZlbnQgZGVjbGFyYXRpb24gd2lsbCBzdGFydCB3aXRoIHRoZSBldmVudCBuYW1lLCB0
aGVuIGl0cyBhcmd1bWVudHMsCi1maW5hbGx5IGEgZm9ybWF0IHN0cmluZyBmb3IgcHJldHR5LXBy
aW50aW5nLiBGb3IgZXhhbXBsZToKK2ZpbmFsbHkgYSBmb3JtYXQgc3RyaW5nIGZvciBwcmV0dHkt
cHJpbnRpbmcuIEZvciBleGFtcGxlOjoKIAogICAgIHFlbXVfdm1hbGxvYyhzaXplX3Qgc2l6ZSwg
dm9pZCAqcHRyKSAic2l6ZSAlenUgcHRyICVwIgogICAgIHFlbXVfdmZyZWUodm9pZCAqcHRyKSAi
cHRyICVwIgogCiAKLT09PSBIaW50cyBmb3IgYWRkaW5nIG5ldyB0cmFjZSBldmVudHMgPT09CitI
aW50cyBmb3IgYWRkaW5nIG5ldyB0cmFjZSBldmVudHMKKy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0t
LS0tLS0tLS0tLQogCiAxLiBUcmFjZSBzdGF0ZSBjaGFuZ2VzIGluIHRoZSBjb2RlLiAgSW50ZXJl
c3RpbmcgcG9pbnRzIGluIHRoZSBjb2RlIHVzdWFsbHkKICAgIGludm9sdmUgYSBzdGF0ZSBjaGFu
Z2UgbGlrZSBzdGFydGluZywgc3RvcHBpbmcsIGFsbG9jYXRpbmcsIGZyZWVpbmcuICBTdGF0ZQpA
QCAtMTQxLDcgKzE1MCw4IEBAIGZpbmFsbHkgYSBmb3JtYXQgc3RyaW5nIGZvciBwcmV0dHktcHJp
bnRpbmcuIEZvciBleGFtcGxlOgogNC4gTmFtZSB0cmFjZSBldmVudHMgYWZ0ZXIgdGhlaXIgZnVu
Y3Rpb24uICBJZiB0aGVyZSBhcmUgbXVsdGlwbGUgdHJhY2UgZXZlbnRzCiAgICBpbiBvbmUgZnVu
Y3Rpb24sIGFwcGVuZCBhIHVuaXF1ZSBkaXN0aW5ndWlzaGVyIGF0IHRoZSBlbmQgb2YgdGhlIG5h
bWUuCiAKLT09IEdlbmVyaWMgaW50ZXJmYWNlIGFuZCBtb25pdG9yIGNvbW1hbmRzID09CitHZW5l
cmljIGludGVyZmFjZSBhbmQgbW9uaXRvciBjb21tYW5kcworPT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT0KIAogWW91IGNhbiBwcm9ncmFtbWF0aWNhbGx5IHF1ZXJ5IGFuZCBj
b250cm9sIHRoZSBzdGF0ZSBvZiB0cmFjZSBldmVudHMgdGhyb3VnaCBhCiBiYWNrZW5kLWFnbm9z
dGljIGludGVyZmFjZSBwcm92aWRlZCBieSB0aGUgaGVhZGVyICJ0cmFjZS9jb250cm9sLmgiLgpA
QCAtMTUyLDExICsxNjIsMTEgQEAgaGVhZGVyICJ0cmFjZS9jb250cm9sLmgiIHRvIHNlZSB3aGlj
aCByb3V0aW5lcyBhcmUgYmFja2VuZC1kZXBlbmRlbnQpLgogCiBUaGUgc3RhdGUgb2YgZXZlbnRz
IGNhbiBhbHNvIGJlIHF1ZXJpZWQgYW5kIG1vZGlmaWVkIHRocm91Z2ggbW9uaXRvciBjb21tYW5k
czoKIAotKiBpbmZvIHRyYWNlLWV2ZW50cworKiBgYGluZm8gdHJhY2UtZXZlbnRzYGAKICAgVmll
dyBhdmFpbGFibGUgdHJhY2UgZXZlbnRzIGFuZCB0aGVpciBzdGF0ZS4gIFN0YXRlIDEgbWVhbnMg
ZW5hYmxlZCwgc3RhdGUgMAogICBtZWFucyBkaXNhYmxlZC4KIAotKiB0cmFjZS1ldmVudCBOQU1F
IG9ufG9mZgorKiBgYHRyYWNlLWV2ZW50IE5BTUUgb258b2ZmYGAKICAgRW5hYmxlL2Rpc2FibGUg
YSBnaXZlbiB0cmFjZSBldmVudCBvciBhIGdyb3VwIG9mIGV2ZW50cyAodXNpbmcgd2lsZGNhcmRz
KS4KIAogVGhlICItLXRyYWNlIGV2ZW50cz08ZmlsZT4iIGNvbW1hbmQgbGluZSBhcmd1bWVudCBj
YW4gYmUgdXNlZCB0byBlbmFibGUgdGhlCkBAIC0xNzAsMTEgKzE4MCwxMiBAQCB0byBlbmFibGUg
YW4gZW50aXJlIGZhbWlseSBvZiBldmVudHMgYnV0IG9uZSBub2lzeSBldmVudCBuZWVkcyB0byBi
ZSBkaXNhYmxlZC4KIFdpbGRjYXJkIG1hdGNoaW5nIGlzIHN1cHBvcnRlZCBpbiBib3RoIHRoZSBt
b25pdG9yIGNvbW1hbmQgInRyYWNlLWV2ZW50IiBhbmQgdGhlCiBldmVudHMgbGlzdCBmaWxlLiBU
aGF0IG1lYW5zIHlvdSBjYW4gZW5hYmxlL2Rpc2FibGUgdGhlIGV2ZW50cyBoYXZpbmcgYSBjb21t
b24KIHByZWZpeCBpbiBhIGJhdGNoLiBGb3IgZXhhbXBsZSwgdmlydGlvLWJsayB0cmFjZSBldmVu
dHMgY291bGQgYmUgZW5hYmxlZCB1c2luZwotdGhlIGZvbGxvd2luZyBtb25pdG9yIGNvbW1hbmQ6
Cit0aGUgZm9sbG93aW5nIG1vbml0b3IgY29tbWFuZDo6CiAKICAgICB0cmFjZS1ldmVudCB2aXJ0
aW9fYmxrXyogb24KIAotPT0gVHJhY2UgYmFja2VuZHMgPT0KK1RyYWNlIGJhY2tlbmRzCis9PT09
PT09PT09PT09PQogCiBUaGUgInRyYWNldG9vbCIgc2NyaXB0IGF1dG9tYXRlcyB0ZWRpb3VzIHRy
YWNlIGV2ZW50IGNvZGUgZ2VuZXJhdGlvbiBhbmQgYWxzbwoga2VlcHMgdGhlIHRyYWNlIGV2ZW50
IGRlY2xhcmF0aW9ucyBpbmRlcGVuZGVudCBvZiB0aGUgdHJhY2UgYmFja2VuZC4gIFRoZSB0cmFj
ZQpAQCAtMTgyLDcgKzE5Myw3IEBAIGV2ZW50cyBhcmUgbm90IHRpZ2h0bHkgY291cGxlZCB0byBh
IHNwZWNpZmljIHRyYWNlIGJhY2tlbmQsIHN1Y2ggYXMgTFRUbmcgb3IKIFN5c3RlbVRhcC4gIFN1
cHBvcnQgZm9yIHRyYWNlIGJhY2tlbmRzIGNhbiBiZSBhZGRlZCBieSBleHRlbmRpbmcgdGhlICJ0
cmFjZXRvb2wiCiBzY3JpcHQuCiAKLVRoZSB0cmFjZSBiYWNrZW5kcyBhcmUgY2hvc2VuIGF0IGNv
bmZpZ3VyZSB0aW1lOgorVGhlIHRyYWNlIGJhY2tlbmRzIGFyZSBjaG9zZW4gYXQgY29uZmlndXJl
IHRpbWU6OgogCiAgICAgLi9jb25maWd1cmUgLS1lbmFibGUtdHJhY2UtYmFja2VuZHM9c2ltcGxl
CiAKQEAgLTE5NCw3ICsyMDUsOCBAQCBJZiBubyBiYWNrZW5kcyBhcmUgZXhwbGljaXRseSBzZWxl
Y3RlZCwgY29uZmlndXJlIHdpbGwgZGVmYXVsdCB0byB0aGUKIAogVGhlIGZvbGxvd2luZyBzdWJz
ZWN0aW9ucyBkZXNjcmliZSB0aGUgc3VwcG9ydGVkIHRyYWNlIGJhY2tlbmRzLgogCi09PT0gTm9w
ID09PQorTm9wCistLS0KIAogVGhlICJub3AiIGJhY2tlbmQgZ2VuZXJhdGVzIGVtcHR5IHRyYWNl
IGV2ZW50IGZ1bmN0aW9ucyBzbyB0aGF0IHRoZSBjb21waWxlcgogY2FuIG9wdGltaXplIG91dCB0
cmFjZSBldmVudHMgY29tcGxldGVseS4gIFRoaXMgaW1wb3NlcyBubyBwZXJmb3JtYW5jZQpAQCAt
MjAzLDcgKzIxNSw4IEBAIHBlbmFsdHkuCiBOb3RlIHRoYXQgcmVnYXJkbGVzcyBvZiB0aGUgc2Vs
ZWN0ZWQgdHJhY2UgYmFja2VuZCwgZXZlbnRzIHdpdGggdGhlICJkaXNhYmxlIgogcHJvcGVydHkg
d2lsbCBiZSBnZW5lcmF0ZWQgd2l0aCB0aGUgIm5vcCIgYmFja2VuZC4KIAotPT09IExvZyA9PT0K
K0xvZworLS0tCiAKIFRoZSAibG9nIiBiYWNrZW5kIHNlbmRzIHRyYWNlIGV2ZW50cyBkaXJlY3Rs
eSB0byBzdGFuZGFyZCBlcnJvci4gIFRoaXMKIGVmZmVjdGl2ZWx5IHR1cm5zIHRyYWNlIGV2ZW50
cyBpbnRvIGRlYnVnIHByaW50ZnMuCkBAIC0yMTEsMjMgKzIyNCwyNiBAQCBlZmZlY3RpdmVseSB0
dXJucyB0cmFjZSBldmVudHMgaW50byBkZWJ1ZyBwcmludGZzLgogVGhpcyBpcyB0aGUgc2ltcGxl
c3QgYmFja2VuZCBhbmQgY2FuIGJlIHVzZWQgdG9nZXRoZXIgd2l0aCBleGlzdGluZyBjb2RlIHRo
YXQKIHVzZXMgRFBSSU5URigpLgogCi09PT0gU2ltcGxldHJhY2UgPT09CitTaW1wbGV0cmFjZQor
LS0tLS0tLS0tLS0KIAogVGhlICJzaW1wbGUiIGJhY2tlbmQgc3VwcG9ydHMgY29tbW9uIHVzZSBj
YXNlcyBhbmQgY29tZXMgYXMgcGFydCBvZiB0aGUgUUVNVQogc291cmNlIHRyZWUuICBJdCBtYXkg
bm90IGJlIGFzIHBvd2VyZnVsIGFzIHBsYXRmb3JtLXNwZWNpZmljIG9yIHRoaXJkLXBhcnR5CiB0
cmFjZSBiYWNrZW5kcyBidXQgaXQgaXMgcG9ydGFibGUuICBUaGlzIGlzIHRoZSByZWNvbW1lbmRl
ZCB0cmFjZSBiYWNrZW5kCiB1bmxlc3MgeW91IGhhdmUgc3BlY2lmaWMgbmVlZHMgZm9yIG1vcmUg
YWR2YW5jZWQgYmFja2VuZHMuCiAKLT09PT0gTW9uaXRvciBjb21tYW5kcyA9PT09CitNb25pdG9y
IGNvbW1hbmRzCit+fn5+fn5+fn5+fn5+fn5+CiAKLSogdHJhY2UtZmlsZSBvbnxvZmZ8Zmx1c2h8
c2V0IDxwYXRoPgorKiBgYHRyYWNlLWZpbGUgb258b2ZmfGZsdXNofHNldCA8cGF0aD5gYAogICBF
bmFibGUvZGlzYWJsZS9mbHVzaCB0aGUgdHJhY2UgZmlsZSBvciBzZXQgdGhlIHRyYWNlIGZpbGUg
bmFtZS4KIAotPT09PSBBbmFseXppbmcgdHJhY2UgZmlsZXMgPT09PQorQW5hbHl6aW5nIHRyYWNl
IGZpbGVzCit+fn5+fn5+fn5+fn5+fn5+fn5+fn4KIAogVGhlICJzaW1wbGUiIGJhY2tlbmQgcHJv
ZHVjZXMgYmluYXJ5IHRyYWNlIGZpbGVzIHRoYXQgY2FuIGJlIGZvcm1hdHRlZCB3aXRoIHRoZQog
c2ltcGxldHJhY2UucHkgc2NyaXB0LiAgVGhlIHNjcmlwdCB0YWtlcyB0aGUgInRyYWNlLWV2ZW50
cy1hbGwiIGZpbGUgYW5kIHRoZQotYmluYXJ5IHRyYWNlOgorYmluYXJ5IHRyYWNlOjoKIAogICAg
IC4vc2NyaXB0cy9zaW1wbGV0cmFjZS5weSB0cmFjZS1ldmVudHMtYWxsIHRyYWNlLTEyMzQ1CiAK
QEAgLTIzNSwyMyArMjUxLDI1IEBAIFlvdSBtdXN0IGVuc3VyZSB0aGF0IHRoZSBzYW1lICJ0cmFj
ZS1ldmVudHMtYWxsIiBmaWxlIHdhcyB1c2VkIHRvIGJ1aWxkIFFFTVUsCiBvdGhlcndpc2UgdHJh
Y2UgZXZlbnQgZGVjbGFyYXRpb25zIG1heSBoYXZlIGNoYW5nZWQgYW5kIG91dHB1dCB3aWxsIG5v
dCBiZQogY29uc2lzdGVudC4KIAotPT09IEZ0cmFjZSA9PT0KK0Z0cmFjZQorLS0tLS0tCiAKIFRo
ZSAiZnRyYWNlIiBiYWNrZW5kIHdyaXRlcyB0cmFjZSBkYXRhIHRvIGZ0cmFjZSBtYXJrZXIuIFRo
aXMgZWZmZWN0aXZlbHkKIHNlbmRzIHRyYWNlIGV2ZW50cyB0byBmdHJhY2UgcmluZyBidWZmZXIs
IGFuZCB5b3UgY2FuIGNvbXBhcmUgcWVtdSB0cmFjZQogZGF0YSBhbmQga2VybmVsKGVzcGVjaWFs
bHkga3ZtLmtvIHdoZW4gdXNpbmcgS1ZNKSB0cmFjZSBkYXRhLgogCi1pZiB5b3UgdXNlIEtWTSwg
ZW5hYmxlIGt2bSBldmVudHMgaW4gZnRyYWNlOgoraWYgeW91IHVzZSBLVk0sIGVuYWJsZSBrdm0g
ZXZlbnRzIGluIGZ0cmFjZTo6CiAKICAgICMgZWNobyAxID4gL3N5cy9rZXJuZWwvZGVidWcvdHJh
Y2luZy9ldmVudHMva3ZtL2VuYWJsZQogCi1BZnRlciBydW5uaW5nIHFlbXUgYnkgcm9vdCB1c2Vy
LCB5b3UgY2FuIGdldCB0aGUgdHJhY2U6CitBZnRlciBydW5uaW5nIHFlbXUgYnkgcm9vdCB1c2Vy
LCB5b3UgY2FuIGdldCB0aGUgdHJhY2U6OgogCiAgICAjIGNhdCAvc3lzL2tlcm5lbC9kZWJ1Zy90
cmFjaW5nL3RyYWNlCiAKIFJlc3RyaWN0aW9uOiAiZnRyYWNlIiBiYWNrZW5kIGlzIHJlc3RyaWN0
ZWQgdG8gTGludXggb25seS4KIAotPT09IFN5c2xvZyA9PT0KK1N5c2xvZworLS0tLS0tCiAKIFRo
ZSAic3lzbG9nIiBiYWNrZW5kIHNlbmRzIHRyYWNlIGV2ZW50cyB1c2luZyB0aGUgUE9TSVggc3lz
bG9nIEFQSS4gVGhlIGxvZwogaXMgb3BlbmVkIHNwZWNpZnlpbmcgdGhlIExPR19EQUVNT04gZmFj
aWxpdHkgYW5kIExPR19QSUQgb3B0aW9uIChzbyBldmVudHMKQEAgLTI2Myw3ICsyODEsOCBAQCBO
T1RFOiBzeXNsb2cgbWF5IHNxdWFzaCBkdXBsaWNhdGUgY29uc2VjdXRpdmUgdHJhY2UgZXZlbnRz
IGFuZCBhcHBseSByYXRlCiAKIFJlc3RyaWN0aW9uOiAic3lzbG9nIiBiYWNrZW5kIGlzIHJlc3Ry
aWN0ZWQgdG8gUE9TSVggY29tcGxpYW50IE9TLgogCi09PT0gTFRUbmcgVXNlcnNwYWNlIFRyYWNl
ciA9PT0KK0xUVG5nIFVzZXJzcGFjZSBUcmFjZXIKKy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0KIAog
VGhlICJ1c3QiIGJhY2tlbmQgdXNlcyB0aGUgTFRUbmcgVXNlcnNwYWNlIFRyYWNlciBsaWJyYXJ5
LiAgVGhlcmUgYXJlIG5vCiBtb25pdG9yIGNvbW1hbmRzIGJ1aWx0IGludG8gUUVNVSwgaW5zdGVh
ZCBVU1QgdXRpbGl0aWVzIHNob3VsZCBiZSB1c2VkIHRvIGxpc3QsCkBAIC0yNzUsNDMgKzI5NCw0
NCBAQCBsdHRuZy1zZXNzaW9uZCBkYWVtb24gZm9yIHRoZSBjdXJyZW50IHVzZXIgcHJpb3IgdG8g
cnVubmluZyBhbnkgaW5zdGFuY2Ugb2YKIFFFTVUuCiAKIFdoaWxlIHJ1bm5pbmcgYW4gaW5zdHJ1
bWVudGVkIFFFTVUsIExUVG5nIHNob3VsZCBiZSBhYmxlIHRvIGxpc3QgYWxsIGF2YWlsYWJsZQot
ZXZlbnRzOgorZXZlbnRzOjoKIAogICAgIGx0dG5nIGxpc3QgLXUKIAotQ3JlYXRlIHRyYWNpbmcg
c2Vzc2lvbjoKK0NyZWF0ZSB0cmFjaW5nIHNlc3Npb246OgogCiAgICAgbHR0bmcgY3JlYXRlIG15
c2Vzc2lvbgogCi1FbmFibGUgZXZlbnRzOgorRW5hYmxlIGV2ZW50czo6CiAKICAgICBsdHRuZyBl
bmFibGUtZXZlbnQgcWVtdTpnX21hbGxvYyAtdQogCiBXaGVyZSB0aGUgZXZlbnRzIGNhbiBlaXRo
ZXIgYmUgYSBjb21tYS1zZXBhcmF0ZWQgbGlzdCBvZiBldmVudHMsIG9yICItYSIgdG8KLWVuYWJs
ZSBhbGwgdHJhY2Vwb2ludCBldmVudHMuIFN0YXJ0IGFuZCBzdG9wIHRyYWNpbmcgYXMgbmVlZGVk
OgorZW5hYmxlIGFsbCB0cmFjZXBvaW50IGV2ZW50cy4gU3RhcnQgYW5kIHN0b3AgdHJhY2luZyBh
cyBuZWVkZWQ6OgogCiAgICAgbHR0bmcgc3RhcnQKICAgICBsdHRuZyBzdG9wCiAKLVZpZXcgdGhl
IHRyYWNlOgorVmlldyB0aGUgdHJhY2U6OgogCiAgICAgbHR0bmcgdmlldwogCi1EZXN0cm95IHRy
YWNpbmcgc2Vzc2lvbjoKK0Rlc3Ryb3kgdHJhY2luZyBzZXNzaW9uOjoKIAogICAgIGx0dG5nIGRl
c3Ryb3kKIAotQmFiZWx0cmFjZSBjYW4gYmUgdXNlZCBhdCBhbnkgbGF0ZXIgdGltZSB0byB2aWV3
IHRoZSB0cmFjZToKK0JhYmVsdHJhY2UgY2FuIGJlIHVzZWQgYXQgYW55IGxhdGVyIHRpbWUgdG8g
dmlldyB0aGUgdHJhY2U6OgogCiAgICAgYmFiZWx0cmFjZSAkSE9NRS9sdHRuZy10cmFjZXMvbXlz
ZXNzaW9uLTxkYXRlPi08dGltZT4KIAotPT09IFN5c3RlbVRhcCA9PT0KK1N5c3RlbVRhcAorLS0t
LS0tLS0tCiAKIFRoZSAiZHRyYWNlIiBiYWNrZW5kIHVzZXMgRFRyYWNlIHNkdCBwcm9iZXMgYnV0
IGhhcyBvbmx5IGJlZW4gdGVzdGVkIHdpdGgKIFN5c3RlbVRhcC4gIFdoZW4gU3lzdGVtVGFwIHN1
cHBvcnQgaXMgZGV0ZWN0ZWQgYSAuc3RwIGZpbGUgd2l0aCB3cmFwcGVyIHByb2JlcwogaXMgZ2Vu
ZXJhdGVkIHRvIG1ha2UgdXNlIGluIHNjcmlwdHMgbW9yZSBjb252ZW5pZW50LiAgVGhpcyBzdGVw
IGNhbiBhbHNvIGJlCiBwZXJmb3JtZWQgbWFudWFsbHkgYWZ0ZXIgYSBidWlsZCBpbiBvcmRlciB0
byBjaGFuZ2UgdGhlIGJpbmFyeSBuYW1lIGluIHRoZSAuc3RwCi1wcm9iZXM6Citwcm9iZXM6Ogog
CiAgICAgc2NyaXB0cy90cmFjZXRvb2wucHkgLS1iYWNrZW5kcz1kdHJhY2UgLS1mb3JtYXQ9c3Rh
cCBcCiAgICAgICAgICAgICAgICAgICAgICAgICAgLS1iaW5hcnkgcGF0aC90by9xZW11LWJpbmFy
eSBcCkBAIC0zMjUsMTIgKzM0NSwxNCBAQCBUbyBmYWNpbGl0YXRlIHNpbXBsZSB1c2FnZSBvZiBz
eXN0ZW10YXAgd2hlcmUgdGhlcmUgbWVyZWx5IG5lZWRzIHRvIGJlIHByaW50ZgogbG9nZ2luZyBv
ZiBjZXJ0YWluIHByb2JlcywgYSBoZWxwZXIgc2NyaXB0ICJxZW11LXRyYWNlLXN0YXAiIGlzIHBy
b3ZpZGVkLgogQ29uc3VsdCBpdHMgbWFudWFsIHBhZ2UgZm9yIGd1aWRhbmNlIG9uIGl0cyB1c2Fn
ZS4KIAotPT0gVHJhY2UgZXZlbnQgcHJvcGVydGllcyA9PQorVHJhY2UgZXZlbnQgcHJvcGVydGll
cworPT09PT09PT09PT09PT09PT09PT09PQogCiBFYWNoIGV2ZW50IGluIHRoZSAidHJhY2UtZXZl
bnRzLWFsbCIgZmlsZSBjYW4gYmUgcHJlZml4ZWQgd2l0aCBhIHNwYWNlLXNlcGFyYXRlZAogbGlz
dCBvZiB6ZXJvIG9yIG1vcmUgb2YgdGhlIGZvbGxvd2luZyBldmVudCBwcm9wZXJ0aWVzLgogCi09
PT0gImRpc2FibGUiID09PQorImRpc2FibGUiCistLS0tLS0tLS0KIAogSWYgYSBzcGVjaWZpYyB0
cmFjZSBldmVudCBpcyBnb2luZyB0byBiZSBpbnZva2VkIGEgaHVnZSBudW1iZXIgb2YgdGltZXMs
IHRoaXMKIG1pZ2h0IGhhdmUgYSBub3RpY2VhYmxlIHBlcmZvcm1hbmNlIGltcGFjdCBldmVuIHdo
ZW4gdGhlIGV2ZW50IGlzCkBAIC0zNDgsNiArMzcwLDggQEAgZ3VhcmQgc3VjaCBjb21wdXRhdGlv
bnMsIHNvIHRoZXkgYXJlIHNraXBwZWQgaWYgdGhlIGV2ZW50IGhhcyBiZWVuIGVpdGhlcgogY29t
cGlsZS10aW1lIGRpc2FibGVkIG9yIHJ1bi10aW1lIGRpc2FibGVkLiBJZiB0aGUgZXZlbnQgaXMg
Y29tcGlsZS10aW1lCiBkaXNhYmxlZCwgdGhpcyBjaGVjayB3aWxsIGhhdmUgbm8gcGVyZm9ybWFu
Y2UgaW1wYWN0LgogCis6OgorCiAgICAgI2luY2x1ZGUgInRyYWNlLmgiICAvKiBuZWVkZWQgZm9y
IHRyYWNlIGV2ZW50IHByb3RvdHlwZSAqLwogICAgIAogICAgIHZvaWQgKnFlbXVfdm1hbGxvYyhz
aXplX3Qgc2l6ZSkKQEAgLTM2Nyw3ICszOTEsOCBAQCBkaXNhYmxlZCwgdGhpcyBjaGVjayB3aWxs
IGhhdmUgbm8gcGVyZm9ybWFuY2UgaW1wYWN0LgogICAgICAgICByZXR1cm4gcHRyOwogICAgIH0K
IAotPT09ICJ0Y2ciID09PQorInRjZyIKKy0tLS0tCiAKIEd1ZXN0IGNvZGUgZ2VuZXJhdGVkIGJ5
IFRDRyBjYW4gYmUgdHJhY2VkIGJ5IGRlZmluaW5nIGFuIGV2ZW50IHdpdGggdGhlICJ0Y2ciCiBl
dmVudCBwcm9wZXJ0eS4gSW50ZXJuYWxseSwgdGhpcyBwcm9wZXJ0eSBnZW5lcmF0ZXMgdHdvIGV2
ZW50czoKQEAgLTM4NCwxMSArNDA5LDExIEBAIG1peCBvZiBuYXRpdmUgYW5kIFRDRyB0eXBlcywg
YW5kICJ0cmFjZV88ZXZlbnRuYW1lPl90Y2ciIHdpbGwgZ3JhY2VmdWxseSBmb3J3YXJkCiB0aGVt
IHRvIHRoZSAiPGV2ZW50bmFtZT5fdHJhbnMiIGFuZCAiPGV2ZW50bmFtZT5fZXhlYyIgZXZlbnRz
LiBTaW5jZSBUQ0cgdmFsdWVzCiBhcmUgbm90IGtub3duIGF0IHRyYW5zbGF0aW9uIHRpbWUsIHRo
ZXNlIGFyZSBpZ25vcmVkIGJ5IHRoZSAiPGV2ZW50bmFtZT5fdHJhbnMiCiBldmVudC4gQmVjYXVz
ZSBvZiB0aGlzLCB0aGUgZW50cnkgaW4gdGhlICJ0cmFjZS1ldmVudHMiIGZpbGUgbmVlZHMgdHdv
IHByaW50aW5nCi1mb3JtYXRzIChzZXBhcmF0ZWQgYnkgYSBjb21tYSk6Citmb3JtYXRzIChzZXBh
cmF0ZWQgYnkgYSBjb21tYSk6OgogCiAgICAgdGNnIGZvbyh1aW50OF90IGExLCBUQ0d2X2kzMiBh
MikgImExPSVkIiwgImExPSVkIGEyPSVkIgogCi1Gb3IgZXhhbXBsZToKK0ZvciBleGFtcGxlOjoK
IAogICAgICNpbmNsdWRlICJ0cmFjZS10Y2cuaCIKICAgICAKQEAgLTM5OSwxNSArNDI0LDE2IEBA
IEZvciBleGFtcGxlOgogICAgICAgICB0cmFjZV9mb29fdGNnKGExLCBhMik7CiAgICAgfQogCi1U
aGlzIHdpbGwgaW1tZWRpYXRlbHkgY2FsbDoKK1RoaXMgd2lsbCBpbW1lZGlhdGVseSBjYWxsOjoK
IAogICAgIHZvaWQgdHJhY2VfZm9vX3RyYW5zKHVpbnQ4X3QgYTEpOwogCi1hbmQgd2lsbCBnZW5l
cmF0ZSB0aGUgVENHIGNvZGUgdG8gY2FsbDoKK2FuZCB3aWxsIGdlbmVyYXRlIHRoZSBUQ0cgY29k
ZSB0byBjYWxsOjoKIAogICAgIHZvaWQgdHJhY2VfZm9vKHVpbnQ4X3QgYTEsIHVpbnQzMl90IGEy
KTsKIAotPT09ICJ2Y3B1IiA9PT0KKyJ2Y3B1IgorLS0tLS0tCiAKIElkZW50aWZpZXMgZXZlbnRz
IHRoYXQgdHJhY2UgdkNQVS1zcGVjaWZpYyBpbmZvcm1hdGlvbi4gSXQgaW1wbGljaXRseSBhZGRz
IGEKICJDUFVTdGF0ZSoiIGFyZ3VtZW50LCBhbmQgZXh0ZW5kcyB0aGUgdHJhY2luZyBwcmludCBm
b3JtYXQgdG8gc2hvdyB0aGUgdkNQVQpAQCAtNDE4LDEzICs0NDQsMTMgQEAgcG9pbnRzIHRvIHRo
ZSB2Q1BVIHdoZW4gZ3Vlc3QgY29kZSBpcyBleGVjdXRlZCAodXN1YWxseSB0aGUgImNwdV9lbnYi
IHZhcmlhYmxlKS4KIFRoZSAidGNnIiBhbmQgInZjcHUiIHByb3BlcnRpZXMgYXJlIGN1cnJlbnRs
eSBvbmx5IGhvbm9yZWQgaW4gdGhlIHJvb3QKIC4vdHJhY2UtZXZlbnRzIGZpbGUuCiAKLVRoZSBm
b2xsb3dpbmcgZXhhbXBsZSBldmVudHM6CitUaGUgZm9sbG93aW5nIGV4YW1wbGUgZXZlbnRzOjoK
IAogICAgIGZvbyh1aW50MzJfdCBhKSAiYT0leCIKICAgICB2Y3B1IGJhcih1aW50MzJfdCBhKSAi
YT0leCIKICAgICB0Y2cgdmNwdSBiYXoodWludDMyX3QgYSkgImE9JXgiLCAiYT0leCIKIAotQ2Fu
IGJlIHVzZWQgYXM6CitDYW4gYmUgdXNlZCBhczo6CiAKICAgICAjaW5jbHVkZSAidHJhY2UtdGNn
LmgiCiAgICAgCkBAIC00NDIsNyArNDY4LDcgQEAgQ2FuIGJlIHVzZWQgYXM6CiAgICAgfQogCiBJ
ZiB0aGUgdHJhbnNsYXRpbmcgdkNQVSBoYXMgYWRkcmVzcyAweGMxIGFuZCBjb2RlIGlzIGxhdGVy
IGV4ZWN1dGVkIGJ5IHZDUFUKLTB4YzIsIHRoaXMgd291bGQgYmUgYW4gZXhhbXBsZSBvdXRwdXQ6
CisweGMyLCB0aGlzIHdvdWxkIGJlIGFuIGV4YW1wbGUgb3V0cHV0OjoKIAogICAgIC8vIGF0IGd1
ZXN0IGNvZGUgdHJhbnNsYXRpb24KICAgICBmb28gYT0weGQxCi0tIAoyLjI5LjIKCg==


