Return-Path: <qemu-devel-bounces+lists+qemu-devel=lfdr.de@nongnu.org>
X-Original-To: lists+qemu-devel@lfdr.de
Delivered-To: lists+qemu-devel@lfdr.de
Received: from lists.gnu.org (lists.gnu.org [209.51.188.17])
	by mail.lfdr.de (Postfix) with ESMTPS id E71FD6AD6E0
	for <lists+qemu-devel@lfdr.de>; Tue,  7 Mar 2023 06:37:55 +0100 (CET)
Received: from localhost ([::1] helo=lists1p.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.90_1)
	(envelope-from <qemu-devel-bounces@nongnu.org>)
	id 1pZPyf-0006oT-6e; Tue, 07 Mar 2023 00:35:09 -0500
Received: from eggs.gnu.org ([2001:470:142:3::10])
 by lists.gnu.org with esmtps (TLS1.2:ECDHE_RSA_AES_256_GCM_SHA384:256)
 (Exim 4.90_1) (envelope-from <tsimpson@qualcomm.com>)
 id 1pZPyM-0006XD-NH
 for qemu-devel@nongnu.org; Tue, 07 Mar 2023 00:34:53 -0500
Received: from mx0b-0031df01.pphosted.com ([205.220.180.131])
 by eggs.gnu.org with esmtps (TLS1.2:ECDHE_RSA_AES_256_GCM_SHA384:256)
 (Exim 4.90_1) (envelope-from <tsimpson@qualcomm.com>)
 id 1pZPyJ-0006Yr-2C
 for qemu-devel@nongnu.org; Tue, 07 Mar 2023 00:34:49 -0500
Received: from pps.filterd (m0279868.ppops.net [127.0.0.1])
 by mx0a-0031df01.pphosted.com (8.17.1.19/8.17.1.19) with ESMTP id
 3274Ktrs001082; Tue, 7 Mar 2023 05:34:45 GMT
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=quicinc.com;
 h=from : to : cc :
 subject : date : message-id : in-reply-to : references : mime-version :
 content-type : content-transfer-encoding; s=qcppdkim1;
 bh=tnZ4jHG/0b//eTXVFEAY6JpIj/RBox6+k79qRj0D8OM=;
 b=ZWmleaUmC2qC7nUmVDnikPQm2ayPzQLbAJSoeS/1Z/PipxynGgMRl5trLOWjOHEaCRPs
 v12ctOSnJ6UITCCj7ZWrZe2wiBERRFNUwyE9mCq7Ol5qH5dYHCnjwChrFWs+wy60WGMZ
 Ko0KUXH+MGjPYtjJL00t2Kegad0OTEINvydulGa43948Rmq8l/VBGfUA6OngpxwHi7zU
 X5gikPIRftAjFJwNynC/evKOXpltI+NAo9BzZY+fyfjeYEcF2+42AzkOsEK8Eg27WtOF
 cP5uV9IQB4RnJB2XD0yxDEINm0cyBy4w+mz8EvxVXP0L42kJ6P0pKo2BWDsrkanPlZhC sg== 
Received: from nalasppmta02.qualcomm.com (Global_NAT1.qualcomm.com
 [129.46.96.20])
 by mx0a-0031df01.pphosted.com (PPS) with ESMTPS id 3p5rqjru2t-1
 (version=TLSv1.2 cipher=ECDHE-RSA-AES256-GCM-SHA384 bits=256 verify=NOT);
 Tue, 07 Mar 2023 05:34:45 +0000
Received: from pps.filterd (NALASPPMTA02.qualcomm.com [127.0.0.1])
 by NALASPPMTA02.qualcomm.com (8.17.1.5/8.17.1.5) with ESMTP id 3275Yi4d031930; 
 Tue, 7 Mar 2023 05:34:44 GMT
Received: from pps.reinject (localhost [127.0.0.1])
 by NALASPPMTA02.qualcomm.com (PPS) with ESMTPS id 3p4fg0ca7m-1
 (version=TLSv1.2 cipher=ECDHE-RSA-AES256-GCM-SHA384 bits=256 verify=NOT);
 Tue, 07 Mar 2023 05:34:44 +0000
Received: from NALASPPMTA02.qualcomm.com (NALASPPMTA02.qualcomm.com
 [127.0.0.1])
 by pps.reinject (8.17.1.5/8.17.1.5) with ESMTP id 3275YhXK031914;
 Tue, 7 Mar 2023 05:34:43 GMT
Received: from hu-devc-sd-u20-a-1.qualcomm.com (hu-tsimpson-lv.qualcomm.com
 [10.47.204.221])
 by NALASPPMTA02.qualcomm.com (PPS) with ESMTPS id 3275YhtJ031902
 (version=TLSv1.2 cipher=ECDHE-RSA-AES256-GCM-SHA384 bits=256 verify=NOT);
 Tue, 07 Mar 2023 05:34:43 +0000
Received: by hu-devc-sd-u20-a-1.qualcomm.com (Postfix, from userid 47164)
 id 953F56AC; Mon,  6 Mar 2023 21:34:42 -0800 (PST)
From: Taylor Simpson <tsimpson@quicinc.com>
To: qemu-devel@nongnu.org
Cc: tsimpson@quicinc.com, richard.henderson@linaro.org, philmd@linaro.org,
 peter.maydell@linaro.org, bcain@quicinc.com, quic_mathbern@quicinc.com,
 stefanha@redhat.com, ale@rev.ng, anjo@rev.ng
Subject: [PULL 07/17] Hexagon (target/hexagon) Add overrides for
 dealloc-return instructions
Date: Mon,  6 Mar 2023 21:34:28 -0800
Message-Id: <20230307053438.2416629-8-tsimpson@quicinc.com>
X-Mailer: git-send-email 2.25.1
In-Reply-To: <20230307053438.2416629-1-tsimpson@quicinc.com>
References: <20230307053438.2416629-1-tsimpson@quicinc.com>
MIME-Version: 1.0
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
X-QCInternal: smtphost
X-QCInternal: smtphost
X-Proofpoint-Virus-Version: vendor=nai engine=6200 definitions=5800
 signatures=585085
X-Proofpoint-Virus-Version: vendor=nai engine=6200 definitions=5800
 signatures=585085
X-Proofpoint-ORIG-GUID: yvvRL4LVP9iK5zCPUJI0rES0x017ftLz
X-Proofpoint-GUID: yvvRL4LVP9iK5zCPUJI0rES0x017ftLz
X-Proofpoint-Virus-Version: vendor=baseguard
 engine=ICAP:2.0.219,Aquarius:18.0.942,Hydra:6.0.573,FMLib:17.11.170.22
 definitions=2023-03-06_14,2023-03-06_01,2023-02-09_01
X-Proofpoint-Spam-Details: rule=outbound_notspam policy=outbound score=26
 malwarescore=0 phishscore=0
 priorityscore=1501 clxscore=1015 lowpriorityscore=0 adultscore=0
 mlxscore=26 spamscore=26 suspectscore=0 bulkscore=0 impostorscore=0
 mlxlogscore=46 classifier=spam adjust=0 reason=mlx scancount=1
 engine=8.12.0-2212070000 definitions=main-2303070049
Received-SPF: pass client-ip=205.220.180.131;
 envelope-from=tsimpson@qualcomm.com; helo=mx0b-0031df01.pphosted.com
X-Spam_score_int: -17
X-Spam_score: -1.8
X-Spam_bar: -
X-Spam_report: (-1.8 / 5.0 requ) BAYES_00=-1.9, DKIM_SIGNED=0.1,
 DKIM_VALID=-0.1, DKIM_VALID_AU=-0.1, HEADER_FROM_DIFFERENT_DOMAINS=0.25,
 SPF_HELO_NONE=0.001, SPF_PASS=-0.001 autolearn=no autolearn_force=no
X-Spam_action: no action
X-BeenThere: qemu-devel@nongnu.org
X-Mailman-Version: 2.1.29
Precedence: list
List-Id: <qemu-devel.nongnu.org>
List-Unsubscribe: <https://lists.nongnu.org/mailman/options/qemu-devel>,
 <mailto:qemu-devel-request@nongnu.org?subject=unsubscribe>
List-Archive: <https://lists.nongnu.org/archive/html/qemu-devel>
List-Post: <mailto:qemu-devel@nongnu.org>
List-Help: <mailto:qemu-devel-request@nongnu.org?subject=help>
List-Subscribe: <https://lists.nongnu.org/mailman/listinfo/qemu-devel>,
 <mailto:qemu-devel-request@nongnu.org?subject=subscribe>
Errors-To: qemu-devel-bounces+lists+qemu-devel=lfdr.de@nongnu.org
Sender: qemu-devel-bounces+lists+qemu-devel=lfdr.de@nongnu.org

VGhlc2UgaW5zdHJ1Y3Rpb25zIHBlcmZvcm0gYSBkZWFsbG9jZnJhbWUrcmV0dXJuIChqdW1wciBy
MzEpCgpBZGQgb3ZlcnJpZGVzIGZvcgogICAgTDRfcmV0dXJuCiAgICBTTDJfcmV0dXJuCiAgICBM
NF9yZXR1cm5fdAogICAgTDRfcmV0dXJuX2YKICAgIEw0X3JldHVybl90bmV3X3B0CiAgICBMNF9y
ZXR1cm5fZm5ld19wdAogICAgTDRfcmV0dXJuX3RuZXdfcG50CiAgICBMNF9yZXR1cm5fZm5ld19w
bnQKICAgIFNMMl9yZXR1cm5fdAogICAgU0wyX3JldHVybl9mCiAgICBTTDJfcmV0dXJuX3RuZXcK
ICAgIFNMMl9yZXR1cm5fZm5ldwoKVGhpcyBwYXRjaCBlbGltaW5hdGVzIHRoZSBsYXN0IGhlbHBl
ciB0aGF0IHVzZXMgd3JpdGVfbmV3X3BjLCBzbyB3ZQpyZW1vdmUgaXQgZnJvbSBvcF9oZWxwZXIu
YwoKU2lnbmVkLW9mZi1ieTogVGF5bG9yIFNpbXBzb24gPHRzaW1wc29uQHF1aWNpbmMuY29tPgpS
ZXZpZXdlZC1ieTogQW50b24gSm9oYW5zc29uIDxhbmpvQHJldi5uZz4KTWVzc2FnZS1JZDogPDIw
MjMwMzA3MDI1ODI4LjE2MTI4MDktNS10c2ltcHNvbkBxdWljaW5jLmNvbT4KLS0tCiB0YXJnZXQv
aGV4YWdvbi9nZW5fdGNnLmggICB8IDUzICsrKysrKysrKysrKysrKysrKysrKysrKysrCiB0YXJn
ZXQvaGV4YWdvbi9nZW5wdHIuYyAgICB8IDc3ICsrKysrKysrKysrKysrKysrKysrKysrKysrKysr
KysrKysrKysrCiB0YXJnZXQvaGV4YWdvbi9vcF9oZWxwZXIuYyB8IDI2ICstLS0tLS0tLS0tLS0K
IDMgZmlsZXMgY2hhbmdlZCwgMTMxIGluc2VydGlvbnMoKyksIDI1IGRlbGV0aW9ucygtKQoKZGlm
ZiAtLWdpdCBhL3RhcmdldC9oZXhhZ29uL2dlbl90Y2cuaCBiL3RhcmdldC9oZXhhZ29uL2dlbl90
Y2cuaAppbmRleCA1YjcyNjNhODJjLi5lNzI2NzJlMTk4IDEwMDY0NAotLS0gYS90YXJnZXQvaGV4
YWdvbi9nZW5fdGNnLmgKKysrIGIvdGFyZ2V0L2hleGFnb24vZ2VuX3RjZy5oCkBAIC00OTEsNiAr
NDkxLDU5IEBACiAjZGVmaW5lIGZHRU5fVENHX1MyX3N0b3JlcmluZXdfcGNyKFNIT1JUQ09ERSkg
XAogICAgIGZHRU5fVENHX1NUT1JFX3BjcigyLCBmU1RPUkUoMSwgNCwgRUEsIE50TikpCiAKKy8q
CisgKiBkZWFsbG9jX3JldHVybgorICogQXNzZW1ibGVyIG1hcHBlZCB0bworICogcjMxOjMwID0g
ZGVhbGxvY19yZXR1cm4ocjMwKTpyYXcKKyAqLworI2RlZmluZSBmR0VOX1RDR19MNF9yZXR1cm4o
U0hPUlRDT0RFKSBcCisgICAgZ2VuX3JldHVybihjdHgsIFJkZFYsIFJzVikKKworLyoKKyAqIHN1
Yi1pbnN0cnVjdGlvbiB2ZXJzaW9uIChubyBSZGRWLCBzbyBoYW5kbGUgaXQgbWFudWFsbHkpCisg
Ki8KKyNkZWZpbmUgZkdFTl9UQ0dfU0wyX3JldHVybihTSE9SVENPREUpIFwKKyAgICBkbyB7IFwK
KyAgICAgICAgVENHdl9pNjQgUmRkViA9IHRjZ190ZW1wX25ld19pNjQoKTsgXAorICAgICAgICBn
ZW5fcmV0dXJuKGN0eCwgUmRkViwgaGV4X2dwcltIRVhfUkVHX0ZQXSk7IFwKKyAgICAgICAgZ2Vu
X2xvZ19yZWdfd3JpdGVfcGFpcihIRVhfUkVHX0ZQLCBSZGRWKTsgXAorICAgIH0gd2hpbGUgKDAp
CisKKy8qCisgKiBDb25kaXRpb25hbCByZXR1cm5zIGZvbGxvdyB0aGlzIG5hbWluZyBjb252ZW50
aW9uCisgKiAgICAgX3QgICAgICAgICAgICAgICAgIHByZWRpY2F0ZSB0cnVlCisgKiAgICAgX2Yg
ICAgICAgICAgICAgICAgIHByZWRpY2F0ZSBmYWxzZQorICogICAgIF90bmV3X3B0ICAgICAgICAg
ICBwcmVkaWNhdGUubmV3IHRydWUgcHJlZGljdCB0YWtlbgorICogICAgIF9mbmV3X3B0ICAgICAg
ICAgICBwcmVkaWNhdGUubmV3IGZhbHNlIHByZWRpY3QgdGFrZW4KKyAqICAgICBfdG5ld19wbnQg
ICAgICAgICAgcHJlZGljYXRlLm5ldyB0cnVlIHByZWRpY3Qgbm90IHRha2VuCisgKiAgICAgX2Zu
ZXdfcG50ICAgICAgICAgIHByZWRpY2F0ZS5uZXcgZmFsc2UgcHJlZGljdCBub3QgdGFrZW4KKyAq
IFByZWRpY3Rpb25zIGFyZSBub3QgbW9kZWxsZWQgaW4gUUVNVQorICoKKyAqIEV4YW1wbGU6Cisg
KiAgICAgaWYgKHAxKSByMzE6MzAgPSBkZWFsbG9jX3JldHVybihyMzApOnJhdworICovCisjZGVm
aW5lIGZHRU5fVENHX0w0X3JldHVybl90KFNIT1JUQ09ERSkgXAorICAgIGdlbl9jb25kX3JldHVy
bihjdHgsIFJkZFYsIFJzViwgUHZWLCBUQ0dfQ09ORF9FUSk7CisjZGVmaW5lIGZHRU5fVENHX0w0
X3JldHVybl9mKFNIT1JUQ09ERSkgXAorICAgIGdlbl9jb25kX3JldHVybihjdHgsIFJkZFYsIFJz
ViwgUHZWLCBUQ0dfQ09ORF9ORSkKKyNkZWZpbmUgZkdFTl9UQ0dfTDRfcmV0dXJuX3RuZXdfcHQo
U0hPUlRDT0RFKSBcCisgICAgZ2VuX2NvbmRfcmV0dXJuKGN0eCwgUmRkViwgUnNWLCBQdk4sIFRD
R19DT05EX0VRKQorI2RlZmluZSBmR0VOX1RDR19MNF9yZXR1cm5fZm5ld19wdChTSE9SVENPREUp
IFwKKyAgICBnZW5fY29uZF9yZXR1cm4oY3R4LCBSZGRWLCBSc1YsIFB2TiwgVENHX0NPTkRfTkUp
CisjZGVmaW5lIGZHRU5fVENHX0w0X3JldHVybl90bmV3X3BudChTSE9SVENPREUpIFwKKyAgICBn
ZW5fY29uZF9yZXR1cm4oY3R4LCBSZGRWLCBSc1YsIFB2TiwgVENHX0NPTkRfRVEpCisjZGVmaW5l
IGZHRU5fVENHX0w0X3JldHVybl9mbmV3X3BudChTSE9SVENPREUpIFwKKyAgICBnZW5fY29uZF9y
ZXR1cm4oY3R4LCBSZGRWLCBSc1YsIFB2TiwgVENHX0NPTkRfTkUpCisKKyNkZWZpbmUgZkdFTl9U
Q0dfU0wyX3JldHVybl90KFNIT1JUQ09ERSkgXAorICAgIGdlbl9jb25kX3JldHVybl9zdWJpbnNu
KGN0eCwgVENHX0NPTkRfRVEsIGhleF9wcmVkWzBdKQorI2RlZmluZSBmR0VOX1RDR19TTDJfcmV0
dXJuX2YoU0hPUlRDT0RFKSBcCisgICAgZ2VuX2NvbmRfcmV0dXJuX3N1Ymluc24oY3R4LCBUQ0df
Q09ORF9ORSwgaGV4X3ByZWRbMF0pCisjZGVmaW5lIGZHRU5fVENHX1NMMl9yZXR1cm5fdG5ldyhT
SE9SVENPREUpIFwKKyAgICBnZW5fY29uZF9yZXR1cm5fc3ViaW5zbihjdHgsIFRDR19DT05EX0VR
LCBoZXhfbmV3X3ByZWRfdmFsdWVbMF0pCisjZGVmaW5lIGZHRU5fVENHX1NMMl9yZXR1cm5fZm5l
dyhTSE9SVENPREUpIFwKKyAgICBnZW5fY29uZF9yZXR1cm5fc3ViaW5zbihjdHgsIFRDR19DT05E
X05FLCBoZXhfbmV3X3ByZWRfdmFsdWVbMF0pCisKIC8qCiAgKiBNYXRoZW1hdGljYWwgb3BlcmF0
aW9ucyB3aXRoIG1vcmUgdGhhbiBvbmUgZGVmaW5pdGlvbiByZXF1aXJlCiAgKiBzcGVjaWFsIGhh
bmRsaW5nCmRpZmYgLS1naXQgYS90YXJnZXQvaGV4YWdvbi9nZW5wdHIuYyBiL3RhcmdldC9oZXhh
Z29uL2dlbnB0ci5jCmluZGV4IGY3MDE3ZmQ0ODMuLjM0OTAzMTA4MTIgMTAwNjQ0Ci0tLSBhL3Rh
cmdldC9oZXhhZ29uL2dlbnB0ci5jCisrKyBiL3RhcmdldC9oZXhhZ29uL2dlbnB0ci5jCkBAIC03
MTUsNiArNzE1LDgzIEBAIHN0YXRpYyB2b2lkIGdlbl9jb25kX2NhbGxyKERpc2FzQ29udGV4dCAq
Y3R4LAogICAgIGdlbl9zZXRfbGFiZWwoc2tpcCk7CiB9CiAKKy8qIGZyYW1lIF49IChpbnQ2NF90
KUZSQU1FS0VZIDw8IDMyICovCitzdGF0aWMgdm9pZCBnZW5fZnJhbWVfdW5zY3JhbWJsZShUQ0d2
X2k2NCBmcmFtZSkKK3sKKyAgICBUQ0d2X2k2NCBmcmFtZWtleSA9IHRjZ190ZW1wX25ld19pNjQo
KTsKKyAgICB0Y2dfZ2VuX2V4dHVfaTMyX2k2NChmcmFtZWtleSwgaGV4X2dwcltIRVhfUkVHX0ZS
QU1FS0VZXSk7CisgICAgdGNnX2dlbl9zaGxpX2k2NChmcmFtZWtleSwgZnJhbWVrZXksIDMyKTsK
KyAgICB0Y2dfZ2VuX3hvcl9pNjQoZnJhbWUsIGZyYW1lLCBmcmFtZWtleSk7Cit9CisKK3N0YXRp
YyB2b2lkIGdlbl9sb2FkX2ZyYW1lKERpc2FzQ29udGV4dCAqY3R4LCBUQ0d2X2k2NCBmcmFtZSwg
VENHdiBFQSkKK3sKKyAgICBJbnNuICppbnNuID0gY3R4LT5pbnNuOyAgLyogTmVlZGVkIGZvciBD
SEVDS19OT1NIVUYgKi8KKyAgICBDSEVDS19OT1NIVUYoRUEsIDgpOworICAgIHRjZ19nZW5fcWVt
dV9sZDY0KGZyYW1lLCBFQSwgY3R4LT5tZW1faWR4KTsKK30KKworc3RhdGljIHZvaWQgZ2VuX3Jl
dHVybl9iYXNlKERpc2FzQ29udGV4dCAqY3R4LCBUQ0d2X2k2NCBkc3QsIFRDR3Ygc3JjLAorICAg
ICAgICAgICAgICAgICAgICAgICAgICAgIFRDR3YgcjI5KQoreworICAgIC8qCisgICAgICogZnJh
bWUgPSAqc3JjCisgICAgICogZHN0ID0gZnJhbWVfdW5zY3JhbWJsZShmcmFtZSkKKyAgICAgKiBT
UCA9IHNyYyArIDgKKyAgICAgKiBQQyA9IGRzdC53WzFdCisgICAgICovCisgICAgVENHdl9pNjQg
ZnJhbWUgPSB0Y2dfdGVtcF9uZXdfaTY0KCk7CisgICAgVENHdiByMzEgPSB0Y2dfdGVtcF9uZXco
KTsKKworICAgIGdlbl9sb2FkX2ZyYW1lKGN0eCwgZnJhbWUsIHNyYyk7CisgICAgZ2VuX2ZyYW1l
X3Vuc2NyYW1ibGUoZnJhbWUpOworICAgIHRjZ19nZW5fbW92X2k2NChkc3QsIGZyYW1lKTsKKyAg
ICB0Y2dfZ2VuX2FkZGlfdGwocjI5LCBzcmMsIDgpOworICAgIHRjZ19nZW5fZXh0cmhfaTY0X2kz
MihyMzEsIGRzdCk7CisgICAgZ2VuX2p1bXByKGN0eCwgcjMxKTsKK30KKworc3RhdGljIHZvaWQg
Z2VuX3JldHVybihEaXNhc0NvbnRleHQgKmN0eCwgVENHdl9pNjQgZHN0LCBUQ0d2IHNyYykKK3sK
KyAgICBUQ0d2IHIyOSA9IHRjZ190ZW1wX25ldygpOworICAgIGdlbl9yZXR1cm5fYmFzZShjdHgs
IGRzdCwgc3JjLCByMjkpOworICAgIGdlbl9sb2dfcmVnX3dyaXRlKEhFWF9SRUdfU1AsIHIyOSk7
Cit9CisKKy8qIGlmIChwcmVkKSBkc3QgPSBkZWFsbG9jX3JldHVybihzcmMpOnJhdyAqLworc3Rh
dGljIHZvaWQgZ2VuX2NvbmRfcmV0dXJuKERpc2FzQ29udGV4dCAqY3R4LCBUQ0d2X2k2NCBkc3Qs
IFRDR3Ygc3JjLAorICAgICAgICAgICAgICAgICAgICAgICAgICAgIFRDR3YgcHJlZCwgVENHQ29u
ZCBjb25kKQoreworICAgIFRDR3YgTFNCID0gdGNnX3RlbXBfbmV3KCk7CisgICAgVENHdiBtYXNr
ID0gdGNnX3RlbXBfbmV3KCk7CisgICAgVENHdiByMjkgPSB0Y2dfdGVtcF9uZXcoKTsKKyAgICBU
Q0dMYWJlbCAqc2tpcCA9IGdlbl9uZXdfbGFiZWwoKTsKKyAgICB0Y2dfZ2VuX2FuZGlfdGwoTFNC
LCBwcmVkLCAxKTsKKworICAgIC8qIEluaXRpYWxpemUgdGhlIHJlc3VsdHMgaW4gY2FzZSB0aGUg
cHJlZGljYXRlIGlzIGZhbHNlICovCisgICAgdGNnX2dlbl9tb3ZpX2k2NChkc3QsIDApOworICAg
IHRjZ19nZW5fbW92aV90bChyMjksIDApOworCisgICAgLyogU2V0IHRoZSBiaXQgaW4gaGV4X3Ns
b3RfY2FuY2VsbGVkIGlmIHRoZSBwcmVkaWNhdGUgaXMgZmxhc2UgKi8KKyAgICB0Y2dfZ2VuX21v
dmlfdGwobWFzaywgMSA8PCBjdHgtPmluc24tPnNsb3QpOworICAgIHRjZ19nZW5fb3JfdGwobWFz
aywgaGV4X3Nsb3RfY2FuY2VsbGVkLCBtYXNrKTsKKyAgICB0Y2dfZ2VuX21vdmNvbmRfdGwoY29u
ZCwgaGV4X3Nsb3RfY2FuY2VsbGVkLCBMU0IsIHRjZ19jb25zdGFudF90bCgwKSwKKyAgICAgICAg
ICAgICAgICAgICAgICAgbWFzaywgaGV4X3Nsb3RfY2FuY2VsbGVkKTsKKworICAgIHRjZ19nZW5f
YnJjb25kaV90bChjb25kLCBMU0IsIDAsIHNraXApOworICAgIGdlbl9yZXR1cm5fYmFzZShjdHgs
IGRzdCwgc3JjLCByMjkpOworICAgIGdlbl9zZXRfbGFiZWwoc2tpcCk7CisgICAgZ2VuX2xvZ19w
cmVkaWNhdGVkX3JlZ193cml0ZShIRVhfUkVHX1NQLCByMjksIGN0eC0+aW5zbi0+c2xvdCk7Cit9
CisKKy8qIHN1Yi1pbnN0cnVjdGlvbiB2ZXJzaW9uIChubyBSZGRWLCBzbyBoYW5kbGUgaXQgbWFu
dWFsbHkpICovCitzdGF0aWMgdm9pZCBnZW5fY29uZF9yZXR1cm5fc3ViaW5zbihEaXNhc0NvbnRl
eHQgKmN0eCwgVENHQ29uZCBjb25kLCBUQ0d2IHByZWQpCit7CisgICAgVENHdl9pNjQgUmRkViA9
IHRjZ190ZW1wX25ld19pNjQoKTsKKyAgICBnZW5fY29uZF9yZXR1cm4oY3R4LCBSZGRWLCBoZXhf
Z3ByW0hFWF9SRUdfRlBdLCBwcmVkLCBjb25kKTsKKyAgICBnZW5fbG9nX3ByZWRpY2F0ZWRfcmVn
X3dyaXRlX3BhaXIoSEVYX1JFR19GUCwgUmRkViwgY3R4LT5pbnNuLT5zbG90KTsKK30KKwogc3Rh
dGljIHZvaWQgZ2VuX2VuZGxvb3AwKERpc2FzQ29udGV4dCAqY3R4KQogewogICAgIFRDR3YgbHBj
ZmcgPSB0Y2dfdGVtcF9uZXcoKTsKZGlmZiAtLWdpdCBhL3RhcmdldC9oZXhhZ29uL29wX2hlbHBl
ci5jIGIvdGFyZ2V0L2hleGFnb24vb3BfaGVscGVyLmMKaW5kZXggMzU0NDllZjUyNC4uMzhiOGFl
ZTE5MyAxMDA2NDQKLS0tIGEvdGFyZ2V0L2hleGFnb24vb3BfaGVscGVyLmMKKysrIGIvdGFyZ2V0
L2hleGFnb24vb3BfaGVscGVyLmMKQEAgLTEsNSArMSw1IEBACiAvKgotICogIENvcHlyaWdodChj
KSAyMDE5LTIwMjIgUXVhbGNvbW0gSW5ub3ZhdGlvbiBDZW50ZXIsIEluYy4gQWxsIFJpZ2h0cyBS
ZXNlcnZlZC4KKyAqICBDb3B5cmlnaHQoYykgMjAxOS0yMDIzIFF1YWxjb21tIElubm92YXRpb24g
Q2VudGVyLCBJbmMuIEFsbCBSaWdodHMgUmVzZXJ2ZWQuCiAgKgogICogIFRoaXMgcHJvZ3JhbSBp
cyBmcmVlIHNvZnR3YXJlOyB5b3UgY2FuIHJlZGlzdHJpYnV0ZSBpdCBhbmQvb3IgbW9kaWZ5CiAg
KiAgaXQgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBHTlUgR2VuZXJhbCBQdWJsaWMgTGljZW5zZSBh
cyBwdWJsaXNoZWQgYnkKQEAgLTEwNSwzMCArMTA1LDYgQEAgdm9pZCBsb2dfc3RvcmU2NChDUFVI
ZXhhZ29uU3RhdGUgKmVudiwgdGFyZ2V0X3Vsb25nIGFkZHIsCiAgICAgZW52LT5tZW1fbG9nX3N0
b3Jlc1tzbG90XS5kYXRhNjQgPSB2YWw7CiB9CiAKLXZvaWQgd3JpdGVfbmV3X3BjKENQVUhleGFn
b25TdGF0ZSAqZW52LCBib29sIHBrdF9oYXNfbXVsdGlfY29mLAotICAgICAgICAgICAgICAgICAg
ICAgICAgIHRhcmdldF91bG9uZyBhZGRyKQotewotICAgIEhFWF9ERUJVR19MT0coIndyaXRlX25l
d19wYygweCIgVEFSR0VUX0ZNVF9seCAiKVxuIiwgYWRkcik7Ci0KLSAgICBpZiAocGt0X2hhc19t
dWx0aV9jb2YpIHsKLSAgICAgICAgLyoKLSAgICAgICAgICogSWYgbW9yZSB0aGFuIG9uZSBicmFu
Y2ggaXMgdGFrZW4gaW4gYSBwYWNrZXQsIG9ubHkgdGhlIGZpcnN0IG9uZQotICAgICAgICAgKiBp
cyBhY3R1YWxseSBkb25lLgotICAgICAgICAgKi8KLSAgICAgICAgaWYgKGVudi0+YnJhbmNoX3Rh
a2VuKSB7Ci0gICAgICAgICAgICBIRVhfREVCVUdfTE9HKCJJTkZPOiBtdWx0aXBsZSBicmFuY2hl
cyB0YWtlbiBpbiBzYW1lIHBhY2tldCwgIgotICAgICAgICAgICAgICAgICAgICAgICAgICAiaWdu
b3JpbmcgdGhlIHNlY29uZCBvbmVcbiIpOwotICAgICAgICB9IGVsc2UgewotICAgICAgICAgICAg
ZkNIRUNLX1BDQUxJR04oYWRkcik7Ci0gICAgICAgICAgICBlbnYtPmdwcltIRVhfUkVHX1BDXSA9
IGFkZHI7Ci0gICAgICAgICAgICBlbnYtPmJyYW5jaF90YWtlbiA9IDE7Ci0gICAgICAgIH0KLSAg
ICB9IGVsc2UgewotICAgICAgICBmQ0hFQ0tfUENBTElHTihhZGRyKTsKLSAgICAgICAgZW52LT5n
cHJbSEVYX1JFR19QQ10gPSBhZGRyOwotICAgIH0KLX0KLQogLyogSGFuZHkgcGxhY2UgdG8gc2V0
IGEgYnJlYWtwb2ludCAqLwogdm9pZCBIRUxQRVIoZGVidWdfc3RhcnRfcGFja2V0KShDUFVIZXhh
Z29uU3RhdGUgKmVudikKIHsKLS0gCjIuMjUuMQoK

