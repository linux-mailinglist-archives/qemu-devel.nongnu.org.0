Return-Path: <qemu-devel-bounces+lists+qemu-devel=lfdr.de@nongnu.org>
X-Original-To: lists+qemu-devel@lfdr.de
Delivered-To: lists+qemu-devel@lfdr.de
Received: from lists.gnu.org (lists.gnu.org [209.51.188.17])
	by mail.lfdr.de (Postfix) with ESMTPS id 7D846B8884
	for <lists+qemu-devel@lfdr.de>; Fri, 20 Sep 2019 02:21:55 +0200 (CEST)
Received: from localhost ([::1]:50030 helo=lists1p.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.90_1)
	(envelope-from <qemu-devel-bounces+lists+qemu-devel=lfdr.de@nongnu.org>)
	id 1iB6gM-0002GS-Hz
	for lists+qemu-devel@lfdr.de; Thu, 19 Sep 2019 20:21:54 -0400
Received: from eggs.gnu.org ([2001:470:142:3::10]:44650)
 by lists.gnu.org with esmtp (Exim 4.90_1)
 (envelope-from <no-reply@patchew.org>) id 1iB6eN-0000v4-He
 for qemu-devel@nongnu.org; Thu, 19 Sep 2019 20:19:53 -0400
Received: from Debian-exim by eggs.gnu.org with spam-scanned (Exim 4.71)
 (envelope-from <no-reply@patchew.org>) id 1iB6eL-0006qj-Jl
 for qemu-devel@nongnu.org; Thu, 19 Sep 2019 20:19:51 -0400
Resent-Date: Thu, 19 Sep 2019 20:19:51 -0400
Resent-Message-Id: <E1iB6eL-0006qj-Jl@eggs.gnu.org>
Received: from sender4-of-o54.zoho.com ([136.143.188.54]:21488)
 by eggs.gnu.org with esmtps (TLS1.0:RSA_AES_256_CBC_SHA1:32)
 (Exim 4.71) (envelope-from <no-reply@patchew.org>)
 id 1iB6eL-0006qS-2i
 for qemu-devel@nongnu.org; Thu, 19 Sep 2019 20:19:49 -0400
ARC-Seal: i=1; a=rsa-sha256; t=1568938784; cv=none; d=zoho.com; s=zohoarc; 
 b=YGyNzbyduybWmtiDOd8BfYE/VM8scH/xReX60anbwktISIX+Qc453EFatCIgnIlRJKl4La6poVJ+0incVhALOMqeEDJiWbJ3kBE+ob4joz+bPre9YfL/fjXOIXOEUInQAyu9IflcR/WGxGPhcE4ctIHAju866hqiovgm1P8dR8k=
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=zoho.com;
 s=zohoarc; t=1568938784;
 h=Content-Type:Content-Transfer-Encoding:Cc:Date:From:In-Reply-To:MIME-Version:Message-ID:Reply-To:Subject:To:ARC-Authentication-Results;
 bh=oKK2OUH3DgpSVz55IsUCSRitwCoUgd4QVAHUoz+7el4=; 
 b=QzvF+epHX1zz++wmuSI1TPN9lkqCGMrP7g+w65vEyszD8kjP/a7zuCOzSCaL2SO8KY0FJLhwDoi04+B4iBG+rm6EBk26dUpGnOBfk/49QmirvQgSIp4RAERLOi637iGml+U7Xl6oL8gAV+NhWbBTPgX8F5LjomLePG/E9GXLncw=
ARC-Authentication-Results: i=1; mx.zoho.com; dkim=pass  header.i=patchew.org;
 spf=pass  smtp.mailfrom=no-reply@patchew.org;
 dmarc=pass header.from=<no-reply@patchew.org>
 header.from=<no-reply@patchew.org>
Received: from [172.17.0.3] (23.253.156.214 [23.253.156.214]) by
 mx.zohomail.com with SMTPS id 1568938783210201.91439693998836;
 Thu, 19 Sep 2019 17:19:43 -0700 (PDT)
In-Reply-To: <20190918231846.22538-1-alxndr@bu.edu>
Subject: Re: [Qemu-devel] [PATCH v3 00/22] Add virtual device fuzzing support
Message-ID: <156893878203.2125.2982692120100614630@1c8ae44fe5c0>
MIME-Version: 1.0
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Resent-From: 
From: no-reply@patchew.org
To: alxndr@bu.edu
Date: Thu, 19 Sep 2019 17:19:43 -0700 (PDT)
X-ZohoMailClient: External
X-detected-operating-system: by eggs.gnu.org: GNU/Linux 2.2.x-3.x [generic]
X-Received-From: 136.143.188.54
X-BeenThere: qemu-devel@nongnu.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: <qemu-devel.nongnu.org>
List-Unsubscribe: <https://lists.nongnu.org/mailman/options/qemu-devel>,
 <mailto:qemu-devel-request@nongnu.org?subject=unsubscribe>
List-Archive: <https://lists.nongnu.org/archive/html/qemu-devel>
List-Post: <mailto:qemu-devel@nongnu.org>
List-Help: <mailto:qemu-devel-request@nongnu.org?subject=help>
List-Subscribe: <https://lists.nongnu.org/mailman/listinfo/qemu-devel>,
 <mailto:qemu-devel-request@nongnu.org?subject=subscribe>
Reply-To: qemu-devel@nongnu.org
Cc: pbonzini@redhat.com, bsd@redhat.com, qemu-devel@nongnu.org,
 stefanha@redhat.com, alxndr@bu.edu
Errors-To: qemu-devel-bounces+lists+qemu-devel=lfdr.de@nongnu.org
Sender: "Qemu-devel" <qemu-devel-bounces+lists+qemu-devel=lfdr.de@nongnu.org>

UGF0Y2hldyBVUkw6IGh0dHBzOi8vcGF0Y2hldy5vcmcvUUVNVS8yMDE5MDkxODIzMTg0Ni4yMjUz
OC0xLWFseG5kckBidS5lZHUvCgoKCkhpLAoKVGhpcyBzZXJpZXMgc2VlbXMgdG8gaGF2ZSBzb21l
IGNvZGluZyBzdHlsZSBwcm9ibGVtcy4gU2VlIG91dHB1dCBiZWxvdyBmb3IKbW9yZSBpbmZvcm1h
dGlvbjoKCk1lc3NhZ2UtaWQ6IDIwMTkwOTE4MjMxODQ2LjIyNTM4LTEtYWx4bmRyQGJ1LmVkdQpT
dWJqZWN0OiBbUWVtdS1kZXZlbF0gW1BBVENIIHYzIDAwLzIyXSBBZGQgdmlydHVhbCBkZXZpY2Ug
ZnV6emluZyBzdXBwb3J0ClR5cGU6IHNlcmllcwoKPT09IFRFU1QgU0NSSVBUIEJFR0lOID09PQoj
IS9iaW4vYmFzaApnaXQgcmV2LXBhcnNlIGJhc2UgPiAvZGV2L251bGwgfHwgZXhpdCAwCmdpdCBj
b25maWcgLS1sb2NhbCBkaWZmLnJlbmFtZWxpbWl0IDAKZ2l0IGNvbmZpZyAtLWxvY2FsIGRpZmYu
cmVuYW1lcyBUcnVlCmdpdCBjb25maWcgLS1sb2NhbCBkaWZmLmFsZ29yaXRobSBoaXN0b2dyYW0K
Li9zY3JpcHRzL2NoZWNrcGF0Y2gucGwgLS1tYWlsYmFjayBiYXNlLi4KPT09IFRFU1QgU0NSSVBU
IEVORCA9PT0KClN3aXRjaGVkIHRvIGEgbmV3IGJyYW5jaCAndGVzdCcKNWFkOTRhOCBmdXp6OiBh
ZGQgZG9jdW1lbnRhdGlvbiB0byBkb2NzL2RldmVsLwowNDJlMTcyIGZ1eno6IGFkZCB2aXJ0aW8t
bmV0IGZ1enogdGFyZ2V0CjYyMTUzOWEgZnV6ejogYWRkIGk0NDBmeCBmdXp6IHRhcmdldHMKZGFl
NWFkMSBmdXp6OiBhZGQgc3VwcG9ydCBmb3IgcW9zLWFzc2lzdGVkIGZ1enogdGFyZ2V0cwphYjhk
YzNhIGZ1eno6IGV4cG9zZSBmdXp6IHRhcmdldCBuYW1lCjc5ZmRjNzIgZnV6ejogYWRkIHN1cHBv
cnQgZm9yIGZvcmstYmFzZWQgZnV6emluZy4KNGIxYmEzZiBmdXp6OiBhZGQgZnV6emVyIHNrZWxl
dG9uCmZlMTZlNzEgZnV6ejogQWRkIHRhcmdldC9mdXp6IG1ha2VmaWxlIHJ1bGVzCmY5NWNjMjUg
bGlicXRlc3Q6IGFkZCBpbi1wcm9jZXNzIHF0ZXN0LmMgdHgvcnggaGFuZGxlcnMKNmQ5ZDdkYyBs
aWJxdGVzdDogbWFrZSBxdGVzdF9idWZ3cml0ZSBzZW5kICJhdG9taWMiCjkxOGZiZGUgbGlicW9z
OiBtb3ZlIHVzZWZ1bCBxb3MtdGVzdCBmdW5jcyB0byBxb3NfZXh0ZXJuYWwKZmQ3NjdkNiBsaWJx
b3M6IHNwbGl0IHFvcy10ZXN0IGFuZCBsaWJxb3MgbWFrZWZpbGUgdmFycwo1Yjc4N2M2IHRlc3Rz
OiBwcm92aWRlIHRlc3QgdmFyaWFibGVzIHRvIG90aGVyIHRhcmdldHMKZGRjYWE0NyBxdGVzdDog
YWRkIGluLXByb2Nlc3MgaW5jb21pbmcgY29tbWFuZCBoYW5kbGVyCjhlZWY4N2MgbW9kdWxlOiBj
aGVjayBtb2R1bGUgd2Fzbid0IGFscmVhZHkgaW5pdGlhbGl6ZWQKM2Q3NjkyOSBmdXp6OiBBZGQg
dGFyZ2V0L2Z1enogbWFrZWZpbGUgcnVsZXMKNzJmODFhMiBmdXp6OiBhZGQgY29uZmlndXJlIGZs
YWcgLS1lbmFibGUtZnV6emluZwpjOGE5YmQ4IGxpYnF0ZXN0OiBBZGQgYSBsYXllciBvZiBhYnN0
cmFjaXRvbiB0byBzZW5kL3JlY3YKY2NiNDFkOCBxdGVzdDogYWRkIHF0ZXN0X3NlcnZlcl9zZW5k
IGFic3RyYWN0aW9uCmI1NTZmNTEgZnV6ejogQWRkIEZVWlpfVEFSR0VUIG1vZHVsZSB0eXBlCjQ2
NDRjMDIgbGlicW9zOiBSZW5hbWUgaTJjX3NlbmQgYW5kIGkyY19yZWN2CjYzNjU1ZWEgc29mdG1t
dTogc3BsaXQgb2ZmIHZsLmM6bWFpbigpIGludG8gbWFpbi5jCgo9PT0gT1VUUFVUIEJFR0lOID09
PQoxLzIyIENoZWNraW5nIGNvbW1pdCA2MzY1NWVhNzJlMjAgKHNvZnRtbXU6IHNwbGl0IG9mZiB2
bC5jOm1haW4oKSBpbnRvIG1haW4uYykKV0FSTklORzogYWRkZWQsIG1vdmVkIG9yIGRlbGV0ZWQg
ZmlsZShzKSwgZG9lcyBNQUlOVEFJTkVSUyBuZWVkIHVwZGF0aW5nPwojNTk6IApuZXcgZmlsZSBt
b2RlIDEwMDY0NAoKV0FSTklORzogYXJjaGl0ZWN0dXJlIHNwZWNpZmljIGRlZmluZXMgc2hvdWxk
IGJlIGF2b2lkZWQKIzY4OiBGSUxFOiBtYWluLmM6NToKKyNpZiBkZWZpbmVkKF9fQVBQTEVfXykg
fHwgZGVmaW5lZChtYWluKQoKRVJST1I6IGV4dGVybnMgc2hvdWxkIGJlIGF2b2lkZWQgaW4gLmMg
ZmlsZXMKIzcwOiBGSUxFOiBtYWluLmM6NzoKK2ludCBxZW11X21haW4oaW50IGFyZ2MsIGNoYXIg
Kiphcmd2LCBjaGFyICoqZW52cCk7Cgp0b3RhbDogMSBlcnJvcnMsIDIgd2FybmluZ3MsIDExNCBs
aW5lcyBjaGVja2VkCgpQYXRjaCAxLzIyIGhhcyBzdHlsZSBwcm9ibGVtcywgcGxlYXNlIHJldmll
dy4gIElmIGFueSBvZiB0aGVzZSBlcnJvcnMKYXJlIGZhbHNlIHBvc2l0aXZlcyByZXBvcnQgdGhl
bSB0byB0aGUgbWFpbnRhaW5lciwgc2VlCkNIRUNLUEFUQ0ggaW4gTUFJTlRBSU5FUlMuCgoyLzIy
IENoZWNraW5nIGNvbW1pdCA0NjQ0YzAyNDg2YjYgKGxpYnFvczogUmVuYW1lIGkyY19zZW5kIGFu
ZCBpMmNfcmVjdikKMy8yMiBDaGVja2luZyBjb21taXQgYjU1NmY1MTMyMDIxIChmdXp6OiBBZGQg
RlVaWl9UQVJHRVQgbW9kdWxlIHR5cGUpCjQvMjIgQ2hlY2tpbmcgY29tbWl0IGNjYjQxZDhjM2Jk
MSAocXRlc3Q6IGFkZCBxdGVzdF9zZXJ2ZXJfc2VuZCBhYnN0cmFjdGlvbikKV0FSTklORzogbGlu
ZSBvdmVyIDgwIGNoYXJhY3RlcnMKIzcxOiBGSUxFOiBxdGVzdC5jOjc5NToKK3ZvaWQgcXRlc3Rf
c2VydmVyX3NldF90eF9oYW5kbGVyKHZvaWQgKCpzZW5kKSh2b2lkKiwgY29uc3QgY2hhciosIHNp
emVfdCksIHZvaWQgKm9wYXF1ZSkKCnRvdGFsOiAwIGVycm9ycywgMSB3YXJuaW5ncywgNDkgbGlu
ZXMgY2hlY2tlZAoKUGF0Y2ggNC8yMiBoYXMgc3R5bGUgcHJvYmxlbXMsIHBsZWFzZSByZXZpZXcu
ICBJZiBhbnkgb2YgdGhlc2UgZXJyb3JzCmFyZSBmYWxzZSBwb3NpdGl2ZXMgcmVwb3J0IHRoZW0g
dG8gdGhlIG1haW50YWluZXIsIHNlZQpDSEVDS1BBVENIIGluIE1BSU5UQUlORVJTLgo1LzIyIENo
ZWNraW5nIGNvbW1pdCBjOGE5YmQ4ZDlkZDkgKGxpYnF0ZXN0OiBBZGQgYSBsYXllciBvZiBhYnN0
cmFjaXRvbiB0byBzZW5kL3JlY3YpCjYvMjIgQ2hlY2tpbmcgY29tbWl0IDcyZjgxYTI2MDBkYyAo
ZnV6ejogYWRkIGNvbmZpZ3VyZSBmbGFnIC0tZW5hYmxlLWZ1enppbmcpCjcvMjIgQ2hlY2tpbmcg
Y29tbWl0IDNkNzY5MjkyY2EyZSAoZnV6ejogQWRkIHRhcmdldC9mdXp6IG1ha2VmaWxlIHJ1bGVz
KQpXQVJOSU5HOiBhZGRlZCwgbW92ZWQgb3IgZGVsZXRlZCBmaWxlKHMpLCBkb2VzIE1BSU5UQUlO
RVJTIG5lZWQgdXBkYXRpbmc/CiM4NTogCm5ldyBmaWxlIG1vZGUgMTAwNjQ0Cgp0b3RhbDogMCBl
cnJvcnMsIDEgd2FybmluZ3MsIDY1IGxpbmVzIGNoZWNrZWQKClBhdGNoIDcvMjIgaGFzIHN0eWxl
IHByb2JsZW1zLCBwbGVhc2UgcmV2aWV3LiAgSWYgYW55IG9mIHRoZXNlIGVycm9ycwphcmUgZmFs
c2UgcG9zaXRpdmVzIHJlcG9ydCB0aGVtIHRvIHRoZSBtYWludGFpbmVyLCBzZWUKQ0hFQ0tQQVRD
SCBpbiBNQUlOVEFJTkVSUy4KOC8yMiBDaGVja2luZyBjb21taXQgOGVlZjg3Y2MyZDIzIChtb2R1
bGU6IGNoZWNrIG1vZHVsZSB3YXNuJ3QgYWxyZWFkeSBpbml0aWFsaXplZCkKOS8yMiBDaGVja2lu
ZyBjb21taXQgZGRjYWE0NzUxNjA0IChxdGVzdDogYWRkIGluLXByb2Nlc3MgaW5jb21pbmcgY29t
bWFuZCBoYW5kbGVyKQoxMC8yMiBDaGVja2luZyBjb21taXQgNWI3ODdjNmEwNTQzICh0ZXN0czog
cHJvdmlkZSB0ZXN0IHZhcmlhYmxlcyB0byBvdGhlciB0YXJnZXRzKQoxMS8yMiBDaGVja2luZyBj
b21taXQgZmQ3NjdkNjEzY2M0IChsaWJxb3M6IHNwbGl0IHFvcy10ZXN0IGFuZCBsaWJxb3MgbWFr
ZWZpbGUgdmFycykKMTIvMjIgQ2hlY2tpbmcgY29tbWl0IDkxOGZiZGU4MjUyYSAobGlicW9zOiBt
b3ZlIHVzZWZ1bCBxb3MtdGVzdCBmdW5jcyB0byBxb3NfZXh0ZXJuYWwpCldBUk5JTkc6IGFkZGVk
LCBtb3ZlZCBvciBkZWxldGVkIGZpbGUocyksIGRvZXMgTUFJTlRBSU5FUlMgbmVlZCB1cGRhdGlu
Zz8KIzI3OiAKbmV3IGZpbGUgbW9kZSAxMDA2NDQKCnRvdGFsOiAwIGVycm9ycywgMSB3YXJuaW5n
cywgMzQzIGxpbmVzIGNoZWNrZWQKClBhdGNoIDEyLzIyIGhhcyBzdHlsZSBwcm9ibGVtcywgcGxl
YXNlIHJldmlldy4gIElmIGFueSBvZiB0aGVzZSBlcnJvcnMKYXJlIGZhbHNlIHBvc2l0aXZlcyBy
ZXBvcnQgdGhlbSB0byB0aGUgbWFpbnRhaW5lciwgc2VlCkNIRUNLUEFUQ0ggaW4gTUFJTlRBSU5F
UlMuCjEzLzIyIENoZWNraW5nIGNvbW1pdCA2ZDlkN2RjN2Y3NTggKGxpYnF0ZXN0OiBtYWtlIHF0
ZXN0X2J1ZndyaXRlIHNlbmQgImF0b21pYyIpCjE0LzIyIENoZWNraW5nIGNvbW1pdCBmOTVjYzI1
MWRhM2UgKGxpYnF0ZXN0OiBhZGQgaW4tcHJvY2VzcyBxdGVzdC5jIHR4L3J4IGhhbmRsZXJzKQox
NS8yMiBDaGVja2luZyBjb21taXQgZmUxNmU3MTBiZmYwIChmdXp6OiBBZGQgdGFyZ2V0L2Z1enog
bWFrZWZpbGUgcnVsZXMpCjE2LzIyIENoZWNraW5nIGNvbW1pdCA0YjFiYTNmMjU5NGUgKGZ1eno6
IGFkZCBmdXp6ZXIgc2tlbGV0b24pCldBUk5JTkc6IGFkZGVkLCBtb3ZlZCBvciBkZWxldGVkIGZp
bGUocyksIGRvZXMgTUFJTlRBSU5FUlMgbmVlZCB1cGRhdGluZz8KIzI5OiAKbmV3IGZpbGUgbW9k
ZSAxMDA2NDQKCldBUk5JTkc6IEJsb2NrIGNvbW1lbnRzIHVzZSBhIGxlYWRpbmcgLyogb24gYSBz
ZXBhcmF0ZSBsaW5lCiMxNTU6IEZJTEU6IHRlc3RzL2Z1enovZnV6ei5jOjEyMjoKKyAgICAvKiAt
LXRyYWNlIGlzIHVzZWZ1bCBmb3Igb3V0cHV0dGluZyBhIGxvZyBvZiBxdGVzdCBjb21tYW5kcyB0
aGF0IHRyaWdnZXIKCldBUk5JTkc6IEJsb2NrIGNvbW1lbnRzIHVzZSBhIHRyYWlsaW5nICovIG9u
IGEgc2VwYXJhdGUgbGluZQojMTU2OiBGSUxFOiB0ZXN0cy9mdXp6L2Z1enouYzoxMjM6CisgICAg
ICogYSBjcmFzaC4gVGhlIGxvZyBjYW4gY2FuIHRoZW4gYmUgcmVwbGF5ZWQgd2l0aCBhIHNpbXBs
ZSBxdGVzdCBzY3JpcHQuICovCgp0b3RhbDogMCBlcnJvcnMsIDMgd2FybmluZ3MsIDIxNSBsaW5l
cyBjaGVja2VkCgpQYXRjaCAxNi8yMiBoYXMgc3R5bGUgcHJvYmxlbXMsIHBsZWFzZSByZXZpZXcu
ICBJZiBhbnkgb2YgdGhlc2UgZXJyb3JzCmFyZSBmYWxzZSBwb3NpdGl2ZXMgcmVwb3J0IHRoZW0g
dG8gdGhlIG1haW50YWluZXIsIHNlZQpDSEVDS1BBVENIIGluIE1BSU5UQUlORVJTLgoxNy8yMiBD
aGVja2luZyBjb21taXQgNzlmZGM3MjIxYjk3IChmdXp6OiBhZGQgc3VwcG9ydCBmb3IgZm9yay1i
YXNlZCBmdXp6aW5nLikKV0FSTklORzogYWRkZWQsIG1vdmVkIG9yIGRlbGV0ZWQgZmlsZShzKSwg
ZG9lcyBNQUlOVEFJTkVSUyBuZWVkIHVwZGF0aW5nPwojNDk6IApuZXcgZmlsZSBtb2RlIDEwMDY0
NAoKdG90YWw6IDAgZXJyb3JzLCAxIHdhcm5pbmdzLCAxMDAgbGluZXMgY2hlY2tlZAoKUGF0Y2gg
MTcvMjIgaGFzIHN0eWxlIHByb2JsZW1zLCBwbGVhc2UgcmV2aWV3LiAgSWYgYW55IG9mIHRoZXNl
IGVycm9ycwphcmUgZmFsc2UgcG9zaXRpdmVzIHJlcG9ydCB0aGVtIHRvIHRoZSBtYWludGFpbmVy
LCBzZWUKQ0hFQ0tQQVRDSCBpbiBNQUlOVEFJTkVSUy4KMTgvMjIgQ2hlY2tpbmcgY29tbWl0IGFi
OGRjM2EyYzI1NiAoZnV6ejogZXhwb3NlIGZ1enogdGFyZ2V0IG5hbWUpCjE5LzIyIENoZWNraW5n
IGNvbW1pdCBkYWU1YWQxODM0MDAgKGZ1eno6IGFkZCBzdXBwb3J0IGZvciBxb3MtYXNzaXN0ZWQg
ZnV6eiB0YXJnZXRzKQpXQVJOSU5HOiBhZGRlZCwgbW92ZWQgb3IgZGVsZXRlZCBmaWxlKHMpLCBk
b2VzIE1BSU5UQUlORVJTIG5lZWQgdXBkYXRpbmc/CiMxMTogCm5ldyBmaWxlIG1vZGUgMTAwNjQ0
CgpXQVJOSU5HOiBsaW5lIG92ZXIgODAgY2hhcmFjdGVycwojMTIxOiBGSUxFOiB0ZXN0cy9mdXp6
L3Fvc19mdXp6LmM6MTA2OgorICAgIC8qIGV0eXBlIHNldCB0byBRRURHRV9DT05TVU1FRF9CWSBz
byB0aGF0IG1hY2hpbmUgY2FuIGFkZCB0byB0aGUgY29tbWFuZCBsaW5lICovCgp0b3RhbDogMCBl
cnJvcnMsIDIgd2FybmluZ3MsIDIzMSBsaW5lcyBjaGVja2VkCgpQYXRjaCAxOS8yMiBoYXMgc3R5
bGUgcHJvYmxlbXMsIHBsZWFzZSByZXZpZXcuICBJZiBhbnkgb2YgdGhlc2UgZXJyb3JzCmFyZSBm
YWxzZSBwb3NpdGl2ZXMgcmVwb3J0IHRoZW0gdG8gdGhlIG1haW50YWluZXIsIHNlZQpDSEVDS1BB
VENIIGluIE1BSU5UQUlORVJTLgoyMC8yMiBDaGVja2luZyBjb21taXQgNjIxNTM5YWEzYjA4IChm
dXp6OiBhZGQgaTQ0MGZ4IGZ1enogdGFyZ2V0cykKV0FSTklORzogYWRkZWQsIG1vdmVkIG9yIGRl
bGV0ZWQgZmlsZShzKSwgZG9lcyBNQUlOVEFJTkVSUyBuZWVkIHVwZGF0aW5nPwojMjk6IApuZXcg
ZmlsZSBtb2RlIDEwMDY0NAoKV0FSTklORzogbGluZSBvdmVyIDgwIGNoYXJhY3RlcnMKIzE1Mjog
RklMRTogdGVzdHMvZnV6ei9pNDQwZnhfZnV6ei5jOjExOToKK3N0YXRpYyBjb25zdCBjaGFyICpp
NDQwZnhfcXRlc3RfYXJndltdID0geyJxZW11X3N5c3RlbV9pMzg2IiwgIi1tYWNoaW5lIiwgImFj
Y2VsPXF0ZXN0In07CgpXQVJOSU5HOiBCbG9jayBjb21tZW50cyB1c2UgYSBsZWFkaW5nIC8qIG9u
IGEgc2VwYXJhdGUgbGluZQojMTc4OiBGSUxFOiB0ZXN0cy9mdXp6L2k0NDBmeF9mdXp6LmM6MTQ1
OgorICAgIC8qIFVzZXMgbGlicW9zLiBEb2Vzbid0IGRvIGFueXRoaW5nIHRvIHJlc2V0IHN0YXRl
LiBOb3RlIHRoYXQgaWYgd2Ugd2VyZSB0bwoKV0FSTklORzogQmxvY2sgY29tbWVudHMgdXNlICog
b24gc3Vic2VxdWVudCBsaW5lcwojMTc5OiBGSUxFOiB0ZXN0cy9mdXp6L2k0NDBmeF9mdXp6LmM6
MTQ2OgorICAgIC8qIFVzZXMgbGlicW9zLiBEb2Vzbid0IGRvIGFueXRoaW5nIHRvIHJlc2V0IHN0
YXRlLiBOb3RlIHRoYXQgaWYgd2Ugd2VyZSB0bworICAgICByZWJvb3QgYWZ0ZXIgZWFjaCBydW4s
IHdlIHdvdWxkIGFsc28gaGF2ZSB0byByZWRvIHRoZSBxb3MtcmVsYXRlZAoKV0FSTklORzogQmxv
Y2sgY29tbWVudHMgdXNlIGEgdHJhaWxpbmcgKi8gb24gYSBzZXBhcmF0ZSBsaW5lCiMxODA6IEZJ
TEU6IHRlc3RzL2Z1enovaTQ0MGZ4X2Z1enouYzoxNDc6CisgICAgIGluaXRpYWxpemF0aW9uIChx
b3NfaW5pdF9wYXRoKSAqLwoKdG90YWw6IDAgZXJyb3JzLCA1IHdhcm5pbmdzLCAxNjYgbGluZXMg
Y2hlY2tlZAoKUGF0Y2ggMjAvMjIgaGFzIHN0eWxlIHByb2JsZW1zLCBwbGVhc2UgcmV2aWV3LiAg
SWYgYW55IG9mIHRoZXNlIGVycm9ycwphcmUgZmFsc2UgcG9zaXRpdmVzIHJlcG9ydCB0aGVtIHRv
IHRoZSBtYWludGFpbmVyLCBzZWUKQ0hFQ0tQQVRDSCBpbiBNQUlOVEFJTkVSUy4KMjEvMjIgQ2hl
Y2tpbmcgY29tbWl0IDA0MmUxNzJlZjQzMyAoZnV6ejogYWRkIHZpcnRpby1uZXQgZnV6eiB0YXJn
ZXQpCldBUk5JTkc6IGFkZGVkLCBtb3ZlZCBvciBkZWxldGVkIGZpbGUocyksIGRvZXMgTUFJTlRB
SU5FUlMgbmVlZCB1cGRhdGluZz8KIzI1OiAKbmV3IGZpbGUgbW9kZSAxMDA2NDQKCnRvdGFsOiAw
IGVycm9ycywgMSB3YXJuaW5ncywgMTI2IGxpbmVzIGNoZWNrZWQKClBhdGNoIDIxLzIyIGhhcyBz
dHlsZSBwcm9ibGVtcywgcGxlYXNlIHJldmlldy4gIElmIGFueSBvZiB0aGVzZSBlcnJvcnMKYXJl
IGZhbHNlIHBvc2l0aXZlcyByZXBvcnQgdGhlbSB0byB0aGUgbWFpbnRhaW5lciwgc2VlCkNIRUNL
UEFUQ0ggaW4gTUFJTlRBSU5FUlMuCjIyLzIyIENoZWNraW5nIGNvbW1pdCA1YWQ5NGE4NTczN2Eg
KGZ1eno6IGFkZCBkb2N1bWVudGF0aW9uIHRvIGRvY3MvZGV2ZWwvKQpXQVJOSU5HOiBhZGRlZCwg
bW92ZWQgb3IgZGVsZXRlZCBmaWxlKHMpLCBkb2VzIE1BSU5UQUlORVJTIG5lZWQgdXBkYXRpbmc/
CiMxMTogCm5ldyBmaWxlIG1vZGUgMTAwNjQ0Cgp0b3RhbDogMCBlcnJvcnMsIDEgd2FybmluZ3Ms
IDExNCBsaW5lcyBjaGVja2VkCgpQYXRjaCAyMi8yMiBoYXMgc3R5bGUgcHJvYmxlbXMsIHBsZWFz
ZSByZXZpZXcuICBJZiBhbnkgb2YgdGhlc2UgZXJyb3JzCmFyZSBmYWxzZSBwb3NpdGl2ZXMgcmVw
b3J0IHRoZW0gdG8gdGhlIG1haW50YWluZXIsIHNlZQpDSEVDS1BBVENIIGluIE1BSU5UQUlORVJT
Lgo9PT0gT1VUUFVUIEVORCA9PT0KClRlc3QgY29tbWFuZCBleGl0ZWQgd2l0aCBjb2RlOiAxCgoK
VGhlIGZ1bGwgbG9nIGlzIGF2YWlsYWJsZSBhdApodHRwOi8vcGF0Y2hldy5vcmcvbG9ncy8yMDE5
MDkxODIzMTg0Ni4yMjUzOC0xLWFseG5kckBidS5lZHUvdGVzdGluZy5jaGVja3BhdGNoLz90eXBl
PW1lc3NhZ2UuCi0tLQpFbWFpbCBnZW5lcmF0ZWQgYXV0b21hdGljYWxseSBieSBQYXRjaGV3IFto
dHRwczovL3BhdGNoZXcub3JnL10uClBsZWFzZSBzZW5kIHlvdXIgZmVlZGJhY2sgdG8gcGF0Y2hl
dy1kZXZlbEByZWRoYXQuY29t


