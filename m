Return-Path: <qemu-devel-bounces+lists+qemu-devel=lfdr.de@nongnu.org>
X-Original-To: lists+qemu-devel@lfdr.de
Delivered-To: lists+qemu-devel@lfdr.de
Received: from lists.gnu.org (lists.gnu.org [209.51.188.17])
	by mail.lfdr.de (Postfix) with ESMTPS id 0F86A3266DB
	for <lists+qemu-devel@lfdr.de>; Fri, 26 Feb 2021 19:23:35 +0100 (CET)
Received: from localhost ([::1]:34314 helo=lists1p.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.90_1)
	(envelope-from <qemu-devel-bounces+lists+qemu-devel=lfdr.de@nongnu.org>)
	id 1lFhm1-0000oQ-Qv
	for lists+qemu-devel@lfdr.de; Fri, 26 Feb 2021 13:23:33 -0500
Received: from eggs.gnu.org ([2001:470:142:3::10]:46372)
 by lists.gnu.org with esmtps (TLS1.2:ECDHE_RSA_AES_256_GCM_SHA384:256)
 (Exim 4.90_1) (envelope-from <no-reply@patchew.org>)
 id 1lFhkp-00083r-BL
 for qemu-devel@nongnu.org; Fri, 26 Feb 2021 13:22:19 -0500
Resent-Date: Fri, 26 Feb 2021 13:22:19 -0500
Resent-Message-Id: <E1lFhkp-00083r-BL@lists.gnu.org>
Received: from sender4-of-o53.zoho.com ([136.143.188.53]:21318)
 by eggs.gnu.org with esmtps (TLS1.2:ECDHE_RSA_AES_256_GCM_SHA384:256)
 (Exim 4.90_1) (envelope-from <no-reply@patchew.org>)
 id 1lFhkl-0004Cw-Jn
 for qemu-devel@nongnu.org; Fri, 26 Feb 2021 13:22:18 -0500
ARC-Seal: i=1; a=rsa-sha256; t=1614363717; cv=none; 
 d=zohomail.com; s=zohoarc; 
 b=LctaWBGkVnjnuudqSouXgxIbvn7OI20nOq/sv5Y55xtxyQ4l7RE6QDr5/h2nDYZzPpO/sLjsIxM4JytmmiS3CR6gcJO2wfVvHuv3gfBjAUiHyd10J8E/toYFrK27PgyFK/0MrXmX9RR53RQokbBVe+S6nVXcYaMQd+M1V18D3VA=
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=zohomail.com;
 s=zohoarc; t=1614363717;
 h=Content-Type:Content-Transfer-Encoding:Cc:Date:From:In-Reply-To:MIME-Version:Message-ID:Reply-To:Subject:To;
 bh=Nx2U2zH6j+sT0ZQ+YrO6l7vAVVe1LhDlhK+lzLsSkE4=; 
 b=IrbLHBGEd2eiKNwL3cv+taRI9rNVwVhiKB22MHR5t0Y+CFJHntmtqeVhVbKdxN8iALo7CslDWbDV/b8VrK2wgT/pBYufWuluu0wQVTc83dVP/a+SJn9B2ZJR28YisDReDYXWaLeBN1qkKdiFm8u0zdW3Uv2sh/dXNBcHrjV1vXM=
ARC-Authentication-Results: i=1; mx.zohomail.com;
 spf=pass  smtp.mailfrom=no-reply@patchew.org;
 dmarc=pass header.from=<no-reply@patchew.org>
 header.from=<no-reply@patchew.org>
Received: from [172.17.0.3] (23.253.156.214 [23.253.156.214]) by
 mx.zohomail.com with SMTPS id 1614363714654635.2018599140553;
 Fri, 26 Feb 2021 10:21:54 -0800 (PST)
In-Reply-To: <20210226175143.22388-1-cfontana@suse.de>
Subject: Re: [PATCH v25 00/20] i386 cleanup PART 2
Message-ID: <161436371280.15109.13945938486302616347@c667a6b167f6>
MIME-Version: 1.0
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Resent-From: 
From: no-reply@patchew.org
To: cfontana@suse.de
Date: Fri, 26 Feb 2021 10:21:54 -0800 (PST)
X-ZohoMailClient: External
Received-SPF: pass client-ip=136.143.188.53; envelope-from=no-reply@patchew.org;
 helo=sender4-of-o53.zoho.com
X-Spam_score_int: -18
X-Spam_score: -1.9
X-Spam_bar: -
X-Spam_report: (-1.9 / 5.0 requ) BAYES_00=-1.9, RCVD_IN_DNSWL_NONE=-0.0001,
 RCVD_IN_MSPIKE_H4=0.001, RCVD_IN_MSPIKE_WL=0.001, SPF_HELO_NONE=0.001,
 SPF_PASS=-0.001 autolearn=ham autolearn_force=no
X-Spam_action: no action
X-BeenThere: qemu-devel@nongnu.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: <qemu-devel.nongnu.org>
List-Unsubscribe: <https://lists.nongnu.org/mailman/options/qemu-devel>,
 <mailto:qemu-devel-request@nongnu.org?subject=unsubscribe>
List-Archive: <https://lists.nongnu.org/archive/html/qemu-devel>
List-Post: <mailto:qemu-devel@nongnu.org>
List-Help: <mailto:qemu-devel-request@nongnu.org?subject=help>
List-Subscribe: <https://lists.nongnu.org/mailman/listinfo/qemu-devel>,
 <mailto:qemu-devel-request@nongnu.org?subject=subscribe>
Reply-To: qemu-devel@nongnu.org
Cc: lvivier@redhat.com, peter.maydell@linaro.org, thuth@redhat.com,
 ehabkost@redhat.com, philmd@redhat.com, richard.henderson@linaro.org,
 qemu-devel@nongnu.org, r.bolshakov@yadro.com, cfontana@suse.de,
 pbonzini@redhat.com, alex.bennee@linaro.org
Errors-To: qemu-devel-bounces+lists+qemu-devel=lfdr.de@nongnu.org
Sender: "Qemu-devel" <qemu-devel-bounces+lists+qemu-devel=lfdr.de@nongnu.org>

UGF0Y2hldyBVUkw6IGh0dHBzOi8vcGF0Y2hldy5vcmcvUUVNVS8yMDIxMDIyNjE3NTE0My4yMjM4
OC0xLWNmb250YW5hQHN1c2UuZGUvCgoKCkhpLAoKVGhpcyBzZXJpZXMgc2VlbXMgdG8gaGF2ZSBz
b21lIGNvZGluZyBzdHlsZSBwcm9ibGVtcy4gU2VlIG91dHB1dCBiZWxvdyBmb3IKbW9yZSBpbmZv
cm1hdGlvbjoKClR5cGU6IHNlcmllcwpNZXNzYWdlLWlkOiAyMDIxMDIyNjE3NTE0My4yMjM4OC0x
LWNmb250YW5hQHN1c2UuZGUKU3ViamVjdDogW1BBVENIIHYyNSAwMC8yMF0gaTM4NiBjbGVhbnVw
IFBBUlQgMgoKPT09IFRFU1QgU0NSSVBUIEJFR0lOID09PQojIS9iaW4vYmFzaApnaXQgcmV2LXBh
cnNlIGJhc2UgPiAvZGV2L251bGwgfHwgZXhpdCAwCmdpdCBjb25maWcgLS1sb2NhbCBkaWZmLnJl
bmFtZWxpbWl0IDAKZ2l0IGNvbmZpZyAtLWxvY2FsIGRpZmYucmVuYW1lcyBUcnVlCmdpdCBjb25m
aWcgLS1sb2NhbCBkaWZmLmFsZ29yaXRobSBoaXN0b2dyYW0KLi9zY3JpcHRzL2NoZWNrcGF0Y2gu
cGwgLS1tYWlsYmFjayBiYXNlLi4KPT09IFRFU1QgU0NSSVBUIEVORCA9PT0KClVwZGF0aW5nIDNj
OGNmNWE5YzIxZmY4NzgyMTY0ZDFkZWY3ZjQ0YmQ4ODg3MTMzODQKRnJvbSBodHRwczovL2dpdGh1
Yi5jb20vcGF0Y2hldy1wcm9qZWN0L3FlbXUKIC0gW3RhZyB1cGRhdGVdICAgICAgcGF0Y2hldy8y
MDIxMDIyNDEzNTI1NS4yNTM4MzctMS1rd29sZkByZWRoYXQuY29tIC0+IHBhdGNoZXcvMjAyMTAy
MjQxMzUyNTUuMjUzODM3LTEta3dvbGZAcmVkaGF0LmNvbQogLSBbdGFnIHVwZGF0ZV0gICAgICBw
YXRjaGV3LzIwMjEwMjI2MTcwODE2LjIzMTE3My0xLXBib256aW5pQHJlZGhhdC5jb20gLT4gcGF0
Y2hldy8yMDIxMDIyNjE3MDgxNi4yMzExNzMtMS1wYm9uemluaUByZWRoYXQuY29tCiAqIFtuZXcg
dGFnXSAgICAgICAgIHBhdGNoZXcvMjAyMTAyMjYxNzUxNDMuMjIzODgtMS1jZm9udGFuYUBzdXNl
LmRlIC0+IHBhdGNoZXcvMjAyMTAyMjYxNzUxNDMuMjIzODgtMS1jZm9udGFuYUBzdXNlLmRlClN3
aXRjaGVkIHRvIGEgbmV3IGJyYW5jaCAndGVzdCcKMDI5ODljYyBpMzg2OiBtYWtlIGNwdV9sb2Fk
X2VmZXIgc3lzZW11LW9ubHkKYWMwNTk4ZSB0YXJnZXQvaTM4NjogZ2Ric3R1Yjogb25seSB3cml0
ZSBDUjAvQ1IyL0NSMy9FRkVSIGZvciBzeXNlbXUKNzU3YmJlMCB0YXJnZXQvaTM4NjogZ2Ric3R1
YjogaW50cm9kdWNlIGF1eCBmdW5jdGlvbnMgdG8gcmVhZC93cml0ZSBDUzY0IHJlZ3MKMWUwZjdm
MCBpMzg2OiBzcGxpdCBvZmYgc3lzZW11IHBhcnQgb2YgY3B1LmMKZTU5NmM5OCBpMzg2OiBzcGxp
dCBzZWdfaGVscGVyIGludG8gdXNlci1vbmx5IGFuZCBzeXNlbXUgcGFydHMKMGFlNjUzNCBpMzg2
OiBzcGxpdCBzdm1faGVscGVyIGludG8gc3lzZW11IGFuZCBzdHViLW9ubHkgdXNlcgplNzkwZWEy
IGkzODY6IHNlcGFyYXRlIGZwdV9oZWxwZXIgaW50byB1c2VyIGFuZCBzeXNlbXUgcGFydHMKMTQy
YzRlNCBpMzg2OiBzcGxpdCBtaXNjIGhlbHBlciB1c2VyIHN0dWJzIGFuZCBzeXNlbXUgcGFydAoy
ZDJhZDllIGkzODY6IG1vdmUgVENHIGJwdF9oZWxwZXIgaW50byBzeXNlbXUvCjljMjJiZTQgaTM4
Njogc3BsaXQgdGNnIGV4Y3BfaGVscGVyIGludG8gc3lzZW11IGFuZCB1c2VyIHBhcnRzCjdkZTVi
OTMgaTM4Njogc3BsaXQgc21tIGhlbHBlciAoc3lzZW11KQo4NTA5Y2RjIGkzODY6IHNwbGl0IG9m
ZiBzeXNlbXUtb25seSBmdW5jdGlvbmFsaXR5IGluIHRjZy1jcHUKYzc2ZjEyNCBtZXNvbjogYWRk
IHRhcmdldF91c2VyX2FyY2gKZjA4NWQwYyBhY2NlbC1jcHU6IG1ha2UgY3B1X3JlYWxpemVmbiBy
ZXR1cm4gYSBib29sCjYyNjllMzYgdGFyZ2V0L2kzODY6IGZpeCBob3N0X2NwdV9hZGp1c3RfcGh5
c19iaXRzIGVycm9yIGhhbmRsaW5nCjMyMzVmZTEgYWNjZWw6IGludHJvZHVjZSBuZXcgYWNjZXNz
b3IgZnVuY3Rpb25zCjhlNzBmNWUgY3B1OiBjYWxsIEFjY2VsQ1BVQ2xhc3M6OmNwdV9yZWFsaXpl
Zm4gaW4gY3B1X2V4ZWNfcmVhbGl6ZWZuCjY2M2IwZjYgaTM4Njogc3BsaXQgY3B1IGFjY2VsZXJh
dG9ycyBmcm9tIGNwdS5jLCB1c2luZyBBY2NlbENQVUNsYXNzCmIzZGVjMTMgdGFyZ2V0L2kzODY6
IFNwbGl0IG91dCBkb19mc2F2ZSwgZG9fZnJzdG9yLCBkb19meHNhdmUsIGRvX2Z4cnN0b3IKYWY2
Y2ZiYyB0YXJnZXQvaTM4NjogUmVuYW1lIGhlbHBlcl9mbGR0LCBoZWxwZXJfZnN0dAoKPT09IE9V
VFBVVCBCRUdJTiA9PT0KMS8yMCBDaGVja2luZyBjb21taXQgYWY2Y2ZiY2UzMmZlICh0YXJnZXQv
aTM4NjogUmVuYW1lIGhlbHBlcl9mbGR0LCBoZWxwZXJfZnN0dCkKMi8yMCBDaGVja2luZyBjb21t
aXQgYjNkZWMxM2YzOWQzICh0YXJnZXQvaTM4NjogU3BsaXQgb3V0IGRvX2ZzYXZlLCBkb19mcnN0
b3IsIGRvX2Z4c2F2ZSwgZG9fZnhyc3RvcikKMy8yMCBDaGVja2luZyBjb21taXQgNjYzYjBmNjEy
NGYwIChpMzg2OiBzcGxpdCBjcHUgYWNjZWxlcmF0b3JzIGZyb20gY3B1LmMsIHVzaW5nIEFjY2Vs
Q1BVQ2xhc3MpCldBUk5JTkc6IGxpbmUgb3ZlciA4MCBjaGFyYWN0ZXJzCiMxMzM3OiBGSUxFOiB0
YXJnZXQvaTM4Ni90Y2cvdGNnLWNwdS5jOjEyNToKKyAgICBtZW1vcnlfcmVnaW9uX2FkZF9zdWJy
ZWdpb25fb3ZlcmxhcChjcHUtPmNwdV9hc19yb290LCAwLCBjcHUtPmNwdV9hc19tZW0sIDApOwoK
dG90YWw6IDAgZXJyb3JzLCAxIHdhcm5pbmdzLCAxMjU2IGxpbmVzIGNoZWNrZWQKClBhdGNoIDMv
MjAgaGFzIHN0eWxlIHByb2JsZW1zLCBwbGVhc2UgcmV2aWV3LiAgSWYgYW55IG9mIHRoZXNlIGVy
cm9ycwphcmUgZmFsc2UgcG9zaXRpdmVzIHJlcG9ydCB0aGVtIHRvIHRoZSBtYWludGFpbmVyLCBz
ZWUKQ0hFQ0tQQVRDSCBpbiBNQUlOVEFJTkVSUy4KNC8yMCBDaGVja2luZyBjb21taXQgOGU3MGY1
ZTc0YTViIChjcHU6IGNhbGwgQWNjZWxDUFVDbGFzczo6Y3B1X3JlYWxpemVmbiBpbiBjcHVfZXhl
Y19yZWFsaXplZm4pCjUvMjAgQ2hlY2tpbmcgY29tbWl0IDMyMzVmZTEyMTNiNiAoYWNjZWw6IGlu
dHJvZHVjZSBuZXcgYWNjZXNzb3IgZnVuY3Rpb25zKQo2LzIwIENoZWNraW5nIGNvbW1pdCA2MjY5
ZTM2OGEwNGYgKHRhcmdldC9pMzg2OiBmaXggaG9zdF9jcHVfYWRqdXN0X3BoeXNfYml0cyBlcnJv
ciBoYW5kbGluZykKNy8yMCBDaGVja2luZyBjb21taXQgZjA4NWQwY2NiZjFlIChhY2NlbC1jcHU6
IG1ha2UgY3B1X3JlYWxpemVmbiByZXR1cm4gYSBib29sKQo4LzIwIENoZWNraW5nIGNvbW1pdCBj
NzZmMTI0YWFjMGYgKG1lc29uOiBhZGQgdGFyZ2V0X3VzZXJfYXJjaCkKOS8yMCBDaGVja2luZyBj
b21taXQgODUwOWNkY2I2ZjQ1IChpMzg2OiBzcGxpdCBvZmYgc3lzZW11LW9ubHkgZnVuY3Rpb25h
bGl0eSBpbiB0Y2ctY3B1KQpVc2Ugb2YgdW5pbml0aWFsaXplZCB2YWx1ZSAkYWNwaV90ZXN0ZXhw
ZWN0ZWQgaW4gc3RyaW5nIGVxIGF0IC4vc2NyaXB0cy9jaGVja3BhdGNoLnBsIGxpbmUgMTUyOS4K
V0FSTklORzogYWRkZWQsIG1vdmVkIG9yIGRlbGV0ZWQgZmlsZShzKSwgZG9lcyBNQUlOVEFJTkVS
UyBuZWVkIHVwZGF0aW5nPwojMzE6IApuZXcgZmlsZSBtb2RlIDEwMDY0NAoKV0FSTklORzogbGlu
ZSBvdmVyIDgwIGNoYXJhY3RlcnMKIzExNjogRklMRTogdGFyZ2V0L2kzODYvdGNnL3N5c2VtdS90
Y2ctY3B1LmM6NzI6CisgICAgbWVtb3J5X3JlZ2lvbl9hZGRfc3VicmVnaW9uX292ZXJsYXAoY3B1
LT5jcHVfYXNfcm9vdCwgMCwgY3B1LT5jcHVfYXNfbWVtLCAwKTsKCnRvdGFsOiAwIGVycm9ycywg
MiB3YXJuaW5ncywgMjEyIGxpbmVzIGNoZWNrZWQKClBhdGNoIDkvMjAgaGFzIHN0eWxlIHByb2Js
ZW1zLCBwbGVhc2UgcmV2aWV3LiAgSWYgYW55IG9mIHRoZXNlIGVycm9ycwphcmUgZmFsc2UgcG9z
aXRpdmVzIHJlcG9ydCB0aGVtIHRvIHRoZSBtYWludGFpbmVyLCBzZWUKQ0hFQ0tQQVRDSCBpbiBN
QUlOVEFJTkVSUy4KMTAvMjAgQ2hlY2tpbmcgY29tbWl0IDdkZTViOTNjNDRmOCAoaTM4Njogc3Bs
aXQgc21tIGhlbHBlciAoc3lzZW11KSkKV0FSTklORzogYWRkZWQsIG1vdmVkIG9yIGRlbGV0ZWQg
ZmlsZShzKSwgZG9lcyBNQUlOVEFJTkVSUyBuZWVkIHVwZGF0aW5nPwojMjQ6IAogdGFyZ2V0L2kz
ODYvdGNnL3sgPT4gc3lzZW11fS9zbW1faGVscGVyLmMgfCAxOSArKy0tLS0tLS0tLS0tLS0tLS0t
Cgp0b3RhbDogMCBlcnJvcnMsIDEgd2FybmluZ3MsIDg0IGxpbmVzIGNoZWNrZWQKClBhdGNoIDEw
LzIwIGhhcyBzdHlsZSBwcm9ibGVtcywgcGxlYXNlIHJldmlldy4gIElmIGFueSBvZiB0aGVzZSBl
cnJvcnMKYXJlIGZhbHNlIHBvc2l0aXZlcyByZXBvcnQgdGhlbSB0byB0aGUgbWFpbnRhaW5lciwg
c2VlCkNIRUNLUEFUQ0ggaW4gTUFJTlRBSU5FUlMuCjExLzIwIENoZWNraW5nIGNvbW1pdCA5YzIy
YmU0NTkwNWIgKGkzODY6IHNwbGl0IHRjZyBleGNwX2hlbHBlciBpbnRvIHN5c2VtdSBhbmQgdXNl
ciBwYXJ0cykKVXNlIG9mIHVuaW5pdGlhbGl6ZWQgdmFsdWUgJGFjcGlfdGVzdGV4cGVjdGVkIGlu
IHN0cmluZyBlcSBhdCAuL3NjcmlwdHMvY2hlY2twYXRjaC5wbCBsaW5lIDE1MjkuCldBUk5JTkc6
IGFkZGVkLCBtb3ZlZCBvciBkZWxldGVkIGZpbGUocyksIGRvZXMgTUFJTlRBSU5FUlMgbmVlZCB1
cGRhdGluZz8KIzU5OTogCm5ldyBmaWxlIG1vZGUgMTAwNjQ0CgpXQVJOSU5HOiBCbG9jayBjb21t
ZW50cyB1c2UgYSBsZWFkaW5nIC8qIG9uIGEgc2VwYXJhdGUgbGluZQojNzU2OiBGSUxFOiB0YXJn
ZXQvaTM4Ni90Y2cvc3lzZW11L2V4Y3BfaGVscGVyLmM6MTUzOgorICAgICAgICAgICAgLyogQml0
cyAyMC0xMyBwcm92aWRlIGJpdHMgMzktMzIgb2YgdGhlIGFkZHJlc3MsIGJpdCAyMSBpcyByZXNl
cnZlZC4KCldBUk5JTkc6IEJsb2NrIGNvbW1lbnRzIHVzZSBhIGxlYWRpbmcgLyogb24gYSBzZXBh
cmF0ZSBsaW5lCiM4MzA6IEZJTEU6IHRhcmdldC9pMzg2L3RjZy9zeXNlbXUvZXhjcF9oZWxwZXIu
YzoyMjc6CisvKiByZXR1cm4gdmFsdWU6CgpXQVJOSU5HOiBsaW5lIG92ZXIgODAgY2hhcmFjdGVy
cwojOTMxOiBGSUxFOiB0YXJnZXQvaTM4Ni90Y2cvc3lzZW11L2V4Y3BfaGVscGVyLmM6MzI4Ogor
ICAgICAgICAgICAgcGRwZV9hZGRyID0gKChwbWw0ZSAmIFBHX0FERFJFU1NfTUFTSykgKyAoKChh
ZGRyID4+IDMwKSAmIDB4MWZmKSA8PCAzKSkgJgoKV0FSTklORzogQmxvY2sgY29tbWVudHMgdXNl
IGEgbGVhZGluZyAvKiBvbiBhIHNlcGFyYXRlIGxpbmUKIzEwMjU6IEZJTEU6IHRhcmdldC9pMzg2
L3RjZy9zeXNlbXUvZXhjcF9oZWxwZXIuYzo0MjI6CisgICAgICAgICAgICAvKiBCaXRzIDIwLTEz
IHByb3ZpZGUgYml0cyAzOS0zMiBvZiB0aGUgYWRkcmVzcywgYml0IDIxIGlzIHJlc2VydmVkLgoK
V0FSTklORzogQmxvY2sgY29tbWVudHMgdXNlIGEgbGVhZGluZyAvKiBvbiBhIHNlcGFyYXRlIGxp
bmUKIzExMjA6IEZJTEU6IHRhcmdldC9pMzg2L3RjZy9zeXNlbXUvZXhjcF9oZWxwZXIuYzo1MTc6
CisgICAgICAgIC8qIG9ubHkgc2V0IHdyaXRlIGFjY2VzcyBpZiBhbHJlYWR5IGRpcnR5Li4uIG90
aGVyd2lzZSB3YWl0CgpXQVJOSU5HOiBCbG9jayBjb21tZW50cyB1c2UgKiBvbiBzdWJzZXF1ZW50
IGxpbmVzCiMxMTIxOiBGSUxFOiB0YXJnZXQvaTM4Ni90Y2cvc3lzZW11L2V4Y3BfaGVscGVyLmM6
NTE4OgorICAgICAgICAvKiBvbmx5IHNldCB3cml0ZSBhY2Nlc3MgaWYgYWxyZWFkeSBkaXJ0eS4u
LiBvdGhlcndpc2Ugd2FpdAorICAgICAgICAgICBmb3IgZGlydHkgYWNjZXNzICovCgpXQVJOSU5H
OiBCbG9jayBjb21tZW50cyB1c2UgYSB0cmFpbGluZyAqLyBvbiBhIHNlcGFyYXRlIGxpbmUKIzEx
MjE6IEZJTEU6IHRhcmdldC9pMzg2L3RjZy9zeXNlbXUvZXhjcF9oZWxwZXIuYzo1MTg6CisgICAg
ICAgICAgIGZvciBkaXJ0eSBhY2Nlc3MgKi8KCldBUk5JTkc6IEJsb2NrIGNvbW1lbnRzIHVzZSBh
IGxlYWRpbmcgLyogb24gYSBzZXBhcmF0ZSBsaW5lCiMxMTM0OiBGSUxFOiB0YXJnZXQvaTM4Ni90
Y2cvc3lzZW11L2V4Y3BfaGVscGVyLmM6NTMxOgorICAgIC8qIEV2ZW4gaWYgNE1CIHBhZ2VzLCB3
ZSBtYXAgb25seSBvbmUgNEtCIHBhZ2UgaW4gdGhlIGNhY2hlIHRvCgpXQVJOSU5HOiBCbG9jayBj
b21tZW50cyB1c2UgKiBvbiBzdWJzZXF1ZW50IGxpbmVzCiMxMTM1OiBGSUxFOiB0YXJnZXQvaTM4
Ni90Y2cvc3lzZW11L2V4Y3BfaGVscGVyLmM6NTMyOgorICAgIC8qIEV2ZW4gaWYgNE1CIHBhZ2Vz
LCB3ZSBtYXAgb25seSBvbmUgNEtCIHBhZ2UgaW4gdGhlIGNhY2hlIHRvCisgICAgICAgYXZvaWQg
ZmlsbGluZyBpdCB0b28gZmFzdCAqLwoKV0FSTklORzogQmxvY2sgY29tbWVudHMgdXNlIGEgdHJh
aWxpbmcgKi8gb24gYSBzZXBhcmF0ZSBsaW5lCiMxMTM1OiBGSUxFOiB0YXJnZXQvaTM4Ni90Y2cv
c3lzZW11L2V4Y3BfaGVscGVyLmM6NTMyOgorICAgICAgIGF2b2lkIGZpbGxpbmcgaXQgdG9vIGZh
c3QgKi8KCkVSUk9SOiBicmFjZXMge30gYXJlIG5lY2Vzc2FyeSBmb3IgYWxsIGFybXMgb2YgdGhp
cyBzdGF0ZW1lbnQKIzExNDk6IEZJTEU6IHRhcmdldC9pMzg2L3RjZy9zeXNlbXUvZXhjcF9oZWxw
ZXIuYzo1NDY6CisgICAgaWYgKGlzX3VzZXIpClsuLi5dCgp0b3RhbDogMSBlcnJvcnMsIDExIHdh
cm5pbmdzLCA2MzEgbGluZXMgY2hlY2tlZAoKUGF0Y2ggMTEvMjAgaGFzIHN0eWxlIHByb2JsZW1z
LCBwbGVhc2UgcmV2aWV3LiAgSWYgYW55IG9mIHRoZXNlIGVycm9ycwphcmUgZmFsc2UgcG9zaXRp
dmVzIHJlcG9ydCB0aGVtIHRvIHRoZSBtYWludGFpbmVyLCBzZWUKQ0hFQ0tQQVRDSCBpbiBNQUlO
VEFJTkVSUy4KCjEyLzIwIENoZWNraW5nIGNvbW1pdCAyZDJhZDllZTM3MmUgKGkzODY6IG1vdmUg
VENHIGJwdF9oZWxwZXIgaW50byBzeXNlbXUvKQpVc2Ugb2YgdW5pbml0aWFsaXplZCB2YWx1ZSAk
YWNwaV90ZXN0ZXhwZWN0ZWQgaW4gc3RyaW5nIGVxIGF0IC4vc2NyaXB0cy9jaGVja3BhdGNoLnBs
IGxpbmUgMTUyOS4KV0FSTklORzogYWRkZWQsIG1vdmVkIG9yIGRlbGV0ZWQgZmlsZShzKSwgZG9l
cyBNQUlOVEFJTkVSUyBuZWVkIHVwZGF0aW5nPwojMzY0OiAKbmV3IGZpbGUgbW9kZSAxMDA2NDQK
CldBUk5JTkc6IEJsb2NrIGNvbW1lbnRzIHVzZSBhIGxlYWRpbmcgLyogb24gYSBzZXBhcmF0ZSBs
aW5lCiM1MDA6IEZJTEU6IHRhcmdldC9pMzg2L3RjZy9zeXNlbXUvYnB0X2hlbHBlci5jOjEzMjoK
KyAgICAvKiBJZiBub3RoaW5nIGlzIGNoYW5naW5nIGV4Y2VwdCB0aGUgZ2xvYmFsL2xvY2FsIGVu
YWJsZSBiaXRzLAoKV0FSTklORzogQmxvY2sgY29tbWVudHMgdXNlICogb24gc3Vic2VxdWVudCBs
aW5lcwojNTAxOiBGSUxFOiB0YXJnZXQvaTM4Ni90Y2cvc3lzZW11L2JwdF9oZWxwZXIuYzoxMzM6
CisgICAgLyogSWYgbm90aGluZyBpcyBjaGFuZ2luZyBleGNlcHQgdGhlIGdsb2JhbC9sb2NhbCBl
bmFibGUgYml0cywKKyAgICAgICB0aGVuIHdlIGNhbiBtYWtlIHRoZSBjaGFuZ2UgbW9yZSBlZmZp
Y2llbnQuICAqLwoKV0FSTklORzogQmxvY2sgY29tbWVudHMgdXNlIGEgdHJhaWxpbmcgKi8gb24g
YSBzZXBhcmF0ZSBsaW5lCiM1MDE6IEZJTEU6IHRhcmdldC9pMzg2L3RjZy9zeXNlbXUvYnB0X2hl
bHBlci5jOjEzMzoKKyAgICAgICB0aGVuIHdlIGNhbiBtYWtlIHRoZSBjaGFuZ2UgbW9yZSBlZmZp
Y2llbnQuICAqLwoKV0FSTklORzogQmxvY2sgY29tbWVudHMgdXNlIGEgbGVhZGluZyAvKiBvbiBh
IHNlcGFyYXRlIGxpbmUKIzUwMzogRklMRTogdGFyZ2V0L2kzODYvdGNnL3N5c2VtdS9icHRfaGVs
cGVyLmM6MTM1OgorICAgICAgICAvKiBGb2xkIHRoZSBnbG9iYWwgYW5kIGxvY2FsIGVuYWJsZSBi
aXRzIHRvZ2V0aGVyIGludG8gdGhlCgpXQVJOSU5HOiBCbG9jayBjb21tZW50cyB1c2UgKiBvbiBz
dWJzZXF1ZW50IGxpbmVzCiM1MDQ6IEZJTEU6IHRhcmdldC9pMzg2L3RjZy9zeXNlbXUvYnB0X2hl
bHBlci5jOjEzNjoKKyAgICAgICAgLyogRm9sZCB0aGUgZ2xvYmFsIGFuZCBsb2NhbCBlbmFibGUg
Yml0cyB0b2dldGhlciBpbnRvIHRoZQorICAgICAgICAgICBnbG9iYWwgZmllbGRzLCB0aGVuIHhv
ciB0byBzaG93IHdoaWNoIHJlZ2lzdGVycyBoYXZlCgpXQVJOSU5HOiBCbG9jayBjb21tZW50cyB1
c2UgYSB0cmFpbGluZyAqLyBvbiBhIHNlcGFyYXRlIGxpbmUKIzUwNTogRklMRTogdGFyZ2V0L2kz
ODYvdGNnL3N5c2VtdS9icHRfaGVscGVyLmM6MTM3OgorICAgICAgICAgICBjaGFuZ2VkIGNvbGxl
Y3RpdmUgZW5hYmxlIHN0YXRlLiAgKi8KCnRvdGFsOiAwIGVycm9ycywgNyB3YXJuaW5ncywgNjI4
IGxpbmVzIGNoZWNrZWQKClBhdGNoIDEyLzIwIGhhcyBzdHlsZSBwcm9ibGVtcywgcGxlYXNlIHJl
dmlldy4gIElmIGFueSBvZiB0aGVzZSBlcnJvcnMKYXJlIGZhbHNlIHBvc2l0aXZlcyByZXBvcnQg
dGhlbSB0byB0aGUgbWFpbnRhaW5lciwgc2VlCkNIRUNLUEFUQ0ggaW4gTUFJTlRBSU5FUlMuCjEz
LzIwIENoZWNraW5nIGNvbW1pdCAxNDJjNGU0NTY3NTUgKGkzODY6IHNwbGl0IG1pc2MgaGVscGVy
IHVzZXIgc3R1YnMgYW5kIHN5c2VtdSBwYXJ0KQpVc2Ugb2YgdW5pbml0aWFsaXplZCB2YWx1ZSAk
YWNwaV90ZXN0ZXhwZWN0ZWQgaW4gc3RyaW5nIGVxIGF0IC4vc2NyaXB0cy9jaGVja3BhdGNoLnBs
IGxpbmUgMTUyOS4KV0FSTklORzogYWRkZWQsIG1vdmVkIG9yIGRlbGV0ZWQgZmlsZShzKSwgZG9l
cyBNQUlOVEFJTkVSUyBuZWVkIHVwZGF0aW5nPwojNTI2OiAKbmV3IGZpbGUgbW9kZSAxMDA2NDQK
CkVSUk9SOiBzd2l0Y2ggYW5kIGNhc2Ugc2hvdWxkIGJlIGF0IHRoZSBzYW1lIGluZGVudAojODE5
OiBGSUxFOiB0YXJnZXQvaTM4Ni90Y2cvc3lzZW11L21pc2NfaGVscGVyLmM6Mjg5OgorICAgIHN3
aXRjaCAoKHVpbnQzMl90KWVudi0+cmVnc1tSX0VDWF0pIHsKWy4uLl0KKyAgICAgY2FzZSBNU1Jf
SUEzMl9VQ09ERV9SRVY6Cgp0b3RhbDogMSBlcnJvcnMsIDEgd2FybmluZ3MsIDEwMTIgbGluZXMg
Y2hlY2tlZAoKUGF0Y2ggMTMvMjAgaGFzIHN0eWxlIHByb2JsZW1zLCBwbGVhc2UgcmV2aWV3LiAg
SWYgYW55IG9mIHRoZXNlIGVycm9ycwphcmUgZmFsc2UgcG9zaXRpdmVzIHJlcG9ydCB0aGVtIHRv
IHRoZSBtYWludGFpbmVyLCBzZWUKQ0hFQ0tQQVRDSCBpbiBNQUlOVEFJTkVSUy4KCjE0LzIwIENo
ZWNraW5nIGNvbW1pdCBlNzkwZWEyYWM4MzAgKGkzODY6IHNlcGFyYXRlIGZwdV9oZWxwZXIgaW50
byB1c2VyIGFuZCBzeXNlbXUgcGFydHMpClVzZSBvZiB1bmluaXRpYWxpemVkIHZhbHVlICRhY3Bp
X3Rlc3RleHBlY3RlZCBpbiBzdHJpbmcgZXEgYXQgLi9zY3JpcHRzL2NoZWNrcGF0Y2gucGwgbGlu
ZSAxNTI5LgpXQVJOSU5HOiBhZGRlZCwgbW92ZWQgb3IgZGVsZXRlZCBmaWxlKHMpLCBkb2VzIE1B
SU5UQUlORVJTIG5lZWQgdXBkYXRpbmc/CiMxOTk6IApuZXcgZmlsZSBtb2RlIDEwMDY0NAoKdG90
YWw6IDAgZXJyb3JzLCAxIHdhcm5pbmdzLCAyNjUgbGluZXMgY2hlY2tlZAoKUGF0Y2ggMTQvMjAg
aGFzIHN0eWxlIHByb2JsZW1zLCBwbGVhc2UgcmV2aWV3LiAgSWYgYW55IG9mIHRoZXNlIGVycm9y
cwphcmUgZmFsc2UgcG9zaXRpdmVzIHJlcG9ydCB0aGVtIHRvIHRoZSBtYWludGFpbmVyLCBzZWUK
Q0hFQ0tQQVRDSCBpbiBNQUlOVEFJTkVSUy4KMTUvMjAgQ2hlY2tpbmcgY29tbWl0IDBhZTY1MzQ0
NjFhMiAoaTM4Njogc3BsaXQgc3ZtX2hlbHBlciBpbnRvIHN5c2VtdSBhbmQgc3R1Yi1vbmx5IHVz
ZXIpCldBUk5JTkc6IGFkZGVkLCBtb3ZlZCBvciBkZWxldGVkIGZpbGUocyksIGRvZXMgTUFJTlRB
SU5FUlMgbmVlZCB1cGRhdGluZz8KIzM0OiAKIHRhcmdldC9pMzg2L3RjZy97ID0+IHN5c2VtdX0v
c3ZtX2hlbHBlci5jIHwgNjIgKy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQoKdG90YWw6IDAgZXJy
b3JzLCAxIHdhcm5pbmdzLCAxNjkgbGluZXMgY2hlY2tlZAoKUGF0Y2ggMTUvMjAgaGFzIHN0eWxl
IHByb2JsZW1zLCBwbGVhc2UgcmV2aWV3LiAgSWYgYW55IG9mIHRoZXNlIGVycm9ycwphcmUgZmFs
c2UgcG9zaXRpdmVzIHJlcG9ydCB0aGVtIHRvIHRoZSBtYWludGFpbmVyLCBzZWUKQ0hFQ0tQQVRD
SCBpbiBNQUlOVEFJTkVSUy4KMTYvMjAgQ2hlY2tpbmcgY29tbWl0IGU1OTZjOThjODVjOCAoaTM4
Njogc3BsaXQgc2VnX2hlbHBlciBpbnRvIHVzZXItb25seSBhbmQgc3lzZW11IHBhcnRzKQpVc2Ug
b2YgdW5pbml0aWFsaXplZCB2YWx1ZSAkYWNwaV90ZXN0ZXhwZWN0ZWQgaW4gc3RyaW5nIGVxIGF0
IC4vc2NyaXB0cy9jaGVja3BhdGNoLnBsIGxpbmUgMTUyOS4KV0FSTklORzogYWRkZWQsIG1vdmVk
IG9yIGRlbGV0ZWQgZmlsZShzKSwgZG9lcyBNQUlOVEFJTkVSUyBuZWVkIHVwZGF0aW5nPwojMzIx
OiAKbmV3IGZpbGUgbW9kZSAxMDA2NDQKCkVSUk9SOiBkbyBub3QgdXNlIEM5OSAvLyBjb21tZW50
cwojMzQ4OiBGSUxFOiB0YXJnZXQvaTM4Ni90Y2cvc2VnX2hlbHBlci5oOjIzOgorLy8jZGVmaW5l
IERFQlVHX1BDQUxMCgpXQVJOSU5HOiBCbG9jayBjb21tZW50cyB1c2UgYSBsZWFkaW5nIC8qIG9u
IGEgc2VwYXJhdGUgbGluZQojNjIxOiBGSUxFOiB0YXJnZXQvaTM4Ni90Y2cvdXNlci9zZWdfaGVs
cGVyLmM6NzM6CisgICAgLyogU2luY2Ugd2UgZW11bGF0ZSBvbmx5IHVzZXIgc3BhY2UsIHdlIGNh
bm5vdCBkbyBtb3JlIHRoYW4KCldBUk5JTkc6IEJsb2NrIGNvbW1lbnRzIHVzZSAqIG9uIHN1YnNl
cXVlbnQgbGluZXMKIzYyMjogRklMRTogdGFyZ2V0L2kzODYvdGNnL3VzZXIvc2VnX2hlbHBlci5j
Ojc0OgorICAgIC8qIFNpbmNlIHdlIGVtdWxhdGUgb25seSB1c2VyIHNwYWNlLCB3ZSBjYW5ub3Qg
ZG8gbW9yZSB0aGFuCisgICAgICAgZXhpdGluZyB0aGUgZW11bGF0aW9uIHdpdGggdGhlIHN1aXRh
YmxlIGV4Y2VwdGlvbiBhbmQgZXJyb3IKCldBUk5JTkc6IEJsb2NrIGNvbW1lbnRzIHVzZSBhIHRy
YWlsaW5nICovIG9uIGEgc2VwYXJhdGUgbGluZQojNjIzOiBGSUxFOiB0YXJnZXQvaTM4Ni90Y2cv
dXNlci9zZWdfaGVscGVyLmM6NzU6CisgICAgICAgY29kZS4gU28gdXBkYXRlIEVJUCBmb3IgSU5U
IDB4ODAgYW5kIEVYQ1BfU1lTQ0FMTC4gKi8KCldBUk5JTkc6IEJsb2NrIGNvbW1lbnRzIHVzZSBh
IGxlYWRpbmcgLyogb24gYSBzZXBhcmF0ZSBsaW5lCiM2MzQ6IEZJTEU6IHRhcmdldC9pMzg2L3Rj
Zy91c2VyL3NlZ19oZWxwZXIuYzo4NjoKKyAgICAvKiBpZiB1c2VyIG1vZGUgb25seSwgd2Ugc2lt
dWxhdGUgYSBmYWtlIGV4Y2VwdGlvbgoKV0FSTklORzogQmxvY2sgY29tbWVudHMgdXNlICogb24g
c3Vic2VxdWVudCBsaW5lcwojNjM1OiBGSUxFOiB0YXJnZXQvaTM4Ni90Y2cvdXNlci9zZWdfaGVs
cGVyLmM6ODc6CisgICAgLyogaWYgdXNlciBtb2RlIG9ubHksIHdlIHNpbXVsYXRlIGEgZmFrZSBl
eGNlcHRpb24KKyAgICAgICB3aGljaCB3aWxsIGJlIGhhbmRsZWQgb3V0c2lkZSB0aGUgY3B1IGV4
ZWN1dGlvbgoKV0FSTklORzogQmxvY2sgY29tbWVudHMgdXNlIGEgdHJhaWxpbmcgKi8gb24gYSBz
ZXBhcmF0ZSBsaW5lCiM2MzY6IEZJTEU6IHRhcmdldC9pMzg2L3RjZy91c2VyL3NlZ19oZWxwZXIu
Yzo4ODoKKyAgICAgICBsb29wICovCgp0b3RhbDogMSBlcnJvcnMsIDcgd2FybmluZ3MsIDU5NSBs
aW5lcyBjaGVja2VkCgpQYXRjaCAxNi8yMCBoYXMgc3R5bGUgcHJvYmxlbXMsIHBsZWFzZSByZXZp
ZXcuICBJZiBhbnkgb2YgdGhlc2UgZXJyb3JzCmFyZSBmYWxzZSBwb3NpdGl2ZXMgcmVwb3J0IHRo
ZW0gdG8gdGhlIG1haW50YWluZXIsIHNlZQpDSEVDS1BBVENIIGluIE1BSU5UQUlORVJTLgoKMTcv
MjAgQ2hlY2tpbmcgY29tbWl0IDFlMGY3ZjAzMTE5ZSAoaTM4Njogc3BsaXQgb2ZmIHN5c2VtdSBw
YXJ0IG9mIGNwdS5jKQpVc2Ugb2YgdW5pbml0aWFsaXplZCB2YWx1ZSAkYWNwaV90ZXN0ZXhwZWN0
ZWQgaW4gc3RyaW5nIGVxIGF0IC4vc2NyaXB0cy9jaGVja3BhdGNoLnBsIGxpbmUgMTUyOS4KV0FS
TklORzogYWRkZWQsIG1vdmVkIG9yIGRlbGV0ZWQgZmlsZShzKSwgZG9lcyBNQUlOVEFJTkVSUyBu
ZWVkIHVwZGF0aW5nPwojMTg6IApuZXcgZmlsZSBtb2RlIDEwMDY0NAoKV0FSTklORzogQmxvY2sg
Y29tbWVudHMgdXNlIGEgbGVhZGluZyAvKiBvbiBhIHNlcGFyYXRlIGxpbmUKIzUyOiBGSUxFOiB0
YXJnZXQvaTM4Ni9jcHUtaW50ZXJuYWwuaDozMDoKKyAgICAvKiBmZWF0dXJlIGZsYWdzIG5hbWVz
IGFyZSB0YWtlbiBmcm9tICJJbnRlbCBQcm9jZXNzb3IgSWRlbnRpZmljYXRpb24gYW5kCgpXQVJO
SU5HOiBCbG9jayBjb21tZW50cyB1c2UgYSBsZWFkaW5nIC8qIG9uIGEgc2VwYXJhdGUgbGluZQoj
MTM1OiBGSUxFOiB0YXJnZXQvaTM4Ni9jcHUtc3lzZW11LmM6Mzc6CisvKiBSZXR1cm4gYSBRRGlj
dCBjb250YWluaW5nIGtleXMgZm9yIGFsbCBwcm9wZXJ0aWVzIHRoYXQgY2FuIGJlIGluY2x1ZGVk
CgpXQVJOSU5HOiBCbG9jayBjb21tZW50cyB1c2UgYSBsZWFkaW5nIC8qIG9uIGEgc2VwYXJhdGUg
bGluZQojMTg4OiBGSUxFOiB0YXJnZXQvaTM4Ni9jcHUtc3lzZW11LmM6OTA6CisvKiBDb252ZXJ0
IENQVSBtb2RlbCBkYXRhIGZyb20gWDg2Q1BVIG9iamVjdCB0byBhIHByb3BlcnR5IGRpY3Rpb25h
cnkKCldBUk5JTkc6IEJsb2NrIGNvbW1lbnRzIHVzZSBhIGxlYWRpbmcgLyogb24gYSBzZXBhcmF0
ZSBsaW5lCiMyMDI6IEZJTEU6IHRhcmdldC9pMzg2L2NwdS1zeXNlbXUuYzoxMDQ6CisvKiBDb252
ZXJ0IENQVSBtb2RlbCBkYXRhIGZyb20gWDg2Q1BVIG9iamVjdCB0byBhIHByb3BlcnR5IGRpY3Rp
b25hcnkKCldBUk5JTkc6IEJsb2NrIGNvbW1lbnRzIHVzZSBhIGxlYWRpbmcgLyogb24gYSBzZXBh
cmF0ZSBsaW5lCiMyMTg6IEZJTEU6IHRhcmdldC9pMzg2L2NwdS1zeXNlbXUuYzoxMjA6CisgICAg
ICAgIC8qICJob3RwbHVnZ2VkIiBpcyB0aGUgb25seSBwcm9wZXJ0eSB0aGF0IGlzIGNvbmZpZ3Vy
YWJsZQoKV0FSTklORzogQmxvY2sgY29tbWVudHMgdXNlIGEgbGVhZGluZyAvKiBvbiBhIHNlcGFy
YXRlIGxpbmUKIzMwODogRklMRTogdGFyZ2V0L2kzODYvY3B1LXN5c2VtdS5jOjIxMDoKKyAgICAg
ICAgLyogQXMgd2UgZG9uJ3QgcmV0dXJuIGV2ZXJ5IHNpbmdsZSBwcm9wZXJ0eSwgZnVsbCBleHBh
bnNpb24gbmVlZHMKCnRvdGFsOiAwIGVycm9ycywgNyB3YXJuaW5ncywgOTAxIGxpbmVzIGNoZWNr
ZWQKClBhdGNoIDE3LzIwIGhhcyBzdHlsZSBwcm9ibGVtcywgcGxlYXNlIHJldmlldy4gIElmIGFu
eSBvZiB0aGVzZSBlcnJvcnMKYXJlIGZhbHNlIHBvc2l0aXZlcyByZXBvcnQgdGhlbSB0byB0aGUg
bWFpbnRhaW5lciwgc2VlCkNIRUNLUEFUQ0ggaW4gTUFJTlRBSU5FUlMuCjE4LzIwIENoZWNraW5n
IGNvbW1pdCA3NTdiYmUwNGQ5NjYgKHRhcmdldC9pMzg2OiBnZGJzdHViOiBpbnRyb2R1Y2UgYXV4
IGZ1bmN0aW9ucyB0byByZWFkL3dyaXRlIENTNjQgcmVncykKV0FSTklORzogbGluZSBvdmVyIDgw
IGNoYXJhY3RlcnMKIzYyOiBGSUxFOiB0YXJnZXQvaTM4Ni9nZGJzdHViLmM6MTYzOgorICAgICAg
ICAgICAgcmV0dXJuIGdkYl9yZWFkX3JlZ19jczY0KGVudi0+aGZsYWdzLCBtZW1fYnVmLCBlbnYt
PnNlZ3NbUl9GU10uYmFzZSk7CgpXQVJOSU5HOiBsaW5lIG92ZXIgODAgY2hhcmFjdGVycwojNjg6
IEZJTEU6IHRhcmdldC9pMzg2L2dkYnN0dWIuYzoxNjU6CisgICAgICAgICAgICByZXR1cm4gZ2Ri
X3JlYWRfcmVnX2NzNjQoZW52LT5oZmxhZ3MsIG1lbV9idWYsIGVudi0+c2Vnc1tSX0dTXS5iYXNl
KTsKCldBUk5JTkc6IGxpbmUgb3ZlciA4MCBjaGFyYWN0ZXJzCiMxNTY6IEZJTEU6IHRhcmdldC9p
Mzg2L2dkYnN0dWIuYzozMTg6CisgICAgICAgICAgICByZXR1cm4gZ2RiX3dyaXRlX3JlZ19jczY0
KGVudi0+aGZsYWdzLCBtZW1fYnVmLCAmZW52LT5zZWdzW1JfRlNdLmJhc2UpOwoKV0FSTklORzog
bGluZSBvdmVyIDgwIGNoYXJhY3RlcnMKIzE2NTogRklMRTogdGFyZ2V0L2kzODYvZ2Ric3R1Yi5j
OjMyMDoKKyAgICAgICAgICAgIHJldHVybiBnZGJfd3JpdGVfcmVnX2NzNjQoZW52LT5oZmxhZ3Ms
IG1lbV9idWYsICZlbnYtPnNlZ3NbUl9HU10uYmFzZSk7Cgp0b3RhbDogMCBlcnJvcnMsIDQgd2Fy
bmluZ3MsIDIyMSBsaW5lcyBjaGVja2VkCgpQYXRjaCAxOC8yMCBoYXMgc3R5bGUgcHJvYmxlbXMs
IHBsZWFzZSByZXZpZXcuICBJZiBhbnkgb2YgdGhlc2UgZXJyb3JzCmFyZSBmYWxzZSBwb3NpdGl2
ZXMgcmVwb3J0IHRoZW0gdG8gdGhlIG1haW50YWluZXIsIHNlZQpDSEVDS1BBVENIIGluIE1BSU5U
QUlORVJTLgoxOS8yMCBDaGVja2luZyBjb21taXQgYWMwNTk4ZWE3OWZhICh0YXJnZXQvaTM4Njog
Z2Ric3R1Yjogb25seSB3cml0ZSBDUjAvQ1IyL0NSMy9FRkVSIGZvciBzeXNlbXUpCjIwLzIwIENo
ZWNraW5nIGNvbW1pdCAwMjk4OWNjNWFiMWUgKGkzODY6IG1ha2UgY3B1X2xvYWRfZWZlciBzeXNl
bXUtb25seSkKPT09IE9VVFBVVCBFTkQgPT09CgpUZXN0IGNvbW1hbmQgZXhpdGVkIHdpdGggY29k
ZTogMQoKClRoZSBmdWxsIGxvZyBpcyBhdmFpbGFibGUgYXQKaHR0cDovL3BhdGNoZXcub3JnL2xv
Z3MvMjAyMTAyMjYxNzUxNDMuMjIzODgtMS1jZm9udGFuYUBzdXNlLmRlL3Rlc3RpbmcuY2hlY2tw
YXRjaC8/dHlwZT1tZXNzYWdlLgotLS0KRW1haWwgZ2VuZXJhdGVkIGF1dG9tYXRpY2FsbHkgYnkg
UGF0Y2hldyBbaHR0cHM6Ly9wYXRjaGV3Lm9yZy9dLgpQbGVhc2Ugc2VuZCB5b3VyIGZlZWRiYWNr
IHRvIHBhdGNoZXctZGV2ZWxAcmVkaGF0LmNvbQ==

