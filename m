Return-Path: <qemu-devel-bounces+lists+qemu-devel=lfdr.de@nongnu.org>
X-Original-To: lists+qemu-devel@lfdr.de
Delivered-To: lists+qemu-devel@lfdr.de
Received: from lists.gnu.org (lists.gnu.org [209.51.188.17])
	by mail.lfdr.de (Postfix) with ESMTPS id 1EDBF6395AF
	for <lists+qemu-devel@lfdr.de>; Sat, 26 Nov 2022 12:17:20 +0100 (CET)
Received: from localhost ([::1] helo=lists1p.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.90_1)
	(envelope-from <qemu-devel-bounces@nongnu.org>)
	id 1oyt9r-0001mF-VG; Sat, 26 Nov 2022 06:15:43 -0500
Received: from eggs.gnu.org ([2001:470:142:3::10])
 by lists.gnu.org with esmtps (TLS1.2:ECDHE_RSA_AES_256_GCM_SHA384:256)
 (Exim 4.90_1) (envelope-from <maz@kernel.org>) id 1oyt9e-0001k2-TY
 for qemu-devel@nongnu.org; Sat, 26 Nov 2022 06:15:36 -0500
Received: from ams.source.kernel.org ([145.40.68.75])
 by eggs.gnu.org with esmtps (TLS1.2:ECDHE_RSA_AES_256_GCM_SHA384:256)
 (Exim 4.90_1) (envelope-from <maz@kernel.org>) id 1oyt9d-0000if-3x
 for qemu-devel@nongnu.org; Sat, 26 Nov 2022 06:15:30 -0500
Received: from smtp.kernel.org (relay.kernel.org [52.25.139.140])
 (using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
 (No client certificate requested)
 by ams.source.kernel.org (Postfix) with ESMTPS id 534B2B818C7;
 Sat, 26 Nov 2022 11:15:26 +0000 (UTC)
Received: by smtp.kernel.org (Postfix) with ESMTPSA id 1450BC433D6;
 Sat, 26 Nov 2022 11:15:25 +0000 (UTC)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=kernel.org;
 s=k20201202; t=1669461325;
 bh=CJAmRDS9cd6CrI/gMmLKX+4f1bK7TbWQc+x0LimLB8s=;
 h=Date:From:To:Cc:Subject:In-Reply-To:References:From;
 b=dZGzK9iz5nZTsy2Wy3E6c/ZT/64S/VEEkMa2Ca7SdtqkNHNHcnkQlTk/ZRRAtMoXE
 PAw1lfJpRyVa7/qFdBCOJqwozMIQiiNAj2SXtT+yvdx3os3KLHRo0rBZ9aviSxvoaT
 4IB5aBONrilTTGdQ8elQ1arAehG1UPMyS00Qmrh/tIwf3Fyn9IMWeLyIWr/TVSG3qS
 n9SAMIzksW2s21xXBpjcKJAg2gz2S3F0qbwcfDteJvNI45I61dev721560IaM0fR5H
 axCXc6PFkihRgyS3TMNcBTMTHOTPRk52ORxWVW1+kayo5hGbiqzbUWZhWLINtxct5P
 Jsblw5dPCEdiw==
Received: from sofa.misterjones.org ([185.219.108.64]
 helo=wait-a-minute.misterjones.org)
 by disco-boy.misterjones.org with esmtpsa (TLS1.3) tls
 TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384 (Exim 4.95)
 (envelope-from <maz@kernel.org>) id 1oyt9W-008hss-R0;
 Sat, 26 Nov 2022 11:15:22 +0000
Date: Sat, 26 Nov 2022 11:15:14 +0000
Message-ID: <871qpquful.wl-maz@kernel.org>
From: Marc Zyngier <maz@kernel.org>
To: Jason Gunthorpe <jgg@ziepe.ca>
Cc: chenxiang <chenxiang66@hisilicon.com>, alex.williamson@redhat.com,
 kvm@vger.kernel.org, qemu-devel@nongnu.org, linuxarm@huawei.com
Subject: Re: [PATCH v2] vfio/pci: Verify each MSI vector to avoid invalid MSI
 vectors
In-Reply-To: <Y3+xTLC0io6wvPpf@ziepe.ca>
References: <1669167756-196788-1-git-send-email-chenxiang66@hisilicon.com>
 <Y3+xTLC0io6wvPpf@ziepe.ca>
User-Agent: Wanderlust/2.15.9 (Almost Unreal) SEMI-EPG/1.14.7 (Harue)
 FLIM-LB/1.14.9 (=?UTF-8?B?R29qxY0=?=) APEL-LB/10.8 EasyPG/1.0.0 Emacs/27.1
 (x86_64-pc-linux-gnu) MULE/6.0 (HANACHIRUSATO)
MIME-Version: 1.0 (generated by SEMI-EPG 1.14.7 - "Harue")
Content-Type: text/plain; charset=US-ASCII
X-SA-Exim-Connect-IP: 185.219.108.64
X-SA-Exim-Rcpt-To: jgg@ziepe.ca, chenxiang66@hisilicon.com,
 alex.williamson@redhat.com, kvm@vger.kernel.org, qemu-devel@nongnu.org,
 linuxarm@huawei.com
X-SA-Exim-Mail-From: maz@kernel.org
X-SA-Exim-Scanned: No (on disco-boy.misterjones.org);
 SAEximRunCond expanded to false
Received-SPF: pass client-ip=145.40.68.75; envelope-from=maz@kernel.org;
 helo=ams.source.kernel.org
X-Spam_score_int: -70
X-Spam_score: -7.1
X-Spam_bar: -------
X-Spam_report: (-7.1 / 5.0 requ) BAYES_00=-1.9, DKIMWL_WL_HIGH=-0.001,
 DKIM_SIGNED=0.1, DKIM_VALID=-0.1, DKIM_VALID_AU=-0.1, DKIM_VALID_EF=-0.1,
 RCVD_IN_DNSWL_HI=-5, SPF_HELO_NONE=0.001,
 SPF_PASS=-0.001 autolearn=ham autolearn_force=no
X-Spam_action: no action
X-BeenThere: qemu-devel@nongnu.org
X-Mailman-Version: 2.1.29
Precedence: list
List-Id: <qemu-devel.nongnu.org>
List-Unsubscribe: <https://lists.nongnu.org/mailman/options/qemu-devel>,
 <mailto:qemu-devel-request@nongnu.org?subject=unsubscribe>
List-Archive: <https://lists.nongnu.org/archive/html/qemu-devel>
List-Post: <mailto:qemu-devel@nongnu.org>
List-Help: <mailto:qemu-devel-request@nongnu.org?subject=help>
List-Subscribe: <https://lists.nongnu.org/mailman/listinfo/qemu-devel>,
 <mailto:qemu-devel-request@nongnu.org?subject=subscribe>
Errors-To: qemu-devel-bounces+lists+qemu-devel=lfdr.de@nongnu.org
Sender: qemu-devel-bounces+lists+qemu-devel=lfdr.de@nongnu.org

On Thu, 24 Nov 2022 18:00:44 +0000,
Jason Gunthorpe <jgg@ziepe.ca> wrote:
> 
> On Wed, Nov 23, 2022 at 09:42:36AM +0800, chenxiang via wrote:
> > From: Xiang Chen <chenxiang66@hisilicon.com>
> > 
> > Currently the number of MSI vectors comes from register PCI_MSI_FLAGS
> > which should be power-of-2 in qemu, in some scenaries it is not the same as
> > the number that driver requires in guest, for example, a PCI driver wants
> > to allocate 6 MSI vecotrs in guest, but as the limitation, it will allocate
> > 8 MSI vectors. So it requires 8 MSI vectors in qemu while the driver in
> > guest only wants to allocate 6 MSI vectors.
> > 
> > When GICv4.1 is enabled, it iterates over all possible MSIs and enable the
> > forwarding while the guest has only created some of mappings in the virtual
> > ITS, so some calls fail. The exception print is as following:
> > vfio-pci 0000:3a:00.1: irq bypass producer (token 000000008f08224d) registration
> > fails:66311
> 
> With Thomas's series to make MSI more dynamic this could spell future
> problems, as future kernels might have different ordering.

Enabling MSIs on the endpoint before they are programmed in the
interrupt controller? I don't think that's a realistic outcome.

> It is just architecturally wrong to tie the MSI programming at the PCI
> level with the current state of the guest's virtual interrupt
> controller.

There is no architectural ties between the two at all. There is an
optimisation that allows direct injection if you do it in a non
braindead order. Nothing breaks if you don't, you just have wasted
memory, performance, power and area. You're welcome.

> Physical hardware doesn't do this, virtual emulation shouldn't either.

If you want to fix VFIO, be my guest. My rambling about the sorry
state of this has been in the kernel for 5 years (ed8703a506a8).

> People are taking too many liberties with trapping the PCI MSI
> registers through VFIO. :(

Do you really want to leave access to the MSI BAR to userspace? The
number of ways this can go wrong is mind-boggling. Starting with
having to rebuild the interrupt translation tables on the host side to
follow what the guest does, instead of keeping the two independent.

	M.

-- 
Without deviation from the norm, progress is not possible.

