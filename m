Return-Path: <qemu-devel-bounces+lists+qemu-devel=lfdr.de@nongnu.org>
X-Original-To: lists+qemu-devel@lfdr.de
Delivered-To: lists+qemu-devel@lfdr.de
Received: from lists.gnu.org (lists.gnu.org [209.51.188.17])
	by mail.lfdr.de (Postfix) with ESMTPS id F3087396BC6
	for <lists+qemu-devel@lfdr.de>; Tue,  1 Jun 2021 05:13:20 +0200 (CEST)
Received: from localhost ([::1]:60214 helo=lists1p.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.90_1)
	(envelope-from <qemu-devel-bounces+lists+qemu-devel=lfdr.de@nongnu.org>)
	id 1lnuqF-0005tf-Iz
	for lists+qemu-devel@lfdr.de; Mon, 31 May 2021 23:13:19 -0400
Received: from eggs.gnu.org ([2001:470:142:3::10]:56488)
 by lists.gnu.org with esmtps (TLS1.2:ECDHE_RSA_AES_256_GCM_SHA384:256)
 (Exim 4.90_1) (envelope-from <rpathak@ventanamicro.com>)
 id 1lnup2-0004cZ-A7
 for qemu-devel@nongnu.org; Mon, 31 May 2021 23:12:04 -0400
Received: from mail-ej1-x632.google.com ([2a00:1450:4864:20::632]:38442)
 by eggs.gnu.org with esmtps (TLS1.2:ECDHE_RSA_AES_128_GCM_SHA256:128)
 (Exim 4.90_1) (envelope-from <rpathak@ventanamicro.com>)
 id 1lnuoz-0006R8-KJ
 for qemu-devel@nongnu.org; Mon, 31 May 2021 23:12:04 -0400
Received: by mail-ej1-x632.google.com with SMTP id e18so3612590eje.5
 for <qemu-devel@nongnu.org>; Mon, 31 May 2021 20:12:01 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
 d=ventanamicro.com; s=google;
 h=mime-version:references:in-reply-to:from:date:message-id:subject:to
 :cc; bh=YHoGcv604MEnt1i7AD8ZF3IvmJgDN8PUju+++djWyAY=;
 b=UVjGweZAzkrQWTf9SZKfkHTlH2lTxK22PF7pm8D55nD0qLmOVUaFUSgcUqiPdRAm0g
 yg19qZV9pMDoowN5PfekGcXV+coVOiBKgcPw3dCwS1QJrFuBCkeCP51R5YcITnJgmQw+
 jAmRE319cbiCPPJh8uiQSlwIYoSAl+Ku0ZE7vnlN8Pb6yIX99nO6/zRNe1QGzf+sAFmf
 bWyp0MJXcV9uctOKa677JBxWO4duWz9xzlzr4j090i7dr4oWdaAkOxcRimNw1M5O5j6L
 FCIHvF2BHWlT2C0U8oXaDZH4KjJlVCrjE7Ur1V6zP5HsgO5pxv+ynh0PFG5nUa42AL2J
 AteA==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
 d=1e100.net; s=20161025;
 h=x-gm-message-state:mime-version:references:in-reply-to:from:date
 :message-id:subject:to:cc;
 bh=YHoGcv604MEnt1i7AD8ZF3IvmJgDN8PUju+++djWyAY=;
 b=f7lLMGAHpmvxyhTTXxefQjCI0u9DCWtpZzuMeEPzu+wydcNFnJrYGx7wWnmVn3Gvko
 Kel9w/xujkT6PGynzA1VoEZSa7E2mCRccWuBVWLMEVMBu7UFsYnCc8VJBZSdgM3zHYfY
 T9IOv7jxLbCCI2DWfk2CI1HSZv9BgGlxc8QtV0VHwcNRMr+aud6q7kzu4OqR5rFV6C0s
 AmOiuSgpVQ12vQyIPmKsiN1iZjNGaYnZmR4z2trU678TeBEM2PH3Xo7100s56rm/LohF
 Ug4N8vZWtwvr4d1EApu5aCIjzP9AmLDomKzYENnqMRa8F6kQuiibIKrSqp6cBbXoGk+h
 ZniA==
X-Gm-Message-State: AOAM531hphM9B8kG5K9PTrVbRhDsRVV/atnKesNbOhHenipV9fqln8n+
 L2ZLlv/VgbXBBrFC1pEY9gaFCbz3qttdBT9yN+eLrA==
X-Google-Smtp-Source: ABdhPJwWdO55ONpOurcEYPrHqgpDzKDpIC5O+OEGn183vefZhZCfsrcWe64acpP4ukIDGdHgLmtAyhMEkZuUPqCnK+M=
X-Received: by 2002:a17:906:2b8c:: with SMTP id
 m12mr25903368ejg.358.1622517119620; 
 Mon, 31 May 2021 20:11:59 -0700 (PDT)
MIME-Version: 1.0
References: <0CAA9018-0C42-4140-82C1-EAC80D46D359@getmailspring.com>
 <CAEUhbmWnj3GOD5-EA54XHRQyfiSdOsH+KKGH-+uG0LEH+kAuUg@mail.gmail.com>
 <CA+Oz1=Z4J8KCHk_TZTUB9aEODaRv0F3bF6jtCHwdKQ02VgjcTQ@mail.gmail.com>
 <CAMSwOgoq5KNoU3aP6kGZxAVhj_phxJvmCWb=6dKB7SkbXjaJyQ@mail.gmail.com>
 <CAEUhbmWCvPVo5Jww0GPb6uX0xBfRKqZD6Jp-e54sU+v6R=m3gQ@mail.gmail.com>
In-Reply-To: <CAEUhbmWCvPVo5Jww0GPb6uX0xBfRKqZD6Jp-e54sU+v6R=m3gQ@mail.gmail.com>
From: Rahul Pathak <rpathak@ventanamicro.com>
Date: Tue, 1 Jun 2021 08:41:22 +0530
Message-ID: <CA+Oz1=b=wBCCVVHWic8UrJQY5aEB+9OYS2XVtn6FEA2R6wm5yw@mail.gmail.com>
Subject: Re: HSS Issue with GCC 10, Qemu Setup for microchip-icicle-kit
To: Bin Meng <bmeng.cn@gmail.com>
Content-Type: multipart/alternative; boundary="0000000000008eaae205c3abb49f"
Received-SPF: pass client-ip=2a00:1450:4864:20::632;
 envelope-from=rpathak@ventanamicro.com; helo=mail-ej1-x632.google.com
X-Spam_score_int: 4
X-Spam_score: 0.4
X-Spam_bar: /
X-Spam_report: (0.4 / 5.0 requ) BAYES_00=-1.9, DKIM_SIGNED=0.1, DKIM_VALID=-0.1,
 DKIM_VALID_AU=-0.1, DKIM_VALID_EF=-0.1, HTML_MESSAGE=0.001,
 MANY_SPAN_IN_TEXT=2.497, RCVD_IN_DNSWL_NONE=-0.0001, SPF_HELO_NONE=0.001,
 SPF_PASS=-0.001 autolearn=no autolearn_force=no
X-Spam_action: no action
X-BeenThere: qemu-devel@nongnu.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: <qemu-devel.nongnu.org>
List-Unsubscribe: <https://lists.nongnu.org/mailman/options/qemu-devel>,
 <mailto:qemu-devel-request@nongnu.org?subject=unsubscribe>
List-Archive: <https://lists.nongnu.org/archive/html/qemu-devel>
List-Post: <mailto:qemu-devel@nongnu.org>
List-Help: <mailto:qemu-devel-request@nongnu.org?subject=help>
List-Subscribe: <https://lists.nongnu.org/mailman/listinfo/qemu-devel>,
 <mailto:qemu-devel-request@nongnu.org?subject=subscribe>
Cc: Alistair Francis <Alistair.Francis@wdc.com>,
 Rahul Pathak <rpathakmailbox@gmail.com>,
 "open list:RISC-V" <qemu-riscv@nongnu.org>,
 "qemu-devel@nongnu.org Developers" <qemu-devel@nongnu.org>
Errors-To: qemu-devel-bounces+lists+qemu-devel=lfdr.de@nongnu.org
Sender: "Qemu-devel" <qemu-devel-bounces+lists+qemu-devel=lfdr.de@nongnu.org>

--0000000000008eaae205c3abb49f
Content-Type: text/plain; charset="UTF-8"

Hi BIn,Alistair,

I was passing the hss.elf file and it was strange that gdb after connecting
was not letting the target to continue from gdb.
what worked was to not pass anything and then connect the to target then
load the symbol file as hss.elf.
I followed the steps from the "Attaching the GDB" doc and was able to debug.


For the qemu command line from the doc, I made the "wait=off" then qemu was
not waiting for another serial connection
and launched the hss.


The problem remains is that I still do not have the u-boot and linux
booting. The unix\#serial1.sock remains offline always.
These are the HSS logs -

[0.115001] HSS_E51_Banner(): PolarFire(R) SoC Hart Software Services (HSS)
- version 0.99.15

(c) Copyright 2017-2020 Microchip Corporation.





[0.116234] HSS_E51_Banner(): incorporating OpenSBI - version 0.6


(c) Copyright 2019-2020 Western Digital Corporation.





[0.117071] HSS_PrintBuildId(): Build ID:
811342a39f80176f9e2086bf963a83224b3d3a2e

[0.117817] HSS_PrintToolVersions(): Built with the following tools:


 - riscv64-unknown-linux-gnu-gcc (GCC) 10.2.0


 - GNU ld (GNU Binutils) 2.36.1





[0.118760] HSS_MemTestDDRFast(): DDR size is 1 GiB


[0.130270] HSS_MMCInit(): Attempting to select SDCARD ... Passed


Press a key to enter CLI, ESC to skip


Timeout in 5 seconds

.....


[5.138747] HSS_TinyCLI_Parser(): CLI check timeout


[5.139371] IPI_QueuesInit(): Initializing IPI Queues (9000 bytes @
8000e40)...
[5.140435] HSS_PMP_Init(): Initializing PMPs


[5.141093] HSS_BootInit(): Initializing Boot Image..


[5.141787] getBootImageFromMMC_(): Preparing to copy from MMC to DDR ...


[5.142671] getBootImageFromMMC_(): Attempting to read image header (1552
bytes) ...

[5.144118] GPT_ValidateHeader(): Validated GPT Header ...


[5.153768] GPT_ValidatePartitionEntries(): Validated GPT Partition Entries
...

[5.155210] copyBootImageToDDR_(): Copying 436008 bytes to 0xA0000000


[5.407848] copyBootImageToDDR_(): Calculated CRC32 of image in DDR is
795fbbea

[5.412058] HSS_BootInit():  boot image passed CRC


[5.412407] HSS_BootInit(): Boot image set name: "PolarFire-SoC-HSS::U-Boot"


[5.412951] HSS_BootInit(): Boot Image registered...


[5.413376] HSS_Boot_RestartCore(): called for all harts


[5.414295] RunStateMachine(): boot_service(u54_1)::Init ->
boot_service(u54_1)::SetupPMP
[5.414812] RunStateMachine(): boot_service(u54_2)::Init ->
boot_service(u54_2)::SetupPMP

[5.415207] RunStateMachine(): boot_service(u54_3)::Init ->
boot_service(u54_3)::SetupPMP
[5.415631] RunStateMachine(): boot_service(u54_4)::Init ->
boot_service(u54_4)::SetupPMP

[5.416107] RunStateMachine(): usbdmsc_service::init ->
usbdmsc_service::idle

[5.417164] RunStateMachine(): boot_service(u54_1)::SetupPMP ->
boot_service(u54_1)::SetupPMPComplete

[5.417887] RunStateMachine(): boot_service(u54_2)::SetupPMP ->
boot_service(u54_2)::SetupPMPComplete

[5.418552] RunStateMachine(): boot_service(u54_3)::SetupPMP ->
boot_service(u54_3)::SetupPMPComplete

[5.419890] RunStateMachine(): boot_service(u54_4)::SetupPMP ->
boot_service(u54_4)::SetupPMPComplete
[23.955147] RunStateMachine(): boot_service(u54_1)::SetupPMPComplete ->
boot_service(u54_1)::ZeroInit
[23.955754] RunStateMachine(): boot_service(u54_2)::SetupPMPComplete ->
boot_service(u54_2)::ZeroInit
[23.956259] RunStateMachine(): boot_service(u54_3)::SetupPMPComplete ->
boot_service(u54_3)::ZeroInit
[23.956757] RunStateMachine(): boot_service(u54_4)::SetupPMPComplete ->
boot_service(u54_4)::ZeroInit
[23.957371] RunStateMachine(): boot_service(u54_1)::ZeroInit ->
boot_service(u54_1)::Download
[23.957876] RunStateMachine(): boot_service(u54_2)::ZeroInit ->
boot_service(u54_2)::Download
[23.958386] RunStateMachine(): boot_service(u54_3)::ZeroInit ->
boot_service(u54_3)::Download
[23.958856] RunStateMachine(): boot_service(u54_4)::ZeroInit ->
boot_service(u54_4)::Download
[23.960300] RunStateMachine(): boot_service(u54_2)::Download ->
boot_service(u54_2)::Idle
[23.960723] RunStateMachine(): boot_service(u54_3)::Download ->
boot_service(u54_3)::Idle
[23.961129] RunStateMachine(): boot_service(u54_4)::Download ->
boot_service(u54_4)::Idle
[23.983168] RunStateMachine(): boot_service(u54_1)::Download ->
boot_service(u54_1)::Wait
[23.983661] boot_download_chunks_onExit():
boot_service(u54_1)::u54_2:sbi_init 80200000
[23.984374] boot_download_chunks_onExit():
boot_service(u54_1)::u54_3:sbi_init 80200000
[23.985418] boot_download_chunks_onExit():
boot_service(u54_1)::u54_4:sbi_init 80200000
[23.986783] boot_download_chunks_onExit():
boot_service(u54_1)::u54_1:sbi_init 80200000
[23.989086] boot_wait_onEntry(): boot_service(u54_1)::Checking for IPI
ACKs: - -
[23.992106] boot_wait_handler(): boot_service(u54_1)::Checking for IPI
ACKs: ACK/IDLE ACK
[23.994062] RunStateMachine(): boot_service(u54_1)::Wait ->
boot_service(u54_1)::Idle


One thing I overlooked in the document is that we are preparing the *.wic
file after downloading
but passing the *.img in the qemu command. How to convert the wic to img. I
couldn't see much about
this on the internet ?
Since U-boot currently does not boot, it seems passing the wic file
directly is not right. Now sure here.

 qemu-system-riscv64 -M microchip-icicle-kit -smp 5 \
    -bios path/to/hss.bin -sd path/to/sdcard.img \
    -nic user,model=cadence_gem \
    -nic tap,ifname=tap,model=cadence_gem,script=no \
    -display none -serial stdio \
    -chardev socket,id=serial1,path=serial1.sock,server=on,wait=on \
    -serial chardev:serial1


Are there other ways in qemu icicle machine supported now to pass the
u-boot and kernel?

Thanks
Rahul



On Tue, Jun 1, 2021 at 8:06 AM Bin Meng <bmeng.cn@gmail.com> wrote:

> Hi Rahul,
>
> On Mon, May 31, 2021 at 10:43 PM Rahul Pathak <rpathakmailbox@gmail.com>
> wrote:
> >
> > On top of that, it seems I cannot connect with the target using gdb
> >
> > (gdb) target remote :1234
> > Remote debugging using :1234
> > bfd requires flen 8, but target has flen 0
> >
> > Though the ABI is lp64 and ISA is rv64imac when the hss was built.
> >
>
> Did you feed gdb the image you wanted to debug before "target remote:"?
>
> The PolarFire SoC has 1+4 HARTs and you should follow the instructions
> @ https://wiki.qemu.org/Documentation/Platforms/RISCV#Attaching_GDB to
> do the debug.
>
> Regards,
> Bin
>

--0000000000008eaae205c3abb49f
Content-Type: text/html; charset="UTF-8"
Content-Transfer-Encoding: base64

PGRpdiBkaXI9Imx0ciI+PGRpdiBjbGFzcz0iZ21haWxfZGVmYXVsdCIgc3R5bGU9IiI+PGZvbnQg
ZmFjZT0idmVyZGFuYSwgc2Fucy1zZXJpZiI+SGkgQkluLEFsaXN0YWlyLDwvZm9udD48ZGl2IHN0
eWxlPSJmb250LWZhbWlseTp2ZXJkYW5hLHNhbnMtc2VyaWYiPjxicj48L2Rpdj48ZGl2IHN0eWxl
PSJmb250LWZhbWlseTp2ZXJkYW5hLHNhbnMtc2VyaWYiPkkgd2FzIHBhc3NpbmcgdGhlIGhzcy5l
bGYgZmlsZSBhbmQgaXQgd2FzIHN0cmFuZ2UgdGhhdCBnZGIgYWZ0ZXIgY29ubmVjdGluZyB3YXMg
bm90IGxldHRpbmcgdGhlIHRhcmdldCB0byBjb250aW51ZSBmcm9tIGdkYi48L2Rpdj48ZGl2IHN0
eWxlPSJmb250LWZhbWlseTp2ZXJkYW5hLHNhbnMtc2VyaWYiPndoYXQgd29ya2VkIHdhcyB0b8Kg
bm90wqBwYXNzIGFueXRoaW5nIGFuZCB0aGVuIGNvbm5lY3QgdGhlIHRvIHRhcmdldCB0aGVuIGxv
YWQgdGhlIHN5bWJvbCBmaWxlIGFzIGhzcy5lbGYuPC9kaXY+PGRpdiBzdHlsZT0iZm9udC1mYW1p
bHk6dmVyZGFuYSxzYW5zLXNlcmlmIj5JIGZvbGxvd2VkIHRoZSBzdGVwcyBmcm9tIHRoZSAmcXVv
dDtBdHRhY2hpbmcgdGhlIEdEQiZxdW90OyBkb2MgYW5kIHdhcyBhYmxlIHRvIGRlYnVnLjwvZGl2
PjxkaXYgc3R5bGU9ImZvbnQtZmFtaWx5OnZlcmRhbmEsc2Fucy1zZXJpZiI+PGJyPjwvZGl2Pjxk
aXYgc3R5bGU9ImZvbnQtZmFtaWx5OnZlcmRhbmEsc2Fucy1zZXJpZiI+PGJyPjwvZGl2PjxkaXYg
c3R5bGU9ImZvbnQtZmFtaWx5OnZlcmRhbmEsc2Fucy1zZXJpZiI+Rm9yIHRoZSBxZW11IGNvbW1h
bmQgbGluZSBmcm9tIHRoZSBkb2MsIEkgbWFkZSB0aGUgJnF1b3Q7d2FpdD1vZmYmcXVvdDsgdGhl
biBxZW11IHdhcyBub3Qgd2FpdGluZyBmb3IgYW5vdGhlciBzZXJpYWwgY29ubmVjdGlvbjwvZGl2
PjxkaXYgc3R5bGU9ImZvbnQtZmFtaWx5OnZlcmRhbmEsc2Fucy1zZXJpZiI+YW5kIGxhdW5jaGVk
IHRoZSBoc3MuPC9kaXY+PGRpdiBzdHlsZT0iZm9udC1mYW1pbHk6dmVyZGFuYSxzYW5zLXNlcmlm
Ij48YnI+PC9kaXY+PGRpdiBzdHlsZT0iZm9udC1mYW1pbHk6dmVyZGFuYSxzYW5zLXNlcmlmIj48
YnI+PC9kaXY+PGRpdiBzdHlsZT0iZm9udC1mYW1pbHk6dmVyZGFuYSxzYW5zLXNlcmlmIj5UaGUg
cHJvYmxlbSByZW1haW5zIGlzIHRoYXQgSSBzdGlsbCBkbyBub3QgaGF2ZSB0aGUgdS1ib290IGFu
ZCBsaW51eCBib290aW5nLiBUaGUgdW5peFwjc2VyaWFsMS5zb2NrIHJlbWFpbnMgb2ZmbGluZSBh
bHdheXMuPC9kaXY+PGRpdiBzdHlsZT0iZm9udC1mYW1pbHk6dmVyZGFuYSxzYW5zLXNlcmlmIj5U
aGVzZSBhcmUgdGhlIEhTUyBsb2dzIC08L2Rpdj48ZGl2IHN0eWxlPSJmb250LWZhbWlseTp2ZXJk
YW5hLHNhbnMtc2VyaWYiPjxicj48L2Rpdj48ZGl2IHN0eWxlPSJmb250LWZhbWlseTp2ZXJkYW5h
LHNhbnMtc2VyaWYiPjxmb250IGZhY2U9Im1vbm9zcGFjZSIgc2l6ZT0iMSI+WzAuMTE1MDAxXSBI
U1NfRTUxX0Jhbm5lcigpOiBQb2xhckZpcmUoUikgU29DIEhhcnQgU29mdHdhcmUgU2VydmljZXMg
KEhTUykgLSB2ZXJzaW9uIDAuOTkuMTUgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAg
wqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAg
wqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqA8YnI+KGMpIENvcHlyaWdodCAyMDE3LTIw
MjAgTWljcm9jaGlwIENvcnBvcmF0aW9uLiDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDC
oCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDC
oCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDC
oCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoDxicj7CoCDCoCDC
oCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDC
oCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDC
oCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDC
oCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDC
oCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCA8YnI+WzAuMTE2MjM0XSBIU1NfRTUxX0Jhbm5lcigp
OiBpbmNvcnBvcmF0aW5nIE9wZW5TQkkgLSB2ZXJzaW9uIDAuNiDCoCDCoCDCoCDCoCDCoCDCoCDC
oCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDC
oCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDC
oCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoDxicj4oYykgQ29weXJpZ2h0IDIwMTktMjAy
MCBXZXN0ZXJuIERpZ2l0YWwgQ29ycG9yYXRpb24uIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKg
IMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKg
IMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKg
IMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgPGJyPsKgIMKgIMKgIMKg
IMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKg
IMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKg
IMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKg
IMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKg
IMKgIMKgIMKgIMKgIMKgIMKgIMKgIDxicj5bMC4xMTcwNzFdIEhTU19QcmludEJ1aWxkSWQoKTog
QnVpbGQgSUQ6IDgxMTM0MmEzOWY4MDE3NmY5ZTIwODZiZjk2M2E4MzIyNGIzZDNhMmUgwqAgwqAg
wqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAg
wqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAg
wqAgwqAgwqAgwqAgwqAgwqAgPGJyPlswLjExNzgxN10gSFNTX1ByaW50VG9vbFZlcnNpb25zKCk6
IEJ1aWx0IHdpdGggdGhlIGZvbGxvd2luZyB0b29sczogwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAg
wqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAg
wqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAg
wqAgwqAgwqAgwqAgwqAgwqAgwqAgPGJyPsKgLSByaXNjdjY0LXVua25vd24tbGludXgtZ251LWdj
YyAoR0NDKSAxMC4yLjAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAg
wqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAg
wqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAg
wqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgPGJyPsKgLSBHTlUgbGQgKEdOVSBC
aW51dGlscykgMi4zNi4xIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKg
IMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKg
IMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKg
IMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKg
IDxicj7CoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDC
oCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDC
oCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDC
oCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDC
oCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCA8YnI+WzAuMTE4NzYwXSBIU1Nf
TWVtVGVzdEREUkZhc3QoKTogRERSIHNpemUgaXMgMSBHaUIgwqAgwqAgwqAgwqAgwqAgwqAgwqAg
wqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAg
wqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAg
wqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqA8YnI+WzAu
MTMwMjcwXSBIU1NfTU1DSW5pdCgpOiBBdHRlbXB0aW5nIHRvIHNlbGVjdCBTRENBUkQgLi4uIFBh
c3NlZCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDC
oCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDC
oCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoDxi
cj5QcmVzcyBhIGtleSB0byBlbnRlciBDTEksIEVTQyB0byBza2lwIMKgIMKgIMKgIMKgIMKgIMKg
IMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKg
IMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKg
IMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKg
IMKgIMKgIMKgIMKgIMKgIDxicj5UaW1lb3V0IGluIDUgc2Vjb25kcyDCoCA8YnI+PGJyPi4uLi4u
IMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKg
IMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKg
IMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKg
IMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKg
IMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIDxicj5bNS4xMzg3NDddIEhTU19UaW55Q0xJX1BhcnNl
cigpOiBDTEkgY2hlY2sgdGltZW91dCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDC
oCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDC
oCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDC
oCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoDxicj5bNS4xMzkzNzFdIElQSV9R
dWV1ZXNJbml0KCk6IEluaXRpYWxpemluZyBJUEkgUXVldWVzICg5MDAwIGJ5dGVzIEAgODAwMGU0
MCkuLi48YnI+WzUuMTQwNDM1XSBIU1NfUE1QX0luaXQoKTogSW5pdGlhbGl6aW5nIFBNUHMgwqAg
wqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAg
wqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAg
wqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAg
wqAgwqAgwqAgwqAgwqAgwqAgwqA8YnI+WzUuMTQxMDkzXSBIU1NfQm9vdEluaXQoKTogSW5pdGlh
bGl6aW5nIEJvb3QgSW1hZ2UuLiDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDC
oCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDC
oCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDC
oCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoDxicj5bNS4xNDE3ODddIGdldEJvb3RJbWFn
ZUZyb21NTUNfKCk6IFByZXBhcmluZyB0byBjb3B5IGZyb20gTU1DIHRvIEREUiAuLi4gwqAgwqAg
wqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAg
wqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAg
wqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqA8YnI+WzUuMTQyNjcxXSBnZXRCb290SW1h
Z2VGcm9tTU1DXygpOiBBdHRlbXB0aW5nIHRvIHJlYWQgaW1hZ2UgaGVhZGVyICgxNTUyIGJ5dGVz
KSAuLi4gwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAg
wqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAg
wqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgPGJyPls1LjE0NDExOF0gR1BUX1ZhbGlkYXRlSGVh
ZGVyKCk6IFZhbGlkYXRlZCBHUFQgSGVhZGVyIC4uLiDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDC
oCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDC
oCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDC
oCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCA8YnI+WzUuMTUzNzY4XSBHUFRfVmFs
aWRhdGVQYXJ0aXRpb25FbnRyaWVzKCk6IFZhbGlkYXRlZCBHUFQgUGFydGl0aW9uIEVudHJpZXMg
Li4uIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKg
IMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKg
IMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgPGJyPls1LjE1NTIxMF0gY29weUJvb3RJ
bWFnZVRvRERSXygpOiBDb3B5aW5nIDQzNjAwOCBieXRlcyB0byAweEEwMDAwMDAwIMKgIMKgIMKg
IMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKg
IMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKg
IMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgPGJyPls1LjQwNzg0OF0gY29weUJv
b3RJbWFnZVRvRERSXygpOiBDYWxjdWxhdGVkIENSQzMyIG9mIGltYWdlIGluIEREUiBpcyA3OTVm
YmJlYSDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDC
oCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDC
oCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoDxicj5bNS40MTIwNThdIEhTU19Cb290
SW5pdCgpOiDCoGJvb3QgaW1hZ2UgcGFzc2VkIENSQyDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDC
oCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDC
oCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDC
oCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCA8YnI+WzUuNDEy
NDA3XSBIU1NfQm9vdEluaXQoKTogQm9vdCBpbWFnZSBzZXQgbmFtZTogJnF1b3Q7UG9sYXJGaXJl
LVNvQy1IU1M6OlUtQm9vdCZxdW90OyDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDC
oCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDC
oCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCA8
YnI+WzUuNDEyOTUxXSBIU1NfQm9vdEluaXQoKTogQm9vdCBJbWFnZSByZWdpc3RlcmVkLi4uIMKg
IMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKg
IMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKg
IMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKg
IMKgIMKgIMKgIDxicj5bNS40MTMzNzZdIEhTU19Cb290X1Jlc3RhcnRDb3JlKCk6IGNhbGxlZCBm
b3IgYWxsIGhhcnRzIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKg
IMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKg
IMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKg
IMKgIMKgIMKgIMKgIMKgIMKgIDxicj5bNS40MTQyOTVdIFJ1blN0YXRlTWFjaGluZSgpOiBib290
X3NlcnZpY2UodTU0XzEpOjpJbml0IC0mZ3Q7IGJvb3Rfc2VydmljZSh1NTRfMSk6OlNldHVwUE1Q
PGJyPls1LjQxNDgxMl0gUnVuU3RhdGVNYWNoaW5lKCk6IGJvb3Rfc2VydmljZSh1NTRfMik6Oklu
aXQgLSZndDsgYm9vdF9zZXJ2aWNlKHU1NF8yKTo6U2V0dXBQTVAgwqAgwqAgwqAgwqAgwqAgwqAg
wqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAg
wqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqA8YnI+
WzUuNDE1MjA3XSBSdW5TdGF0ZU1hY2hpbmUoKTogYm9vdF9zZXJ2aWNlKHU1NF8zKTo6SW5pdCAt
Jmd0OyBib290X3NlcnZpY2UodTU0XzMpOjpTZXR1cFBNUDxicj5bNS40MTU2MzFdIFJ1blN0YXRl
TWFjaGluZSgpOiBib290X3NlcnZpY2UodTU0XzQpOjpJbml0IC0mZ3Q7IGJvb3Rfc2VydmljZSh1
NTRfNCk6OlNldHVwUE1QIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKg
IMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKg
IMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgPGJyPls1LjQxNjEwN10gUnVuU3RhdGVNYWNo
aW5lKCk6IHVzYmRtc2Nfc2VydmljZTo6aW5pdCAtJmd0OyB1c2JkbXNjX3NlcnZpY2U6OmlkbGUg
wqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAg
wqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAg
wqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqA8YnI+WzUuNDE3MTY0XSBSdW5TdGF0ZU1h
Y2hpbmUoKTogYm9vdF9zZXJ2aWNlKHU1NF8xKTo6U2V0dXBQTVAgLSZndDsgYm9vdF9zZXJ2aWNl
KHU1NF8xKTo6U2V0dXBQTVBDb21wbGV0ZSDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDC
oCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDC
oCDCoCDCoCDCoCDCoCDCoCDCoCDCoDxicj5bNS40MTc4ODddIFJ1blN0YXRlTWFjaGluZSgpOiBi
b290X3NlcnZpY2UodTU0XzIpOjpTZXR1cFBNUCAtJmd0OyBib290X3NlcnZpY2UodTU0XzIpOjpT
ZXR1cFBNUENvbXBsZXRlIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKg
IMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKg
IMKgIMKgIMKgIMKgPGJyPls1LjQxODU1Ml0gUnVuU3RhdGVNYWNoaW5lKCk6IGJvb3Rfc2Vydmlj
ZSh1NTRfMyk6OlNldHVwUE1QIC0mZ3Q7IGJvb3Rfc2VydmljZSh1NTRfMyk6OlNldHVwUE1QQ29t
cGxldGUgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAg
wqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAg
wqA8YnI+WzUuNDE5ODkwXSBSdW5TdGF0ZU1hY2hpbmUoKTogYm9vdF9zZXJ2aWNlKHU1NF80KTo6
U2V0dXBQTVAgLSZndDsgYm9vdF9zZXJ2aWNlKHU1NF80KTo6U2V0dXBQTVBDb21wbGV0ZTxicj5b
MjMuOTU1MTQ3XSBSdW5TdGF0ZU1hY2hpbmUoKTogYm9vdF9zZXJ2aWNlKHU1NF8xKTo6U2V0dXBQ
TVBDb21wbGV0ZSAtJmd0OyBib290X3NlcnZpY2UodTU0XzEpOjpaZXJvSW5pdDxicj5bMjMuOTU1
NzU0XSBSdW5TdGF0ZU1hY2hpbmUoKTogYm9vdF9zZXJ2aWNlKHU1NF8yKTo6U2V0dXBQTVBDb21w
bGV0ZSAtJmd0OyBib290X3NlcnZpY2UodTU0XzIpOjpaZXJvSW5pdDxicj5bMjMuOTU2MjU5XSBS
dW5TdGF0ZU1hY2hpbmUoKTogYm9vdF9zZXJ2aWNlKHU1NF8zKTo6U2V0dXBQTVBDb21wbGV0ZSAt
Jmd0OyBib290X3NlcnZpY2UodTU0XzMpOjpaZXJvSW5pdDxicj5bMjMuOTU2NzU3XSBSdW5TdGF0
ZU1hY2hpbmUoKTogYm9vdF9zZXJ2aWNlKHU1NF80KTo6U2V0dXBQTVBDb21wbGV0ZSAtJmd0OyBi
b290X3NlcnZpY2UodTU0XzQpOjpaZXJvSW5pdDxicj5bMjMuOTU3MzcxXSBSdW5TdGF0ZU1hY2hp
bmUoKTogYm9vdF9zZXJ2aWNlKHU1NF8xKTo6WmVyb0luaXQgLSZndDsgYm9vdF9zZXJ2aWNlKHU1
NF8xKTo6RG93bmxvYWQ8YnI+WzIzLjk1Nzg3Nl0gUnVuU3RhdGVNYWNoaW5lKCk6IGJvb3Rfc2Vy
dmljZSh1NTRfMik6Olplcm9Jbml0IC0mZ3Q7IGJvb3Rfc2VydmljZSh1NTRfMik6OkRvd25sb2Fk
PGJyPlsyMy45NTgzODZdIFJ1blN0YXRlTWFjaGluZSgpOiBib290X3NlcnZpY2UodTU0XzMpOjpa
ZXJvSW5pdCAtJmd0OyBib290X3NlcnZpY2UodTU0XzMpOjpEb3dubG9hZDxicj5bMjMuOTU4ODU2
XSBSdW5TdGF0ZU1hY2hpbmUoKTogYm9vdF9zZXJ2aWNlKHU1NF80KTo6WmVyb0luaXQgLSZndDsg
Ym9vdF9zZXJ2aWNlKHU1NF80KTo6RG93bmxvYWQ8YnI+WzIzLjk2MDMwMF0gUnVuU3RhdGVNYWNo
aW5lKCk6IGJvb3Rfc2VydmljZSh1NTRfMik6OkRvd25sb2FkIC0mZ3Q7IGJvb3Rfc2VydmljZSh1
NTRfMik6OklkbGU8YnI+WzIzLjk2MDcyM10gUnVuU3RhdGVNYWNoaW5lKCk6IGJvb3Rfc2Vydmlj
ZSh1NTRfMyk6OkRvd25sb2FkIC0mZ3Q7IGJvb3Rfc2VydmljZSh1NTRfMyk6OklkbGU8YnI+WzIz
Ljk2MTEyOV0gUnVuU3RhdGVNYWNoaW5lKCk6IGJvb3Rfc2VydmljZSh1NTRfNCk6OkRvd25sb2Fk
IC0mZ3Q7IGJvb3Rfc2VydmljZSh1NTRfNCk6OklkbGU8YnI+WzIzLjk4MzE2OF0gUnVuU3RhdGVN
YWNoaW5lKCk6IGJvb3Rfc2VydmljZSh1NTRfMSk6OkRvd25sb2FkIC0mZ3Q7IGJvb3Rfc2Vydmlj
ZSh1NTRfMSk6OldhaXQ8YnI+WzIzLjk4MzY2MV0gYm9vdF9kb3dubG9hZF9jaHVua3Nfb25FeGl0
KCk6IGJvb3Rfc2VydmljZSh1NTRfMSk6OnU1NF8yOnNiaV9pbml0IDgwMjAwMDAwPGJyPlsyMy45
ODQzNzRdIGJvb3RfZG93bmxvYWRfY2h1bmtzX29uRXhpdCgpOiBib290X3NlcnZpY2UodTU0XzEp
Ojp1NTRfMzpzYmlfaW5pdCA4MDIwMDAwMDxicj5bMjMuOTg1NDE4XSBib290X2Rvd25sb2FkX2No
dW5rc19vbkV4aXQoKTogYm9vdF9zZXJ2aWNlKHU1NF8xKTo6dTU0XzQ6c2JpX2luaXQgODAyMDAw
MDA8YnI+WzIzLjk4Njc4M10gYm9vdF9kb3dubG9hZF9jaHVua3Nfb25FeGl0KCk6IGJvb3Rfc2Vy
dmljZSh1NTRfMSk6OnU1NF8xOnNiaV9pbml0IDgwMjAwMDAwPGJyPlsyMy45ODkwODZdIGJvb3Rf
d2FpdF9vbkVudHJ5KCk6IGJvb3Rfc2VydmljZSh1NTRfMSk6OkNoZWNraW5nIGZvciBJUEkgQUNL
czogLSAtPGJyPlsyMy45OTIxMDZdIGJvb3Rfd2FpdF9oYW5kbGVyKCk6IGJvb3Rfc2VydmljZSh1
NTRfMSk6OkNoZWNraW5nIGZvciBJUEkgQUNLczogQUNLL0lETEUgQUNLPGJyPlsyMy45OTQwNjJd
IFJ1blN0YXRlTWFjaGluZSgpOiBib290X3NlcnZpY2UodTU0XzEpOjpXYWl0IC0mZ3Q7IGJvb3Rf
c2VydmljZSh1NTRfMSk6OklkbGU8L2ZvbnQ+PGJyPjwvZGl2PjxkaXYgc3R5bGU9ImZvbnQtZmFt
aWx5OnZlcmRhbmEsc2Fucy1zZXJpZiI+PGJyPjwvZGl2PjxkaXYgc3R5bGU9ImZvbnQtZmFtaWx5
OnZlcmRhbmEsc2Fucy1zZXJpZiI+PGJyPjwvZGl2PjxkaXYgc3R5bGU9ImZvbnQtZmFtaWx5OnZl
cmRhbmEsc2Fucy1zZXJpZiI+T25lIHRoaW5nIEkgb3Zlcmxvb2tlZCBpbiB0aGUgZG9jdW1lbnQg
aXMgdGhhdCB3ZSBhcmUgcHJlcGFyaW5nIHRoZSAqLndpYyBmaWxlIGFmdGVyIGRvd25sb2FkaW5n
wqA8L2Rpdj48ZGl2IHN0eWxlPSJmb250LWZhbWlseTp2ZXJkYW5hLHNhbnMtc2VyaWYiPmJ1dCBw
YXNzaW5nIHRoZSAqLmltZyBpbiB0aGUgcWVtdSBjb21tYW5kLiBIb3cgdG8gY29udmVydCB0aGUg
d2ljIHRvIGltZy4gSSBjb3VsZG4mIzM5O3TCoHNlZSBtdWNoIGFib3V0wqA8L2Rpdj48ZGl2IHN0
eWxlPSJmb250LWZhbWlseTp2ZXJkYW5hLHNhbnMtc2VyaWYiPnRoaXMgb24gdGhlIGludGVybmV0
ID88L2Rpdj48ZGl2IHN0eWxlPSJmb250LWZhbWlseTp2ZXJkYW5hLHNhbnMtc2VyaWYiPlNpbmNl
IFUtYm9vdCBjdXJyZW50bHkgZG9lcyBub3QgYm9vdCwgaXQgc2VlbXMgcGFzc2luZyB0aGUgd2lj
IGZpbGUgZGlyZWN0bHkgaXMgbm90IHJpZ2h0LiBOb3cgc3VyZSBoZXJlLjwvZGl2PjxkaXYgc3R5
bGU9ImZvbnQtZmFtaWx5OnZlcmRhbmEsc2Fucy1zZXJpZiI+PGJyPjwvZGl2PjxkaXYgc3R5bGU9
ImZvbnQtZmFtaWx5OnZlcmRhbmEsc2Fucy1zZXJpZiI+PHByZSBzdHlsZT0iYm94LXNpemluZzpi
b3JkZXItYm94O2ZvbnQtZmFtaWx5OlNGTW9uby1SZWd1bGFyLE1lbmxvLE1vbmFjbyxDb25zb2xh
cywmcXVvdDtMaWJlcmF0aW9uIE1vbm8mcXVvdDssJnF1b3Q7Q291cmllciBOZXcmcXVvdDssQ291
cmllcixtb25vc3BhY2U7Zm9udC1zaXplOjEycHg7Y29sb3I6cmdiKDAsMCwwKTtsaW5lLWhlaWdo
dDoxLjQ7bWFyZ2luLXRvcDowcHg7bWFyZ2luLWJvdHRvbTowcHg7cGFkZGluZzoxMnB4O292ZXJm
bG93OmF1dG8iPiBxZW11LXN5c3RlbS1yaXNjdjY0IC1NIG1pY3JvY2hpcC1pY2ljbGUta2l0IC1z
bXAgPHNwYW4gY2xhc3M9ImdtYWlsLW0iIHN0eWxlPSJib3gtc2l6aW5nOmJvcmRlci1ib3g7Y29s
b3I6cmdiKDMyLDEyOCw4MCkiPjU8L3NwYW4+IDxzcGFuIGNsYXNzPSJnbWFpbC1zZSIgc3R5bGU9
ImJveC1zaXppbmc6Ym9yZGVyLWJveDtjb2xvcjpyZ2IoNjQsMTEyLDE2MCk7Zm9udC13ZWlnaHQ6
Ym9sZCI+XDwvc3Bhbj4NCiAgICAtYmlvcyBwYXRoL3RvL2hzcy5iaW4gLXNkIHBhdGgvdG8vc2Rj
YXJkLmltZyA8c3BhbiBjbGFzcz0iZ21haWwtc2UiIHN0eWxlPSJib3gtc2l6aW5nOmJvcmRlci1i
b3g7Y29sb3I6cmdiKDY0LDExMiwxNjApO2ZvbnQtd2VpZ2h0OmJvbGQiPlw8L3NwYW4+DQogICAg
LW5pYyB1c2VyLG1vZGVsPHNwYW4gY2xhc3M9ImdtYWlsLW8iIHN0eWxlPSJib3gtc2l6aW5nOmJv
cmRlci1ib3g7Y29sb3I6cmdiKDEwMiwxMDIsMTAyKSI+PTwvc3Bhbj5jYWRlbmNlX2dlbSA8c3Bh
biBjbGFzcz0iZ21haWwtc2UiIHN0eWxlPSJib3gtc2l6aW5nOmJvcmRlci1ib3g7Y29sb3I6cmdi
KDY0LDExMiwxNjApO2ZvbnQtd2VpZ2h0OmJvbGQiPlw8L3NwYW4+DQogICAgLW5pYyB0YXAsaWZu
YW1lPHNwYW4gY2xhc3M9ImdtYWlsLW8iIHN0eWxlPSJib3gtc2l6aW5nOmJvcmRlci1ib3g7Y29s
b3I6cmdiKDEwMiwxMDIsMTAyKSI+PTwvc3Bhbj50YXAsbW9kZWw8c3BhbiBjbGFzcz0iZ21haWwt
byIgc3R5bGU9ImJveC1zaXppbmc6Ym9yZGVyLWJveDtjb2xvcjpyZ2IoMTAyLDEwMiwxMDIpIj49
PC9zcGFuPmNhZGVuY2VfZ2VtLHNjcmlwdDxzcGFuIGNsYXNzPSJnbWFpbC1vIiBzdHlsZT0iYm94
LXNpemluZzpib3JkZXItYm94O2NvbG9yOnJnYigxMDIsMTAyLDEwMikiPj08L3NwYW4+bm8gPHNw
YW4gY2xhc3M9ImdtYWlsLXNlIiBzdHlsZT0iYm94LXNpemluZzpib3JkZXItYm94O2NvbG9yOnJn
Yig2NCwxMTIsMTYwKTtmb250LXdlaWdodDpib2xkIj5cPC9zcGFuPg0KICAgIC1kaXNwbGF5IG5v
bmUgLXNlcmlhbCBzdGRpbyA8c3BhbiBjbGFzcz0iZ21haWwtc2UiIHN0eWxlPSJib3gtc2l6aW5n
OmJvcmRlci1ib3g7Y29sb3I6cmdiKDY0LDExMiwxNjApO2ZvbnQtd2VpZ2h0OmJvbGQiPlw8L3Nw
YW4+DQogICAgLWNoYXJkZXYgc29ja2V0LGlkPHNwYW4gY2xhc3M9ImdtYWlsLW8iIHN0eWxlPSJi
b3gtc2l6aW5nOmJvcmRlci1ib3g7Y29sb3I6cmdiKDEwMiwxMDIsMTAyKSI+PTwvc3Bhbj5zZXJp
YWwxLHBhdGg8c3BhbiBjbGFzcz0iZ21haWwtbyIgc3R5bGU9ImJveC1zaXppbmc6Ym9yZGVyLWJv
eDtjb2xvcjpyZ2IoMTAyLDEwMiwxMDIpIj49PC9zcGFuPnNlcmlhbDEuc29jayxzZXJ2ZXI8c3Bh
biBjbGFzcz0iZ21haWwtbyIgc3R5bGU9ImJveC1zaXppbmc6Ym9yZGVyLWJveDtjb2xvcjpyZ2Io
MTAyLDEwMiwxMDIpIj49PC9zcGFuPm9uLHdhaXQ8c3BhbiBjbGFzcz0iZ21haWwtbyIgc3R5bGU9
ImJveC1zaXppbmc6Ym9yZGVyLWJveDtjb2xvcjpyZ2IoMTAyLDEwMiwxMDIpIj49PC9zcGFuPm9u
IDxzcGFuIGNsYXNzPSJnbWFpbC1zZSIgc3R5bGU9ImJveC1zaXppbmc6Ym9yZGVyLWJveDtjb2xv
cjpyZ2IoNjQsMTEyLDE2MCk7Zm9udC13ZWlnaHQ6Ym9sZCI+XDwvc3Bhbj4NCiAgICAtc2VyaWFs
IGNoYXJkZXY6c2VyaWFsMTwvcHJlPjwvZGl2PjxkaXYgc3R5bGU9ImZvbnQtZmFtaWx5OnZlcmRh
bmEsc2Fucy1zZXJpZiI+PGJyPjwvZGl2PjxkaXYgc3R5bGU9ImZvbnQtZmFtaWx5OnZlcmRhbmEs
c2Fucy1zZXJpZiI+QXJlIHRoZXJlIG90aGVyIHdheXMgaW4gcWVtdSBpY2ljbGUgbWFjaGluZSBz
dXBwb3J0ZWQgbm93IHRvIHBhc3MgdGhlIHUtYm9vdCBhbmQga2VybmVsPzwvZGl2PjxkaXYgc3R5
bGU9ImZvbnQtZmFtaWx5OnZlcmRhbmEsc2Fucy1zZXJpZiI+PGJyPjwvZGl2PjxkaXYgc3R5bGU9
ImZvbnQtZmFtaWx5OnZlcmRhbmEsc2Fucy1zZXJpZiI+VGhhbmtzPC9kaXY+PGRpdiBzdHlsZT0i
Zm9udC1mYW1pbHk6dmVyZGFuYSxzYW5zLXNlcmlmIj5SYWh1bDwvZGl2PjxkaXYgc3R5bGU9IiI+
PHByZSBzdHlsZT0iYm94LXNpemluZzpib3JkZXItYm94O2NvbG9yOnJnYigwLDAsMCk7bGluZS1o
ZWlnaHQ6MS40O21hcmdpbi10b3A6MHB4O21hcmdpbi1ib3R0b206MHB4O3BhZGRpbmc6MTJweDtv
dmVyZmxvdzphdXRvIj48Zm9udCBmYWNlPSJTRk1vbm8tUmVndWxhciwgTWVubG8sIE1vbmFjbywg
Q29uc29sYXMsIExpYmVyYXRpb24gTW9ubywgQ291cmllciBOZXcsIENvdXJpZXIsIG1vbm9zcGFj
ZSIgc3R5bGU9ImZvbnQtc2l6ZToxMnB4Ij48YnI+PC9mb250PjwvcHJlPjwvZGl2PjwvZGl2Pjwv
ZGl2Pjxicj48ZGl2IGNsYXNzPSJnbWFpbF9xdW90ZSI+PGRpdiBkaXI9Imx0ciIgY2xhc3M9Imdt
YWlsX2F0dHIiPk9uIFR1ZSwgSnVuIDEsIDIwMjEgYXQgODowNiBBTSBCaW4gTWVuZyAmbHQ7PGEg
aHJlZj0ibWFpbHRvOmJtZW5nLmNuQGdtYWlsLmNvbSI+Ym1lbmcuY25AZ21haWwuY29tPC9hPiZn
dDsgd3JvdGU6PGJyPjwvZGl2PjxibG9ja3F1b3RlIGNsYXNzPSJnbWFpbF9xdW90ZSIgc3R5bGU9
Im1hcmdpbjowcHggMHB4IDBweCAwLjhleDtib3JkZXItbGVmdDoxcHggc29saWQgcmdiKDIwNCwy
MDQsMjA0KTtwYWRkaW5nLWxlZnQ6MWV4Ij5IaSBSYWh1bCw8YnI+DQo8YnI+DQpPbiBNb24sIE1h
eSAzMSwgMjAyMSBhdCAxMDo0MyBQTSBSYWh1bCBQYXRoYWsgJmx0OzxhIGhyZWY9Im1haWx0bzpy
cGF0aGFrbWFpbGJveEBnbWFpbC5jb20iIHRhcmdldD0iX2JsYW5rIj5ycGF0aGFrbWFpbGJveEBn
bWFpbC5jb208L2E+Jmd0OyB3cm90ZTo8YnI+DQomZ3Q7PGJyPg0KJmd0OyBPbiB0b3Agb2YgdGhh
dCwgaXQgc2VlbXMgSSBjYW5ub3QgY29ubmVjdCB3aXRoIHRoZSB0YXJnZXQgdXNpbmcgZ2RiPGJy
Pg0KJmd0Ozxicj4NCiZndDsgKGdkYikgdGFyZ2V0IHJlbW90ZSA6MTIzNDxicj4NCiZndDsgUmVt
b3RlIGRlYnVnZ2luZyB1c2luZyA6MTIzNDxicj4NCiZndDsgYmZkIHJlcXVpcmVzIGZsZW4gOCwg
YnV0IHRhcmdldCBoYXMgZmxlbiAwPGJyPg0KJmd0Ozxicj4NCiZndDsgVGhvdWdoIHRoZSBBQkkg
aXMgbHA2NCBhbmQgSVNBIGlzIHJ2NjRpbWFjIHdoZW4gdGhlIGhzcyB3YXMgYnVpbHQuPGJyPg0K
Jmd0Ozxicj4NCjxicj4NCkRpZCB5b3UgZmVlZCBnZGIgdGhlIGltYWdlIHlvdSB3YW50ZWQgdG8g
ZGVidWcgYmVmb3JlICZxdW90O3RhcmdldCByZW1vdGU6JnF1b3Q7Pzxicj4NCjxicj4NClRoZSBQ
b2xhckZpcmUgU29DIGhhcyAxKzQgSEFSVHMgYW5kIHlvdSBzaG91bGQgZm9sbG93IHRoZSBpbnN0
cnVjdGlvbnM8YnI+DQpAIDxhIGhyZWY9Imh0dHBzOi8vd2lraS5xZW11Lm9yZy9Eb2N1bWVudGF0
aW9uL1BsYXRmb3Jtcy9SSVNDViNBdHRhY2hpbmdfR0RCIiByZWw9Im5vcmVmZXJyZXIiIHRhcmdl
dD0iX2JsYW5rIj5odHRwczovL3dpa2kucWVtdS5vcmcvRG9jdW1lbnRhdGlvbi9QbGF0Zm9ybXMv
UklTQ1YjQXR0YWNoaW5nX0dEQjwvYT4gdG88YnI+DQpkbyB0aGUgZGVidWcuPGJyPg0KPGJyPg0K
UmVnYXJkcyw8YnI+DQpCaW48YnI+DQo8L2Jsb2NrcXVvdGU+PC9kaXY+DQo=
--0000000000008eaae205c3abb49f--

