Return-Path: <qemu-devel-bounces+lists+qemu-devel=lfdr.de@nongnu.org>
X-Original-To: lists+qemu-devel@lfdr.de
Delivered-To: lists+qemu-devel@lfdr.de
Received: from lists.gnu.org (lists.gnu.org [209.51.188.17])
	by mail.lfdr.de (Postfix) with ESMTPS id 87E38173DBD
	for <lists+qemu-devel@lfdr.de>; Fri, 28 Feb 2020 17:57:11 +0100 (CET)
Received: from localhost ([::1]:50762 helo=lists1p.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.90_1)
	(envelope-from <qemu-devel-bounces+lists+qemu-devel=lfdr.de@nongnu.org>)
	id 1j7iwo-0005TY-Fm
	for lists+qemu-devel@lfdr.de; Fri, 28 Feb 2020 11:57:10 -0500
Received: from eggs.gnu.org ([2001:470:142:3::10]:57657)
 by lists.gnu.org with esmtp (Exim 4.90_1)
 (envelope-from <tsimpson@qualcomm.com>) id 1j7ikc-0002nj-5w
 for qemu-devel@nongnu.org; Fri, 28 Feb 2020 11:44:36 -0500
Received: from Debian-exim by eggs.gnu.org with spam-scanned (Exim 4.71)
 (envelope-from <tsimpson@qualcomm.com>) id 1j7ika-0005WR-4R
 for qemu-devel@nongnu.org; Fri, 28 Feb 2020 11:44:34 -0500
Received: from alexa-out-sd-02.qualcomm.com ([199.106.114.39]:27035)
 by eggs.gnu.org with esmtps (TLS1.0:RSA_AES_256_CBC_SHA1:32)
 (Exim 4.71) (envelope-from <tsimpson@qualcomm.com>)
 id 1j7ikZ-0005Ug-Pn
 for qemu-devel@nongnu.org; Fri, 28 Feb 2020 11:44:32 -0500
DKIM-Signature: v=1; a=rsa-sha256; c=simple/simple;
 d=quicinc.com; i=@quicinc.com; q=dns/txt; s=qcdkim;
 t=1582908271; x=1614444271;
 h=from:to:cc:subject:date:message-id:in-reply-to:
 references:mime-version:content-transfer-encoding;
 bh=DZ66G2uhy3HL5zJGbN02VTQejMd+x4KpirSTIKoFPns=;
 b=drHHr18h0J3M2yUCE77u0nLbNqfi4DNRmlqJnPePmfmA7hOeELTaKD8J
 pKw9sYbpBoVDKzvBgQuodAFVctBkj7s+yhj8bg5oOoQfN0pQZrAUUlkMK
 JTj1deIRak3MSvl3BY75Ps1cZ/NX88TiYCKHhPLeQbaLQZdRgimqqZTZe 8=;
Received: from unknown (HELO ironmsg01-sd.qualcomm.com) ([10.53.140.141])
 by alexa-out-sd-02.qualcomm.com with ESMTP; 28 Feb 2020 08:44:28 -0800
Received: from vu-tsimpson-aus.qualcomm.com (HELO
 vu-tsimpson1-aus.qualcomm.com) ([10.222.150.1])
 by ironmsg01-sd.qualcomm.com with ESMTP; 28 Feb 2020 08:44:28 -0800
Received: by vu-tsimpson1-aus.qualcomm.com (Postfix, from userid 47164)
 id DE2EDFD8; Fri, 28 Feb 2020 10:44:27 -0600 (CST)
From: Taylor Simpson <tsimpson@quicinc.com>
To: qemu-devel@nongnu.org
Subject: [RFC PATCH v2 10/67] Hexagon instruction and packet types
Date: Fri, 28 Feb 2020 10:43:06 -0600
Message-Id: <1582908244-304-11-git-send-email-tsimpson@quicinc.com>
X-Mailer: git-send-email 2.7.4
In-Reply-To: <1582908244-304-1-git-send-email-tsimpson@quicinc.com>
References: <1582908244-304-1-git-send-email-tsimpson@quicinc.com>
MIME-Version: 1.0
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
X-detected-operating-system: by eggs.gnu.org: FreeBSD 9.x [fuzzy]
X-Received-From: 199.106.114.39
X-BeenThere: qemu-devel@nongnu.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: <qemu-devel.nongnu.org>
List-Unsubscribe: <https://lists.nongnu.org/mailman/options/qemu-devel>,
 <mailto:qemu-devel-request@nongnu.org?subject=unsubscribe>
List-Archive: <https://lists.nongnu.org/archive/html/qemu-devel>
List-Post: <mailto:qemu-devel@nongnu.org>
List-Help: <mailto:qemu-devel-request@nongnu.org?subject=help>
List-Subscribe: <https://lists.nongnu.org/mailman/listinfo/qemu-devel>,
 <mailto:qemu-devel-request@nongnu.org?subject=subscribe>
Cc: riku.voipio@iki.fi, richard.henderson@linaro.org, laurent@vivier.eu,
 Taylor Simpson <tsimpson@quicinc.com>, philmd@redhat.com,
 aleksandar.m.mail@gmail.com
Errors-To: qemu-devel-bounces+lists+qemu-devel=lfdr.de@nongnu.org
Sender: "Qemu-devel" <qemu-devel-bounces+lists+qemu-devel=lfdr.de@nongnu.org>

VGhlIGluc25fdCBhbmQgcGFja2V0X3QgYXJlIHRoZSBpbnRlcmZhY2UgYmV0d2VlbiBpbnN0cnVj
dGlvbiBkZWNvZGluZyBhbmQKVENHIGNvZGUgZ2VuZXJhdGlvbgoKU2lnbmVkLW9mZi1ieTogVGF5
bG9yIFNpbXBzb24gPHRzaW1wc29uQHF1aWNpbmMuY29tPgotLS0KIHRhcmdldC9oZXhhZ29uL2lu
c24uaCB8IDEzMyArKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysr
KysrKwogMSBmaWxlIGNoYW5nZWQsIDEzMyBpbnNlcnRpb25zKCspCiBjcmVhdGUgbW9kZSAxMDA2
NDQgdGFyZ2V0L2hleGFnb24vaW5zbi5oCgpkaWZmIC0tZ2l0IGEvdGFyZ2V0L2hleGFnb24vaW5z
bi5oIGIvdGFyZ2V0L2hleGFnb24vaW5zbi5oCm5ldyBmaWxlIG1vZGUgMTAwNjQ0CmluZGV4IDAw
MDAwMDAuLmE4MGJjYjkKLS0tIC9kZXYvbnVsbAorKysgYi90YXJnZXQvaGV4YWdvbi9pbnNuLmgK
QEAgLTAsMCArMSwxMzMgQEAKKy8qCisgKiAgQ29weXJpZ2h0KGMpIDIwMTktMjAyMCBRdWFsY29t
bSBJbm5vdmF0aW9uIENlbnRlciwgSW5jLiBBbGwgUmlnaHRzIFJlc2VydmVkLgorICoKKyAqICBU
aGlzIHByb2dyYW0gaXMgZnJlZSBzb2Z0d2FyZTsgeW91IGNhbiByZWRpc3RyaWJ1dGUgaXQgYW5k
L29yIG1vZGlmeQorICogIGl0IHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgR05VIEdlbmVyYWwgUHVi
bGljIExpY2Vuc2UgYXMgcHVibGlzaGVkIGJ5CisgKiAgdGhlIEZyZWUgU29mdHdhcmUgRm91bmRh
dGlvbjsgZWl0aGVyIHZlcnNpb24gMiBvZiB0aGUgTGljZW5zZSwgb3IKKyAqICAoYXQgeW91ciBv
cHRpb24pIGFueSBsYXRlciB2ZXJzaW9uLgorICoKKyAqICBUaGlzIHByb2dyYW0gaXMgZGlzdHJp
YnV0ZWQgaW4gdGhlIGhvcGUgdGhhdCBpdCB3aWxsIGJlIHVzZWZ1bCwKKyAqICBidXQgV0lUSE9V
VCBBTlkgV0FSUkFOVFk7IHdpdGhvdXQgZXZlbiB0aGUgaW1wbGllZCB3YXJyYW50eSBvZgorICog
IE1FUkNIQU5UQUJJTElUWSBvciBGSVRORVNTIEZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRS4gIFNl
ZSB0aGUKKyAqICBHTlUgR2VuZXJhbCBQdWJsaWMgTGljZW5zZSBmb3IgbW9yZSBkZXRhaWxzLgor
ICoKKyAqICBZb3Ugc2hvdWxkIGhhdmUgcmVjZWl2ZWQgYSBjb3B5IG9mIHRoZSBHTlUgR2VuZXJh
bCBQdWJsaWMgTGljZW5zZQorICogIGFsb25nIHdpdGggdGhpcyBwcm9ncmFtOyBpZiBub3QsIHNl
ZSA8aHR0cDovL3d3dy5nbnUub3JnL2xpY2Vuc2VzLz4uCisgKi8KKworI2lmbmRlZiBIRVhBR09O
X0lOU05fSAorI2RlZmluZSBIRVhBR09OX0lOU05fSAorCisjaW5jbHVkZSAiY3B1LmgiCisjaW5j
bHVkZSAiaGV4X2FyY2hfdHlwZXMuaCIKKyNpbmNsdWRlICJ0cmFuc2xhdGUuaCIKKworI2RlZmlu
ZSBJTlNUUlVDVElPTlNfTUFYIDcgICAgLyogMiBwYWlycyArIGxvb3BlbmQgKi8KKyNkZWZpbmUg
UkVHX09QRVJBTkRTX01BWCA1CisjZGVmaW5lIElNTUVEU19NQVggMgorCitzdHJ1Y3QgSW5zdHJ1
Y3Rpb247CisKK3R5cGVkZWYgdm9pZCAoKnNlbWFudGljX2luc25fdCkoQ1BVSGV4YWdvblN0YXRl
ICplbnYsCisgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIERpc2FzQ29udGV4dCAqY3R4
LAorICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdHJ1Y3QgSW5zdHJ1Y3Rpb24gKmlu
c24pOworCitzdHJ1Y3QgSW5zdHJ1Y3Rpb24geworICAgIHNlbWFudGljX2luc25fdCBnZW5lcmF0
ZTsgICAgICAgICAgICAvKiBwb2ludGVyIHRvIGdlbnB0ciByb3V0aW5lICovCisgICAgc2l6ZTF1
X3QgcmVnbm9bUkVHX09QRVJBTkRTX01BWF07ICAgIC8qIHJlZyBvcGVyYW5kcyBpbmNsdWRpbmcg
cHJlZGljYXRlcyAqLworICAgIHNpemUydV90IG9wY29kZTsKKworICAgIHNpemU0dV90IGljbGFz
czo2OworICAgIHNpemU0dV90IHNsb3Q6MzsKKyAgICBzaXplNHVfdCBwYXJ0MToxOyAgICAgICAg
LyoKKyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICogY21wLWp1bXBzIGFyZSBzcGxpdCBp
bnRvIHR3byBpbnNucy4KKyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICogc2V0IGZvciB0
aGUgY29tcGFyZSBhbmQgY2xlYXIgZm9yIHRoZSBqdW1wCisgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAqLworICAgIHNpemU0dV90IGV4dGVuc2lvbl92YWxpZDoxOyAgIC8qIEhhcyBhIGNv
bnN0YW50IGV4dGVuZGVyIGF0dGFjaGVkICovCisgICAgc2l6ZTR1X3Qgd2hpY2hfZXh0ZW5kZWQ6
MTsgICAgLyogSWYgaGFzIGFuIGV4dGVuZGVyLCB3aGljaCBpbW1lZGlhdGUgKi8KKyAgICBzaXpl
NHVfdCBpc19kY29wOjE7ICAgICAgLyogSXMgYSBkY2FjaGVvcCAqLworICAgIHNpemU0dV90IGlz
X2RjZmV0Y2g6MTsgICAvKiBIYXMgYW4gQV9EQ0ZFVENIIGF0dHJpYnV0ZSAqLworICAgIHNpemU0
dV90IGlzX2xvYWQ6MTsgICAgICAvKiBIYXMgQV9MT0FEIGF0dHJpYnV0ZSAqLworICAgIHNpemU0
dV90IGlzX3N0b3JlOjE7ICAgICAvKiBIYXMgQV9TVE9SRSBhdHRyaWJ1dGUgKi8KKyAgICBzaXpl
NHVfdCBpc19tZW1vcDoxOyAgICAgLyogSGFzIEFfTUVNT1AgYXR0cmlidXRlICovCisgICAgc2l6
ZTR1X3QgaXNfZGVhbGxvYzoxOyAgIC8qIElzIGEgZGVhbGxvYyByZXR1cm4gb3IgZGVhbGxvYyBm
cmFtZSAqLworICAgIHNpemU0dV90IGlzX2FpYToxOyAgICAgICAvKiBJcyBhIHBvc3QgaW5jcmVt
ZW50ICovCisgICAgc2l6ZTR1X3QgaXNfZW5kbG9vcDoxOyAgIC8qIFRoaXMgaXMgYW4gZW5kIG9m
IGxvb3AgKi8KKyAgICBzaXplNHVfdCBpc18ybmRfanVtcDoxOyAgLyogVGhpcyBpcyB0aGUgc2Vj
b25kIGp1bXAgb2YgYSBkdWFsLWp1bXAgcGFja2V0ICovCisgICAgc2l6ZTR1X3QgbmV3X3ZhbHVl
X3Byb2R1Y2VyX3Nsb3Q6NDsKKyAgICBzaXplNHNfdCBpbW1lZFtJTU1FRFNfTUFYXTsgICAgLyog
aW1tZWRpYXRlIGZpZWxkICovCit9OworCit0eXBlZGVmIHN0cnVjdCBJbnN0cnVjdGlvbiBpbnNu
X3Q7CisKK3N0cnVjdCBQYWNrZXQgeworICAgIHNpemUydV90IG51bV9pbnNuczsKKyAgICBzaXpl
MnVfdCBlbmNvZF9wa3Rfc2l6ZV9pbl9ieXRlczsKKworICAgIC8qIFByZS1kZWNvZGVzIGFib3V0
IExEL1NUICovCisgICAgc2l6ZTh1X3Qgc2luZ2xlX2xvYWQ6MTsKKyAgICBzaXplOHVfdCBkdWFs
X2xvYWQ6MTsKKyAgICBzaXplOHVfdCBzaW5nbGVfc3RvcmU6MTsKKyAgICBzaXplOHVfdCBkdWFs
X3N0b3JlOjE7CisgICAgc2l6ZTh1X3QgbG9hZF9hbmRfc3RvcmU6MTsKKyAgICBzaXplOHVfdCBt
ZW1vcF9vcl9udnN0b3JlOjE7CisKKyAgICAvKiBQcmUtZGVjb2RlcyBhYm91dCBDT0YgKi8KKyAg
ICBzaXplOHVfdCBwa3RfaGFzX2NvZjoxOyAgICAgICAgICAvKiBIYXMgYW55IGNoYW5nZS1vZi1m
bG93ICovCisgICAgc2l6ZTh1X3QgcGt0X2hhc19kdWFsX2p1bXA6MTsKKyAgICBzaXplOHVfdCBw
a3RfaGFzX2luaXRsb29wOjE7CisgICAgc2l6ZTh1X3QgcGt0X2hhc19pbml0bG9vcDA6MTsKKyAg
ICBzaXplOHVfdCBwa3RfaGFzX2luaXRsb29wMToxOworICAgIHNpemU4dV90IHBrdF9oYXNfZW5k
bG9vcDoxOworICAgIHNpemU4dV90IHBrdF9oYXNfZW5kbG9vcDA6MTsKKyAgICBzaXplOHVfdCBw
a3RfaGFzX2VuZGxvb3AxOjE7CisgICAgc2l6ZTh1X3QgcGt0X2hhc19lbmRsb29wMDE6MTsKKyAg
ICBzaXplOHVfdCBwa3RfaGFzX2NhbGw6MTsKKyAgICBzaXplOHVfdCBwa3RfaGFzX2p1bXByOjE7
CisgICAgc2l6ZTh1X3QgcGt0X2hhc19janVtcDoxOworICAgIHNpemU4dV90IHBrdF9oYXNfY2p1
bXBfZG90bmV3OjE7CisgICAgc2l6ZTh1X3QgcGt0X2hhc19janVtcF9kb3RvbGQ6MTsKKyAgICBz
aXplOHVfdCBwa3RfaGFzX2NqdW1wX25ld3ZhbDoxOworICAgIHNpemU4dV90IHBrdF9oYXNfZHVw
bGV4OjE7CisgICAgc2l6ZTh1X3QgcGt0X2hhc19wYXlsb2FkOjE7ICAgICAgLyogQ29udGFpbnMg
YSBjb25zdGFudCBleHRlbmRlciAqLworICAgIHNpemU4dV90IHBrdF9oYXNfZGVhbGxvY19yZXR1
cm46MTsKKworICAgIC8qIFByZS1kZWNvZGVzIGFib3V0IFNMT1RTICovCisgICAgc2l6ZTh1X3Qg
c2xvdDBfdmFsaWQ6MTsKKyAgICBzaXplOHVfdCBzbG90MV92YWxpZDoxOworICAgIHNpemU4dV90
IHNsb3QyX3ZhbGlkOjE7CisgICAgc2l6ZTh1X3Qgc2xvdDNfdmFsaWQ6MTsKKworICAgIC8qIFdo
ZW4gYSBwcmVkaWNhdGUgY2FuY2VscyBzb21ldGhpbmcsIHRyYWNrIHRoYXQgKi8KKyAgICBzaXpl
OHVfdCBwa3RfaGFzX2ZwX29wOjE7CisgICAgc2l6ZTh1X3QgcGt0X2hhc19mcHNwX29wOjE7Cisg
ICAgc2l6ZTh1X3QgcGt0X2hhc19mcGRwX29wOjE7CisKKyAgICAvKiBDb250YWlucyBhIGNhY2hl
b3AgKi8KKyAgICBzaXplOHVfdCBwa3RfaGFzX2NhY2hlb3A6MTsKKyAgICBzaXplOHVfdCBwa3Rf
aGFzX2RjemVyb2E6MTsKKyAgICBzaXplOHVfdCBwa3RfaGFzX2ljdGFnb3A6MTsKKyAgICBzaXpl
OHVfdCBwa3RfaGFzX2ljZmx1c2hvcDoxOworICAgIHNpemU4dV90IHBrdF9oYXNfZGNmbHVzaG9w
OjE7CisgICAgc2l6ZTh1X3QgcGt0X2hhc19kY3RhZ29wOjE7CisgICAgc2l6ZTh1X3QgcGt0X2hh
c19sMmZsdXNob3A6MTsKKyAgICBzaXplOHVfdCBwa3RfaGFzX2wydGFnb3A6MTsKKworICAgIC8q
IGxvYWQgc3RvcmUgZm9yIHNsb3RzICovCisgICAgc2l6ZTh1X3QgcGt0X2hhc19sb2FkX3MwOjE7
CisgICAgc2l6ZTh1X3QgcGt0X2hhc19sb2FkX3MxOjE7CisgICAgc2l6ZTh1X3QgcGt0X2hhc19z
dG9yZV9zMDoxOworICAgIHNpemU4dV90IHBrdF9oYXNfc3RvcmVfczE6MTsKKworICAgIC8qIE1p
c2MgKi8KKyAgICBzaXplOHVfdCBudW1fcm9wczo0OyAgICAgICAgICAgIC8qIE51bSByaXNjIG9w
cyBpbiB0aGUgcGFja2V0ICovCisgICAgc2l6ZTh1X3QgcGt0X2FjY2Vzc19jb3VudDoyOyAgICAv
KiBJcyBhIHZtZW0gYWNjZXNzIGdvaW5nIHRvIFZUQ00gKi8KKyAgICBzaXplOHVfdCBwa3RfbGRh
Y2Nlc3NfbDI6MjsgICAgIC8qIHZtZW0gbGQgYWNjZXNzIHRvIGwyICovCisgICAgc2l6ZTh1X3Qg
cGt0X2xkYWNjZXNzX3Z0Y206MjsgICAvKiB2bWVtIGxkIGFjY2VzcyB0byB2dGNtICovCisKKyAg
ICBpbnNuX3QgaW5zbltJTlNUUlVDVElPTlNfTUFYXTsKK307CisKK3R5cGVkZWYgc3RydWN0IFBh
Y2tldCBwYWNrZXRfdDsKKworI2VuZGlmCi0tIAoyLjcuNAoK

