Return-Path: <qemu-devel-bounces+lists+qemu-devel=lfdr.de@nongnu.org>
X-Original-To: lists+qemu-devel@lfdr.de
Delivered-To: lists+qemu-devel@lfdr.de
Received: from lists.gnu.org (lists.gnu.org [209.51.188.17])
	by mail.lfdr.de (Postfix) with ESMTPS id 7386D364B11
	for <lists+qemu-devel@lfdr.de>; Mon, 19 Apr 2021 22:17:33 +0200 (CEST)
Received: from localhost ([::1]:36330 helo=lists1p.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.90_1)
	(envelope-from <qemu-devel-bounces+lists+qemu-devel=lfdr.de@nongnu.org>)
	id 1lYaKq-0000gV-HS
	for lists+qemu-devel@lfdr.de; Mon, 19 Apr 2021 16:17:32 -0400
Received: from eggs.gnu.org ([2001:470:142:3::10]:52432)
 by lists.gnu.org with esmtps (TLS1.2:ECDHE_RSA_AES_256_GCM_SHA384:256)
 (Exim 4.90_1) (envelope-from <no-reply@patchew.org>)
 id 1lYZfa-0007KH-5F
 for qemu-devel@nongnu.org; Mon, 19 Apr 2021 15:34:54 -0400
Resent-Date: Mon, 19 Apr 2021 15:34:54 -0400
Resent-Message-Id: <E1lYZfa-0007KH-5F@lists.gnu.org>
Received: from sender4-of-o53.zoho.com ([136.143.188.53]:21390)
 by eggs.gnu.org with esmtps (TLS1.2:ECDHE_RSA_AES_256_GCM_SHA384:256)
 (Exim 4.90_1) (envelope-from <no-reply@patchew.org>)
 id 1lYZfN-000814-9a
 for qemu-devel@nongnu.org; Mon, 19 Apr 2021 15:34:53 -0400
ARC-Seal: i=1; a=rsa-sha256; t=1618860837; cv=none; 
 d=zohomail.com; s=zohoarc; 
 b=CBMDo7FBqATKYeployoJ0tJn4nvTIoKuX8N2mCs3H4cLqXXbU9439OSZptFjJgr2Y0PD2BPzQODNGtVQw7G0wVCttzdjzB4j1V0P7lVQhk5Od7ixYAlLRZxDhF/AfSUgA4s/RmIRxa5zflNDQhy0fPm446FQNSwFMDj4Zt3tGYI=
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=zohomail.com;
 s=zohoarc; t=1618860837;
 h=Content-Type:Content-Transfer-Encoding:Cc:Date:From:In-Reply-To:MIME-Version:Message-ID:Reply-To:Subject:To;
 bh=JJs3XmEezuAp3miZWfRXcTD/8XmBVnBtrplfhzFqG2A=; 
 b=CjJ/GyvDKk0mWAo6kIuLn/agsdI+o5OXB1HORjj2fuLBVLL9yhwu8VlvXE68fahtnEWVgDZGY2p56Gyo4XyxhxegEVah/fEtDKoBvg51b9NGA9Vrn+p165VkFJt/IjKcH8W7zL5HmUsPnwlxXdfb1QpTJJhikkV8y2+AwPpiipQ=
ARC-Authentication-Results: i=1; mx.zohomail.com;
 spf=pass  smtp.mailfrom=no-reply@patchew.org;
 dmarc=pass header.from=<no-reply@patchew.org>
 header.from=<no-reply@patchew.org>
Received: from [172.17.0.3] (23.253.156.214 [23.253.156.214]) by
 mx.zohomail.com with SMTPS id 1618860836582816.4222437521073;
 Mon, 19 Apr 2021 12:33:56 -0700 (PDT)
In-Reply-To: <20210419191823.1555482-1-f4bug@amsat.org>
Subject: Re: [PATCH v3 00/30] target/mips: Re-org to allow KVM-only builds
Message-ID: <161886083494.32078.11057873394210130909@72b6d80f974b>
MIME-Version: 1.0
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Resent-From: 
From: no-reply@patchew.org
To: f4bug@amsat.org
Date: Mon, 19 Apr 2021 12:33:56 -0700 (PDT)
X-ZohoMailClient: External
Received-SPF: pass client-ip=136.143.188.53; envelope-from=no-reply@patchew.org;
 helo=sender4-of-o53.zoho.com
X-Spam_score_int: -18
X-Spam_score: -1.9
X-Spam_bar: -
X-Spam_report: (-1.9 / 5.0 requ) BAYES_00=-1.9, RCVD_IN_DNSWL_NONE=-0.0001,
 RCVD_IN_MSPIKE_H3=0.001, RCVD_IN_MSPIKE_WL=0.001, SPF_HELO_NONE=0.001,
 SPF_PASS=-0.001 autolearn=unavailable autolearn_force=no
X-Spam_action: no action
X-BeenThere: qemu-devel@nongnu.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: <qemu-devel.nongnu.org>
List-Unsubscribe: <https://lists.nongnu.org/mailman/options/qemu-devel>,
 <mailto:qemu-devel-request@nongnu.org?subject=unsubscribe>
List-Archive: <https://lists.nongnu.org/archive/html/qemu-devel>
List-Post: <mailto:qemu-devel@nongnu.org>
List-Help: <mailto:qemu-devel-request@nongnu.org?subject=help>
List-Subscribe: <https://lists.nongnu.org/mailman/listinfo/qemu-devel>,
 <mailto:qemu-devel-request@nongnu.org?subject=subscribe>
Reply-To: qemu-devel@nongnu.org
Cc: aleksandar.rikalo@syrmia.com, chenhuacai@kernel.org,
 richard.henderson@linaro.org, qemu-devel@nongnu.org, f4bug@amsat.org,
 aurelien@aurel32.net
Errors-To: qemu-devel-bounces+lists+qemu-devel=lfdr.de@nongnu.org
Sender: "Qemu-devel" <qemu-devel-bounces+lists+qemu-devel=lfdr.de@nongnu.org>

UGF0Y2hldyBVUkw6IGh0dHBzOi8vcGF0Y2hldy5vcmcvUUVNVS8yMDIxMDQxOTE5MTgyMy4xNTU1
NDgyLTEtZjRidWdAYW1zYXQub3JnLwoKCgpIaSwKClRoaXMgc2VyaWVzIHNlZW1zIHRvIGhhdmUg
c29tZSBjb2Rpbmcgc3R5bGUgcHJvYmxlbXMuIFNlZSBvdXRwdXQgYmVsb3cgZm9yCm1vcmUgaW5m
b3JtYXRpb246CgpUeXBlOiBzZXJpZXMKTWVzc2FnZS1pZDogMjAyMTA0MTkxOTE4MjMuMTU1NTQ4
Mi0xLWY0YnVnQGFtc2F0Lm9yZwpTdWJqZWN0OiBbUEFUQ0ggdjMgMDAvMzBdIHRhcmdldC9taXBz
OiBSZS1vcmcgdG8gYWxsb3cgS1ZNLW9ubHkgYnVpbGRzCgo9PT0gVEVTVCBTQ1JJUFQgQkVHSU4g
PT09CiMhL2Jpbi9iYXNoCmdpdCByZXYtcGFyc2UgYmFzZSA+IC9kZXYvbnVsbCB8fCBleGl0IDAK
Z2l0IGNvbmZpZyAtLWxvY2FsIGRpZmYucmVuYW1lbGltaXQgMApnaXQgY29uZmlnIC0tbG9jYWwg
ZGlmZi5yZW5hbWVzIFRydWUKZ2l0IGNvbmZpZyAtLWxvY2FsIGRpZmYuYWxnb3JpdGhtIGhpc3Rv
Z3JhbQouL3NjcmlwdHMvY2hlY2twYXRjaC5wbCAtLW1haWxiYWNrIGJhc2UuLgo9PT0gVEVTVCBT
Q1JJUFQgRU5EID09PQoKVXBkYXRpbmcgM2M4Y2Y1YTljMjFmZjg3ODIxNjRkMWRlZjdmNDRiZDg4
ODcxMzM4NApGcm9tIGh0dHBzOi8vZ2l0aHViLmNvbS9wYXRjaGV3LXByb2plY3QvcWVtdQogLSBb
dGFnIHVwZGF0ZV0gICAgICBwYXRjaGV3LzIwMjEwNDE1MjE1MTQxLjE4NjU0NjctMS1jcm9zYUBy
ZWRoYXQuY29tIC0+IHBhdGNoZXcvMjAyMTA0MTUyMTUxNDEuMTg2NTQ2Ny0xLWNyb3NhQHJlZGhh
dC5jb20KICogW25ldyB0YWddICAgICAgICAgcGF0Y2hldy8yMDIxMDQxOTE5MTgyMy4xNTU1NDgy
LTEtZjRidWdAYW1zYXQub3JnIC0+IHBhdGNoZXcvMjAyMTA0MTkxOTE4MjMuMTU1NTQ4Mi0xLWY0
YnVnQGFtc2F0Lm9yZwpTd2l0Y2hlZCB0byBhIG5ldyBicmFuY2ggJ3Rlc3QnCjgxMDkyYTUgZ2l0
bGFiLWNpOiBBZGQgS1ZNIG1pcHM2NGVsIGNyb3NzLWJ1aWxkIGpvYnMKNTk5ZjkwYSBody9taXBz
OiBSZXN0cmljdCBub24tdmlydHVhbGl6ZWQgbWFjaGluZXMgdG8gVENHCjk2ZDNkYjkgdGFyZ2V0
L21pcHM6IE1vdmUgVENHIHNvdXJjZSBmaWxlcyB1bmRlciB0Y2cvIHN1YiBkaXJlY3RvcnkKYWMw
NWMyZSB0YXJnZXQvbWlwczogTW92ZSBDUDAgaGVscGVycyB0byBzeXNlbXUvY3AwLmMKOGEwODc1
OSB0YXJnZXQvbWlwczogTW92ZSBleGNlcHRpb24gbWFuYWdlbWVudCBjb2RlIHRvIGV4Y2VwdGlv
bi5jCjgzNWNiOWIgdGFyZ2V0L21pcHM6IE1vdmUgVExCIG1hbmFnZW1lbnQgaGVscGVycyB0byB0
Y2cvc3lzZW11L3RsYl9oZWxwZXIuYwo1ZWE5MTQxIHRhcmdldC9taXBzOiBNb3ZlIGhlbHBlcl9j
YWNoZSgpIHRvIHRjZy9zeXNlbXUvc3BlY2lhbF9oZWxwZXIuYwpiNTczMGU2IHRhcmdldC9taXBz
OiBNb3ZlIFNwZWNpYWwgb3Bjb2RlcyB0byB0Y2cvc3lzZW11L3NwZWNpYWxfaGVscGVyLmMKYWQ4
Mjc4MyB0YXJnZXQvbWlwczogUmVzdHJpY3QgQ1BVTUlQU1RMQkNvbnRleHQ6Om1hcF9hZGRyZXNz
KCkgaGFuZGxlcnMgc2NvcGUKZDQwNjU3NCB0YXJnZXQvbWlwczogTW92ZSB0bGJfaGVscGVyLmMg
dG8gdGNnL3N5c2VtdS8KYTEwOGYxOCB0YXJnZXQvbWlwczogUmVzdHJpY3QgbW11X2luaXQoKSB0
byBUQ0cKMzcxYmJiYSB0YXJnZXQvbWlwczogTW92ZSBzeXNlbXUgVENHLXNwZWNpZmljIGNvZGUg
dG8gdGNnL3N5c2VtdS8gc3ViZm9sZGVyCmQ3MWU4ZTMgdGFyZ2V0L21pcHM6IFJlc3RyaWN0IGNw
dV9taXBzX2dldF9yYW5kb20oKSAvIHVwZGF0ZV9wYWdlbWFzaygpIHRvIFRDRwo1ODE0ZDhlIHRh
cmdldC9taXBzOiBNb3ZlIHBoeXNpY2FsIGFkZHJlc3NpbmcgY29kZSB0byBzeXNlbXUvcGh5c2Fk
ZHIuYwpmMTg2NjEwIHRhcmdldC9taXBzOiBNb3ZlIHN5c2VtdSBzcGVjaWZpYyBmaWxlcyB1bmRl
ciBzeXNlbXUvIHN1YmZvbGRlcgoyZjQ1NTY2IHRhcmdldC9taXBzOiBNb3ZlIGNwdV9zaWduYWxf
aGFuZGxlciBkZWZpbml0aW9uIGFyb3VuZApmZTMzMDU0IHRhcmdldC9taXBzOiBBZGQgc2ltcGxl
IHVzZXItbW9kZSBtaXBzX2NwdV90bGJfZmlsbCgpCjJhNjkyYmYgdGFyZ2V0L21pcHM6IEFkZCBz
aW1wbGUgdXNlci1tb2RlIG1pcHNfY3B1X2RvX2ludGVycnVwdCgpCjM4MWQwZWMgdGFyZ2V0L21p
cHM6IEludHJvZHVjZSB0Y2ctaW50ZXJuYWwuaCBmb3IgVENHIHNwZWNpZmljIGRlY2xhcmF0aW9u
cwo1YjY5YWRkIG1lc29uOiBJbnRyb2R1Y2UgbWVzb25fdXNlcl9hcmNoIHNvdXJjZSBzZXQgZm9y
IGFyY2gtc3BlY2lmaWMgdXNlci1tb2RlCmM1ZTQzYjQgdGFyZ2V0L21pcHM6IEV4dHJhY3QgbG9h
ZC9zdG9yZSBoZWxwZXJzIHRvIGxkc3RfaGVscGVyLmMKMmM4ODQ4MCB0YXJnZXQvbWlwczogTWVy
Z2UgZG9fdHJhbnNsYXRlX2FkZHJlc3MgaW50byBjcHVfbWlwc190cmFuc2xhdGVfYWRkcmVzcwo4
N2ZkZTBiIHRhcmdldC9taXBzOiBEZWNsYXJlIG1pcHNfY3B1X3NldF9lcnJvcl9wYygpIGlubGlu
ZWQgaW4gImludGVybmFsLmgiCjMyYjU3OWUgdGFyZ2V0L21pcHM6IFR1cm4gcHJpbnRmcHIoKSBt
YWNybyBpbnRvIGEgcHJvcGVyIGZ1bmN0aW9uCjQ2YzIwMTAgdGFyZ2V0L21pcHM6IFJlc3RyaWN0
IG1pcHNfY3B1X2R1bXBfc3RhdGUoKSB0byBjcHUuYwpmYmI3NjYyIHRhcmdldC9taXBzOiBPcHRp
bWl6ZSBDUFUvRlBVIHJlZ25hbWVzW10gYXJyYXlzCmIwOWE2ZTVmIHRhcmdldC9taXBzOiBNYWtl
IENQVS9GUFUgcmVnbmFtZXNbXSBhcnJheXMgZ2xvYmFsCjc5YWE4YWEgdGFyZ2V0L21pcHM6IE1v
dmUgbXNhX3Jlc2V0KCkgdG8gbmV3IHNvdXJjZSBmaWxlCjk5OWI1NTEgdGFyZ2V0L21pcHM6IE1v
dmUgSUVFRSByb3VuZGluZyBtb2RlIGFycmF5IHRvIG5ldyBzb3VyY2UgZmlsZQo0MjVmOWFiIHRh
cmdldC9taXBzOiBTaW1wbGlmeSBtZXNvbiBUQ0cgcnVsZXMKCj09PSBPVVRQVVQgQkVHSU4gPT09
CjEvMzAgQ2hlY2tpbmcgY29tbWl0IDQyNWY5YWJjNmZmZiAodGFyZ2V0L21pcHM6IFNpbXBsaWZ5
IG1lc29uIFRDRyBydWxlcykKMi8zMCBDaGVja2luZyBjb21taXQgOTk5YjU1MTBhZTZjICh0YXJn
ZXQvbWlwczogTW92ZSBJRUVFIHJvdW5kaW5nIG1vZGUgYXJyYXkgdG8gbmV3IHNvdXJjZSBmaWxl
KQpVc2Ugb2YgdW5pbml0aWFsaXplZCB2YWx1ZSAkYWNwaV90ZXN0ZXhwZWN0ZWQgaW4gc3RyaW5n
IGVxIGF0IC4vc2NyaXB0cy9jaGVja3BhdGNoLnBsIGxpbmUgMTUyOS4KV0FSTklORzogYWRkZWQs
IG1vdmVkIG9yIGRlbGV0ZWQgZmlsZShzKSwgZG9lcyBNQUlOVEFJTkVSUyBuZWVkIHVwZGF0aW5n
PwojMzE6IApuZXcgZmlsZSBtb2RlIDEwMDY0NAoKdG90YWw6IDAgZXJyb3JzLCAxIHdhcm5pbmdz
LCAzOSBsaW5lcyBjaGVja2VkCgpQYXRjaCAyLzMwIGhhcyBzdHlsZSBwcm9ibGVtcywgcGxlYXNl
IHJldmlldy4gIElmIGFueSBvZiB0aGVzZSBlcnJvcnMKYXJlIGZhbHNlIHBvc2l0aXZlcyByZXBv
cnQgdGhlbSB0byB0aGUgbWFpbnRhaW5lciwgc2VlCkNIRUNLUEFUQ0ggaW4gTUFJTlRBSU5FUlMu
CjMvMzAgQ2hlY2tpbmcgY29tbWl0IDc5YWE4YWE5ODYyZCAodGFyZ2V0L21pcHM6IE1vdmUgbXNh
X3Jlc2V0KCkgdG8gbmV3IHNvdXJjZSBmaWxlKQpVc2Ugb2YgdW5pbml0aWFsaXplZCB2YWx1ZSAk
YWNwaV90ZXN0ZXhwZWN0ZWQgaW4gc3RyaW5nIGVxIGF0IC4vc2NyaXB0cy9jaGVja3BhdGNoLnBs
IGxpbmUgMTUyOS4KV0FSTklORzogYWRkZWQsIG1vdmVkIG9yIGRlbGV0ZWQgZmlsZShzKSwgZG9l
cyBNQUlOVEFJTkVSUyBuZWVkIHVwZGF0aW5nPwojMzc6IApuZXcgZmlsZSBtb2RlIDEwMDY0NAoK
dG90YWw6IDAgZXJyb3JzLCAxIHdhcm5pbmdzLCA3MCBsaW5lcyBjaGVja2VkCgpQYXRjaCAzLzMw
IGhhcyBzdHlsZSBwcm9ibGVtcywgcGxlYXNlIHJldmlldy4gIElmIGFueSBvZiB0aGVzZSBlcnJv
cnMKYXJlIGZhbHNlIHBvc2l0aXZlcyByZXBvcnQgdGhlbSB0byB0aGUgbWFpbnRhaW5lciwgc2Vl
CkNIRUNLUEFUQ0ggaW4gTUFJTlRBSU5FUlMuCjQvMzAgQ2hlY2tpbmcgY29tbWl0IGIwOWE2ZTVm
M2FiMyAodGFyZ2V0L21pcHM6IE1ha2UgQ1BVL0ZQVSByZWduYW1lc1tdIGFycmF5cyBnbG9iYWwp
CjUvMzAgQ2hlY2tpbmcgY29tbWl0IGZiYjc2NjI2ZGRhNSAodGFyZ2V0L21pcHM6IE9wdGltaXpl
IENQVS9GUFUgcmVnbmFtZXNbXSBhcnJheXMpCjYvMzAgQ2hlY2tpbmcgY29tbWl0IDQ2YzIwMTAz
YjQwMSAodGFyZ2V0L21pcHM6IFJlc3RyaWN0IG1pcHNfY3B1X2R1bXBfc3RhdGUoKSB0byBjcHUu
YykKNy8zMCBDaGVja2luZyBjb21taXQgMzJiNTc5ZWJlMzIzICh0YXJnZXQvbWlwczogVHVybiBw
cmludGZwcigpIG1hY3JvIGludG8gYSBwcm9wZXIgZnVuY3Rpb24pCjgvMzAgQ2hlY2tpbmcgY29t
bWl0IDg3ZmRlMGIzNTQ4ZiAodGFyZ2V0L21pcHM6IERlY2xhcmUgbWlwc19jcHVfc2V0X2Vycm9y
X3BjKCkgaW5saW5lZCBpbiAiaW50ZXJuYWwuaCIpCjkvMzAgQ2hlY2tpbmcgY29tbWl0IDJjODg0
ODBmZDc0MyAodGFyZ2V0L21pcHM6IE1lcmdlIGRvX3RyYW5zbGF0ZV9hZGRyZXNzIGludG8gY3B1
X21pcHNfdHJhbnNsYXRlX2FkZHJlc3MpCjEwLzMwIENoZWNraW5nIGNvbW1pdCBjNWU0M2I0Y2Iy
NDcgKHRhcmdldC9taXBzOiBFeHRyYWN0IGxvYWQvc3RvcmUgaGVscGVycyB0byBsZHN0X2hlbHBl
ci5jKQpVc2Ugb2YgdW5pbml0aWFsaXplZCB2YWx1ZSAkYWNwaV90ZXN0ZXhwZWN0ZWQgaW4gc3Ry
aW5nIGVxIGF0IC4vc2NyaXB0cy9jaGVja3BhdGNoLnBsIGxpbmUgMTUyOS4KV0FSTklORzogYWRk
ZWQsIG1vdmVkIG9yIGRlbGV0ZWQgZmlsZShzKSwgZG9lcyBNQUlOVEFJTkVSUyBuZWVkIHVwZGF0
aW5nPwojMTg6IApuZXcgZmlsZSBtb2RlIDEwMDY0NAoKdG90YWw6IDAgZXJyb3JzLCAxIHdhcm5p
bmdzLCA1NjAgbGluZXMgY2hlY2tlZAoKUGF0Y2ggMTAvMzAgaGFzIHN0eWxlIHByb2JsZW1zLCBw
bGVhc2UgcmV2aWV3LiAgSWYgYW55IG9mIHRoZXNlIGVycm9ycwphcmUgZmFsc2UgcG9zaXRpdmVz
IHJlcG9ydCB0aGVtIHRvIHRoZSBtYWludGFpbmVyLCBzZWUKQ0hFQ0tQQVRDSCBpbiBNQUlOVEFJ
TkVSUy4KMTEvMzAgQ2hlY2tpbmcgY29tbWl0IDViNjlhZGQ4YWQ4ZSAobWVzb246IEludHJvZHVj
ZSBtZXNvbl91c2VyX2FyY2ggc291cmNlIHNldCBmb3IgYXJjaC1zcGVjaWZpYyB1c2VyLW1vZGUp
CjEyLzMwIENoZWNraW5nIGNvbW1pdCAzODFkMGVjMDhiNDIgKHRhcmdldC9taXBzOiBJbnRyb2R1
Y2UgdGNnLWludGVybmFsLmggZm9yIFRDRyBzcGVjaWZpYyBkZWNsYXJhdGlvbnMpClVzZSBvZiB1
bmluaXRpYWxpemVkIHZhbHVlICRhY3BpX3Rlc3RleHBlY3RlZCBpbiBzdHJpbmcgZXEgYXQgLi9z
Y3JpcHRzL2NoZWNrcGF0Y2gucGwgbGluZSAxNTI5LgpXQVJOSU5HOiBhZGRlZCwgbW92ZWQgb3Ig
ZGVsZXRlZCBmaWxlKHMpLCBkb2VzIE1BSU5UQUlORVJTIG5lZWQgdXBkYXRpbmc/CiM1NDogCm5l
dyBmaWxlIG1vZGUgMTAwNjQ0Cgp0b3RhbDogMCBlcnJvcnMsIDEgd2FybmluZ3MsIDQ1IGxpbmVz
IGNoZWNrZWQKClBhdGNoIDEyLzMwIGhhcyBzdHlsZSBwcm9ibGVtcywgcGxlYXNlIHJldmlldy4g
IElmIGFueSBvZiB0aGVzZSBlcnJvcnMKYXJlIGZhbHNlIHBvc2l0aXZlcyByZXBvcnQgdGhlbSB0
byB0aGUgbWFpbnRhaW5lciwgc2VlCkNIRUNLUEFUQ0ggaW4gTUFJTlRBSU5FUlMuCjEzLzMwIENo
ZWNraW5nIGNvbW1pdCAyYTY5MmJmMGZiYWEgKHRhcmdldC9taXBzOiBBZGQgc2ltcGxlIHVzZXIt
bW9kZSBtaXBzX2NwdV9kb19pbnRlcnJ1cHQoKSkKVXNlIG9mIHVuaW5pdGlhbGl6ZWQgdmFsdWUg
JGFjcGlfdGVzdGV4cGVjdGVkIGluIHN0cmluZyBlcSBhdCAuL3NjcmlwdHMvY2hlY2twYXRjaC5w
bCBsaW5lIDE1MjkuCldBUk5JTkc6IGFkZGVkLCBtb3ZlZCBvciBkZWxldGVkIGZpbGUocyksIGRv
ZXMgTUFJTlRBSU5FUlMgbmVlZCB1cGRhdGluZz8KIzU0OiAKbmV3IGZpbGUgbW9kZSAxMDA2NDQK
CnRvdGFsOiAwIGVycm9ycywgMSB3YXJuaW5ncywgNzYgbGluZXMgY2hlY2tlZAoKUGF0Y2ggMTMv
MzAgaGFzIHN0eWxlIHByb2JsZW1zLCBwbGVhc2UgcmV2aWV3LiAgSWYgYW55IG9mIHRoZXNlIGVy
cm9ycwphcmUgZmFsc2UgcG9zaXRpdmVzIHJlcG9ydCB0aGVtIHRvIHRoZSBtYWludGFpbmVyLCBz
ZWUKQ0hFQ0tQQVRDSCBpbiBNQUlOVEFJTkVSUy4KMTQvMzAgQ2hlY2tpbmcgY29tbWl0IGZlMzMw
NTQ1YWJlYiAodGFyZ2V0L21pcHM6IEFkZCBzaW1wbGUgdXNlci1tb2RlIG1pcHNfY3B1X3RsYl9m
aWxsKCkpCjE1LzMwIENoZWNraW5nIGNvbW1pdCAyZjQ1NTY2NWU2NWMgKHRhcmdldC9taXBzOiBN
b3ZlIGNwdV9zaWduYWxfaGFuZGxlciBkZWZpbml0aW9uIGFyb3VuZCkKMTYvMzAgQ2hlY2tpbmcg
Y29tbWl0IGYxODY2MTA5Zjk3OCAodGFyZ2V0L21pcHM6IE1vdmUgc3lzZW11IHNwZWNpZmljIGZp
bGVzIHVuZGVyIHN5c2VtdS8gc3ViZm9sZGVyKQoxNy8zMCBDaGVja2luZyBjb21taXQgNTgxNGQ4
ZTBiNDY5ICh0YXJnZXQvbWlwczogTW92ZSBwaHlzaWNhbCBhZGRyZXNzaW5nIGNvZGUgdG8gc3lz
ZW11L3BoeXNhZGRyLmMpClVzZSBvZiB1bmluaXRpYWxpemVkIHZhbHVlICRhY3BpX3Rlc3RleHBl
Y3RlZCBpbiBzdHJpbmcgZXEgYXQgLi9zY3JpcHRzL2NoZWNrcGF0Y2gucGwgbGluZSAxNTI5LgpX
QVJOSU5HOiBhZGRlZCwgbW92ZWQgb3IgZGVsZXRlZCBmaWxlKHMpLCBkb2VzIE1BSU5UQUlORVJT
IG5lZWQgdXBkYXRpbmc/CiM3NjogCm5ldyBmaWxlIG1vZGUgMTAwNjQ0Cgp0b3RhbDogMCBlcnJv
cnMsIDEgd2FybmluZ3MsIDU3MyBsaW5lcyBjaGVja2VkCgpQYXRjaCAxNy8zMCBoYXMgc3R5bGUg
cHJvYmxlbXMsIHBsZWFzZSByZXZpZXcuICBJZiBhbnkgb2YgdGhlc2UgZXJyb3JzCmFyZSBmYWxz
ZSBwb3NpdGl2ZXMgcmVwb3J0IHRoZW0gdG8gdGhlIG1haW50YWluZXIsIHNlZQpDSEVDS1BBVENI
IGluIE1BSU5UQUlORVJTLgoxOC8zMCBDaGVja2luZyBjb21taXQgZDcxZThlM2I3YzJmICh0YXJn
ZXQvbWlwczogUmVzdHJpY3QgY3B1X21pcHNfZ2V0X3JhbmRvbSgpIC8gdXBkYXRlX3BhZ2VtYXNr
KCkgdG8gVENHKQoxOS8zMCBDaGVja2luZyBjb21taXQgMzcxYmJiYTc0MmU1ICh0YXJnZXQvbWlw
czogTW92ZSBzeXNlbXUgVENHLXNwZWNpZmljIGNvZGUgdG8gdGNnL3N5c2VtdS8gc3ViZm9sZGVy
KQpXQVJOSU5HOiBhZGRlZCwgbW92ZWQgb3IgZGVsZXRlZCBmaWxlKHMpLCBkb2VzIE1BSU5UQUlO
RVJTIG5lZWQgdXBkYXRpbmc/CiMxOTogCiB0YXJnZXQvbWlwcy97ID0+IHRjZy9zeXNlbXV9L2Nw
MF9oZWxwZXIuYyB8ICAgMAoKdG90YWw6IDAgZXJyb3JzLCAxIHdhcm5pbmdzLCAzNzEgbGluZXMg
Y2hlY2tlZAoKUGF0Y2ggMTkvMzAgaGFzIHN0eWxlIHByb2JsZW1zLCBwbGVhc2UgcmV2aWV3LiAg
SWYgYW55IG9mIHRoZXNlIGVycm9ycwphcmUgZmFsc2UgcG9zaXRpdmVzIHJlcG9ydCB0aGVtIHRv
IHRoZSBtYWludGFpbmVyLCBzZWUKQ0hFQ0tQQVRDSCBpbiBNQUlOVEFJTkVSUy4KMjAvMzAgQ2hl
Y2tpbmcgY29tbWl0IGExMDhmMTg3ZDlhOSAodGFyZ2V0L21pcHM6IFJlc3RyaWN0IG1tdV9pbml0
KCkgdG8gVENHKQoyMS8zMCBDaGVja2luZyBjb21taXQgZDQwNjU3NGNhZDk1ICh0YXJnZXQvbWlw
czogTW92ZSB0bGJfaGVscGVyLmMgdG8gdGNnL3N5c2VtdS8pCldBUk5JTkc6IGFkZGVkLCBtb3Zl
ZCBvciBkZWxldGVkIGZpbGUocyksIGRvZXMgTUFJTlRBSU5FUlMgbmVlZCB1cGRhdGluZz8KIzI0
OiAKIHRhcmdldC9taXBzL3sgPT4gdGNnL3N5c2VtdX0vdGxiX2hlbHBlci5jIHwgMyAtLS0KCnRv
dGFsOiAwIGVycm9ycywgMSB3YXJuaW5ncywgNTkgbGluZXMgY2hlY2tlZAoKUGF0Y2ggMjEvMzAg
aGFzIHN0eWxlIHByb2JsZW1zLCBwbGVhc2UgcmV2aWV3LiAgSWYgYW55IG9mIHRoZXNlIGVycm9y
cwphcmUgZmFsc2UgcG9zaXRpdmVzIHJlcG9ydCB0aGVtIHRvIHRoZSBtYWludGFpbmVyLCBzZWUK
Q0hFQ0tQQVRDSCBpbiBNQUlOVEFJTkVSUy4KMjIvMzAgQ2hlY2tpbmcgY29tbWl0IGFkODI3ODM5
MjBjZSAodGFyZ2V0L21pcHM6IFJlc3RyaWN0IENQVU1JUFNUTEJDb250ZXh0OjptYXBfYWRkcmVz
cygpIGhhbmRsZXJzIHNjb3BlKQoyMy8zMCBDaGVja2luZyBjb21taXQgYjU3MzBlNmQ2MGUwICh0
YXJnZXQvbWlwczogTW92ZSBTcGVjaWFsIG9wY29kZXMgdG8gdGNnL3N5c2VtdS9zcGVjaWFsX2hl
bHBlci5jKQpVc2Ugb2YgdW5pbml0aWFsaXplZCB2YWx1ZSAkYWNwaV90ZXN0ZXhwZWN0ZWQgaW4g
c3RyaW5nIGVxIGF0IC4vc2NyaXB0cy9jaGVja3BhdGNoLnBsIGxpbmUgMTUyOS4KV0FSTklORzog
YWRkZWQsIG1vdmVkIG9yIGRlbGV0ZWQgZmlsZShzKSwgZG9lcyBNQUlOVEFJTkVSUyBuZWVkIHVw
ZGF0aW5nPwojMTk0OiAKbmV3IGZpbGUgbW9kZSAxMDA2NDQKCnRvdGFsOiAwIGVycm9ycywgMSB3
YXJuaW5ncywgMzExIGxpbmVzIGNoZWNrZWQKClBhdGNoIDIzLzMwIGhhcyBzdHlsZSBwcm9ibGVt
cywgcGxlYXNlIHJldmlldy4gIElmIGFueSBvZiB0aGVzZSBlcnJvcnMKYXJlIGZhbHNlIHBvc2l0
aXZlcyByZXBvcnQgdGhlbSB0byB0aGUgbWFpbnRhaW5lciwgc2VlCkNIRUNLUEFUQ0ggaW4gTUFJ
TlRBSU5FUlMuCjI0LzMwIENoZWNraW5nIGNvbW1pdCA1ZWE5MTQxYzA0NjMgKHRhcmdldC9taXBz
OiBNb3ZlIGhlbHBlcl9jYWNoZSgpIHRvIHRjZy9zeXNlbXUvc3BlY2lhbF9oZWxwZXIuYykKMjUv
MzAgQ2hlY2tpbmcgY29tbWl0IDgzNWNiOWI5N2Q3MSAodGFyZ2V0L21pcHM6IE1vdmUgVExCIG1h
bmFnZW1lbnQgaGVscGVycyB0byB0Y2cvc3lzZW11L3RsYl9oZWxwZXIuYykKRVJST1I6IHNwYWNl
IHByb2hpYml0ZWQgYWZ0ZXIgdGhhdCAnJicgKGN0eDpXeFcpCiM0NTY6IEZJTEU6IHRhcmdldC9t
aXBzL3RjZy9zeXNlbXUvdGxiX2hlbHBlci5jOjcxOgorICAgIHRsYi0+WEkwID0gKGVudi0+Q1Aw
X0VudHJ5TG8wID4+IENQMEVuTG9fWEkpICYgMTsKICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICBeCgpFUlJPUjogc3BhY2UgcHJvaGliaXRlZCBhZnRlciB0
aGF0ICcmJyAoY3R4Old4VykKIzQ1NzogRklMRTogdGFyZ2V0L21pcHMvdGNnL3N5c2VtdS90bGJf
aGVscGVyLmM6NzI6CisgICAgdGxiLT5SSTAgPSAoZW52LT5DUDBfRW50cnlMbzAgPj4gQ1AwRW5M
b19SSSkgJiAxOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgIF4KCkVSUk9SOiBzcGFjZSBwcm9oaWJpdGVkIGFmdGVyIHRoYXQgJyYnIChjdHg6V3hXKQoj
NDYyOiBGSUxFOiB0YXJnZXQvbWlwcy90Y2cvc3lzZW11L3RsYl9oZWxwZXIuYzo3NzoKKyAgICB0
bGItPlhJMSA9IChlbnYtPkNQMF9FbnRyeUxvMSA+PiBDUDBFbkxvX1hJKSAmIDE7CiAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXgoKRVJST1I6IHNwYWNl
IHByb2hpYml0ZWQgYWZ0ZXIgdGhhdCAnJicgKGN0eDpXeFcpCiM0NjM6IEZJTEU6IHRhcmdldC9t
aXBzL3RjZy9zeXNlbXUvdGxiX2hlbHBlci5jOjc4OgorICAgIHRsYi0+UkkxID0gKGVudi0+Q1Aw
X0VudHJ5TG8xID4+IENQMEVuTG9fUkkpICYgMTsKICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICBeCgp0b3RhbDogNCBlcnJvcnMsIDAgd2FybmluZ3MsIDcy
MCBsaW5lcyBjaGVja2VkCgpQYXRjaCAyNS8zMCBoYXMgc3R5bGUgcHJvYmxlbXMsIHBsZWFzZSBy
ZXZpZXcuICBJZiBhbnkgb2YgdGhlc2UgZXJyb3JzCmFyZSBmYWxzZSBwb3NpdGl2ZXMgcmVwb3J0
IHRoZW0gdG8gdGhlIG1haW50YWluZXIsIHNlZQpDSEVDS1BBVENIIGluIE1BSU5UQUlORVJTLgoK
MjYvMzAgQ2hlY2tpbmcgY29tbWl0IDhhMDg3NTkxODQ2NiAodGFyZ2V0L21pcHM6IE1vdmUgZXhj
ZXB0aW9uIG1hbmFnZW1lbnQgY29kZSB0byBleGNlcHRpb24uYykKVXNlIG9mIHVuaW5pdGlhbGl6
ZWQgdmFsdWUgJGFjcGlfdGVzdGV4cGVjdGVkIGluIHN0cmluZyBlcSBhdCAuL3NjcmlwdHMvY2hl
Y2twYXRjaC5wbCBsaW5lIDE1MjkuCldBUk5JTkc6IGFkZGVkLCBtb3ZlZCBvciBkZWxldGVkIGZp
bGUocyksIGRvZXMgTUFJTlRBSU5FUlMgbmVlZCB1cGRhdGluZz8KIzE1ODogCm5ldyBmaWxlIG1v
ZGUgMTAwNjQ0Cgp0b3RhbDogMCBlcnJvcnMsIDEgd2FybmluZ3MsIDQwMiBsaW5lcyBjaGVja2Vk
CgpQYXRjaCAyNi8zMCBoYXMgc3R5bGUgcHJvYmxlbXMsIHBsZWFzZSByZXZpZXcuICBJZiBhbnkg
b2YgdGhlc2UgZXJyb3JzCmFyZSBmYWxzZSBwb3NpdGl2ZXMgcmVwb3J0IHRoZW0gdG8gdGhlIG1h
aW50YWluZXIsIHNlZQpDSEVDS1BBVENIIGluIE1BSU5UQUlORVJTLgoyNy8zMCBDaGVja2luZyBj
b21taXQgYWMwNWMyZWY5YzAzICh0YXJnZXQvbWlwczogTW92ZSBDUDAgaGVscGVycyB0byBzeXNl
bXUvY3AwLmMpClVzZSBvZiB1bmluaXRpYWxpemVkIHZhbHVlICRhY3BpX3Rlc3RleHBlY3RlZCBp
biBzdHJpbmcgZXEgYXQgLi9zY3JpcHRzL2NoZWNrcGF0Y2gucGwgbGluZSAxNTI5LgpXQVJOSU5H
OiBhZGRlZCwgbW92ZWQgb3IgZGVsZXRlZCBmaWxlKHMpLCBkb2VzIE1BSU5UQUlORVJTIG5lZWQg
dXBkYXRpbmc/CiMxNjE6IApuZXcgZmlsZSBtb2RlIDEwMDY0NAoKRVJST1I6IHNwYWNlIHByb2hp
Yml0ZWQgYWZ0ZXIgdGhhdCAnJicgKGN0eDpXeFcpCiMyMDU6IEZJTEU6IHRhcmdldC9taXBzL3N5
c2VtdS9jcDAuYzo0MDoKKyAgICBjdSA9ICh2ID4+IENQMFN0X0NVMCkgJiAweGY7CiAgICAgICAg
ICAgICAgICAgICAgICAgICAgIF4KCkVSUk9SOiBzcGFjZSBwcm9oaWJpdGVkIGFmdGVyIHRoYXQg
JyYnIChjdHg6V3hXKQojMjA2OiBGSUxFOiB0YXJnZXQvbWlwcy9zeXNlbXUvY3AwLmM6NDE6Cisg
ICAgbXggPSAodiA+PiBDUDBTdF9NWCkgJiAweDE7CiAgICAgICAgICAgICAgICAgICAgICAgICAg
XgoKRVJST1I6IHNwYWNlIHByb2hpYml0ZWQgYWZ0ZXIgdGhhdCAnJicgKGN0eDpXeFcpCiMyMDc6
IEZJTEU6IHRhcmdldC9taXBzL3N5c2VtdS9jcDAuYzo0MjoKKyAgICBrc3UgPSAodiA+PiBDUDBT
dF9LU1UpICYgMHgzOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgXgoKRVJST1I6IHNwYWNl
IHByb2hpYml0ZWQgYWZ0ZXIgdGhhdCAnJicgKGN0eDpXeFcpCiMyMzQ6IEZJTEU6IHRhcmdldC9t
aXBzL3N5c2VtdS9jcDAuYzo2OToKKyAgICAgICAgdWludDMyX3Qga3N1eCA9ICgxIDw8IENQMFN0
X0tYKSAmIHZhbDsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBeCgpF
UlJPUjogc3BhY2UgcHJvaGliaXRlZCBhZnRlciB0aGF0ICcmJyAoY3R4Old4VykKIzI0MjogRklM
RTogdGFyZ2V0L21pcHMvc3lzZW11L2NwMC5jOjc3OgorICAgICAgICBtYXNrICY9IH4oKCgxIDw8
IENQMFN0X1NSKSB8ICgxIDw8IENQMFN0X05NSSkpICYgdmFsKTsKICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBeCgpFUlJPUjogc3BhY2UgcHJv
aGliaXRlZCBhZnRlciB0aGF0ICcmJyAoY3R4Old4VykKIzI2OTogRklMRTogdGFyZ2V0L21pcHMv
c3lzZW11L2NwMC5jOjEwNDoKKyAgICAgICAgbWFzayAmPSB+KCgxIDw8IENQMENhX1dQKSAmIHZh
bCk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXgoKRVJST1I6IHNwYWNlIHBy
b2hpYml0ZWQgYWZ0ZXIgdGhhdCAnJicgKGN0eDpXeFcpCiMyNzQ6IEZJTEU6IHRhcmdldC9taXBz
L3N5c2VtdS9jcDAuYzoxMDk6CisgICAgaWYgKChvbGQgXiBlbnYtPkNQMF9DYXVzZSkgJiAoMSA8
PCBDUDBDYV9EQykpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBeCgpFUlJPUjog
c3BhY2UgcHJvaGliaXRlZCBhZnRlciB0aGF0ICcmJyAoY3R4Old4VykKIzI4NDogRklMRTogdGFy
Z2V0L21pcHMvc3lzZW11L2NwMC5jOjExOToKKyAgICAgICAgaWYgKChvbGQgXiBlbnYtPkNQMF9D
YXVzZSkgJiAoMSA8PCAoQ1AwQ2FfSVAgKyBpKSkpIHsKICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgXgoKdG90YWw6IDggZXJyb3JzLCAxIHdhcm5pbmdzLCAyNTcgbGluZXMgY2hl
Y2tlZAoKUGF0Y2ggMjcvMzAgaGFzIHN0eWxlIHByb2JsZW1zLCBwbGVhc2UgcmV2aWV3LiAgSWYg
YW55IG9mIHRoZXNlIGVycm9ycwphcmUgZmFsc2UgcG9zaXRpdmVzIHJlcG9ydCB0aGVtIHRvIHRo
ZSBtYWludGFpbmVyLCBzZWUKQ0hFQ0tQQVRDSCBpbiBNQUlOVEFJTkVSUy4KCjI4LzMwIENoZWNr
aW5nIGNvbW1pdCA5NmQzZGI5NzFiNDAgKHRhcmdldC9taXBzOiBNb3ZlIFRDRyBzb3VyY2UgZmls
ZXMgdW5kZXIgdGNnLyBzdWIgZGlyZWN0b3J5KQpXQVJOSU5HOiBhZGRlZCwgbW92ZWQgb3IgZGVs
ZXRlZCBmaWxlKHMpLCBkb2VzIE1BSU5UQUlORVJTIG5lZWQgdXBkYXRpbmc/CiMyNDogCiB0YXJn
ZXQvbWlwcy97ID0+IHRjZ30vZHNwX2hlbHBlci5jICAgICAgICAgICB8ICAwCgp0b3RhbDogMCBl
cnJvcnMsIDEgd2FybmluZ3MsIDE0NCBsaW5lcyBjaGVja2VkCgpQYXRjaCAyOC8zMCBoYXMgc3R5
bGUgcHJvYmxlbXMsIHBsZWFzZSByZXZpZXcuICBJZiBhbnkgb2YgdGhlc2UgZXJyb3JzCmFyZSBm
YWxzZSBwb3NpdGl2ZXMgcmVwb3J0IHRoZW0gdG8gdGhlIG1haW50YWluZXIsIHNlZQpDSEVDS1BB
VENIIGluIE1BSU5UQUlORVJTLgoyOS8zMCBDaGVja2luZyBjb21taXQgNTk5ZjkwYWFiYmY4ICho
dy9taXBzOiBSZXN0cmljdCBub24tdmlydHVhbGl6ZWQgbWFjaGluZXMgdG8gVENHKQozMC8zMCBD
aGVja2luZyBjb21taXQgODEwOTJhNTFiYzA0IChnaXRsYWItY2k6IEFkZCBLVk0gbWlwczY0ZWwg
Y3Jvc3MtYnVpbGQgam9icykKPT09IE9VVFBVVCBFTkQgPT09CgpUZXN0IGNvbW1hbmQgZXhpdGVk
IHdpdGggY29kZTogMQoKClRoZSBmdWxsIGxvZyBpcyBhdmFpbGFibGUgYXQKaHR0cDovL3BhdGNo
ZXcub3JnL2xvZ3MvMjAyMTA0MTkxOTE4MjMuMTU1NTQ4Mi0xLWY0YnVnQGFtc2F0Lm9yZy90ZXN0
aW5nLmNoZWNrcGF0Y2gvP3R5cGU9bWVzc2FnZS4KLS0tCkVtYWlsIGdlbmVyYXRlZCBhdXRvbWF0
aWNhbGx5IGJ5IFBhdGNoZXcgW2h0dHBzOi8vcGF0Y2hldy5vcmcvXS4KUGxlYXNlIHNlbmQgeW91
ciBmZWVkYmFjayB0byBwYXRjaGV3LWRldmVsQHJlZGhhdC5jb20=

