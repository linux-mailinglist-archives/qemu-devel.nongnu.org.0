Return-Path: <qemu-devel-bounces+lists+qemu-devel=lfdr.de@nongnu.org>
X-Original-To: lists+qemu-devel@lfdr.de
Delivered-To: lists+qemu-devel@lfdr.de
Received: from lists.gnu.org (lists.gnu.org [209.51.188.17])
	by mail.lfdr.de (Postfix) with ESMTPS id 6F73E28C055
	for <lists+qemu-devel@lfdr.de>; Mon, 12 Oct 2020 21:03:39 +0200 (CEST)
Received: from localhost ([::1]:50814 helo=lists1p.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.90_1)
	(envelope-from <qemu-devel-bounces+lists+qemu-devel=lfdr.de@nongnu.org>)
	id 1kS36g-0001Ta-8K
	for lists+qemu-devel@lfdr.de; Mon, 12 Oct 2020 15:03:38 -0400
Received: from eggs.gnu.org ([2001:470:142:3::10]:46658)
 by lists.gnu.org with esmtps (TLS1.2:ECDHE_RSA_AES_256_GCM_SHA384:256)
 (Exim 4.90_1) (envelope-from <no-reply@patchew.org>)
 id 1kS34R-0008L7-63; Mon, 12 Oct 2020 15:01:19 -0400
Resent-Date: Mon, 12 Oct 2020 15:01:19 -0400
Resent-Message-Id: <E1kS34R-0008L7-63@lists.gnu.org>
Received: from sender4-of-o57.zoho.com ([136.143.188.57]:21740)
 by eggs.gnu.org with esmtps (TLS1.2:ECDHE_RSA_AES_256_GCM_SHA384:256)
 (Exim 4.90_1) (envelope-from <no-reply@patchew.org>)
 id 1kS34N-000899-23; Mon, 12 Oct 2020 15:01:18 -0400
ARC-Seal: i=1; a=rsa-sha256; t=1602529254; cv=none; 
 d=zohomail.com; s=zohoarc; 
 b=HtdBlIwXtIpcPRQs9iZSjhyWoukGD4d2UI8q9nm0xawJGC3tQrO1V0U7bLa/9FtHjCLdk1sAyjQ1kmZ0TvvZsMDlg0/EDEeeO3WMMhcLWBV5lhlNGlcdVEKaZJIQNraFO4M+IzFp+/nRBY+F1+2pUKGa8yWAQJC1jiVqr8TwxYI=
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=zohomail.com;
 s=zohoarc; t=1602529254;
 h=Content-Type:Content-Transfer-Encoding:Cc:Date:From:In-Reply-To:MIME-Version:Message-ID:Reply-To:Subject:To;
 bh=vfI5FpXvAxVXZkcLH29pYcvylAffx94WU6ThWhuNvy4=; 
 b=Tg/3h12qwuHhxKLBmNNtvnq0iUXLEIRp1WnIr+MAM1zvl90B+vmphVQJnfOP/vapVe6UK+xCe95yP/F38WLBATZ6gPeW4IxrFRiUYyJGx6i/KzoCE9/cyMuBvCT2+QZf70QPgwmbL4qGmEolv+gjg8qphDpFuGtQEtTZtGObCzY=
ARC-Authentication-Results: i=1; mx.zohomail.com;
 spf=pass  smtp.mailfrom=no-reply@patchew.org;
 dmarc=pass header.from=<no-reply@patchew.org>
 header.from=<no-reply@patchew.org>
Received: from [172.17.0.3] (23.253.156.214 [23.253.156.214]) by
 mx.zohomail.com with SMTPS id 1602529252135168.9000813021937;
 Mon, 12 Oct 2020 12:00:52 -0700 (PDT)
Subject: Re: [PULL v2 00/30] Block patches
Message-ID: <160252924972.18344.10040388905307639096@66eaa9a8a123>
In-Reply-To: <20201012182800.157697-1-stefanha@redhat.com>
MIME-Version: 1.0
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Resent-From: 
From: no-reply@patchew.org
To: stefanha@redhat.com
Date: Mon, 12 Oct 2020 12:00:52 -0700 (PDT)
X-ZohoMailClient: External
Received-SPF: pass client-ip=136.143.188.57; envelope-from=no-reply@patchew.org;
 helo=sender4-of-o57.zoho.com
X-detected-operating-system: by eggs.gnu.org: First seen = 2020/10/12 15:01:11
X-ACL-Warn: Detected OS   = Linux 3.11 and newer [fuzzy]
X-Spam_score_int: -18
X-Spam_score: -1.9
X-Spam_bar: -
X-Spam_report: (-1.9 / 5.0 requ) BAYES_00=-1.9, RCVD_IN_DNSWL_NONE=-0.0001,
 RCVD_IN_MSPIKE_H4=0.001, RCVD_IN_MSPIKE_WL=0.001, SPF_HELO_NONE=0.001,
 SPF_PASS=-0.001 autolearn=ham autolearn_force=no
X-Spam_action: no action
X-BeenThere: qemu-devel@nongnu.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: <qemu-devel.nongnu.org>
List-Unsubscribe: <https://lists.nongnu.org/mailman/options/qemu-devel>,
 <mailto:qemu-devel-request@nongnu.org?subject=unsubscribe>
List-Archive: <https://lists.nongnu.org/archive/html/qemu-devel>
List-Post: <mailto:qemu-devel@nongnu.org>
List-Help: <mailto:qemu-devel-request@nongnu.org?subject=help>
List-Subscribe: <https://lists.nongnu.org/mailman/listinfo/qemu-devel>,
 <mailto:qemu-devel-request@nongnu.org?subject=subscribe>
Reply-To: qemu-devel@nongnu.org
Cc: kwolf@redhat.com, peter.maydell@linaro.org, thuth@redhat.com,
 berrange@redhat.com, ehabkost@redhat.com, qemu-block@nongnu.org,
 lvivier@redhat.com, qemu-devel@nongnu.org, Coiby.Xu@gmail.com,
 armbru@redhat.com, stefanha@redhat.com, crosa@redhat.com, pbonzini@redhat.com,
 fam@euphon.net, mreitz@redhat.com, dgilbert@redhat.com
Errors-To: qemu-devel-bounces+lists+qemu-devel=lfdr.de@nongnu.org
Sender: "Qemu-devel" <qemu-devel-bounces+lists+qemu-devel=lfdr.de@nongnu.org>

UGF0Y2hldyBVUkw6IGh0dHBzOi8vcGF0Y2hldy5vcmcvUUVNVS8yMDIwMTAxMjE4MjgwMC4xNTc2
OTctMS1zdGVmYW5oYUByZWRoYXQuY29tLwoKCgpIaSwKClRoaXMgc2VyaWVzIHNlZW1zIHRvIGhh
dmUgc29tZSBjb2Rpbmcgc3R5bGUgcHJvYmxlbXMuIFNlZSBvdXRwdXQgYmVsb3cgZm9yCm1vcmUg
aW5mb3JtYXRpb246CgpUeXBlOiBzZXJpZXMKTWVzc2FnZS1pZDogMjAyMDEwMTIxODI4MDAuMTU3
Njk3LTEtc3RlZmFuaGFAcmVkaGF0LmNvbQpTdWJqZWN0OiBbUFVMTCB2MiAwMC8zMF0gQmxvY2sg
cGF0Y2hlcwoKPT09IFRFU1QgU0NSSVBUIEJFR0lOID09PQojIS9iaW4vYmFzaApnaXQgcmV2LXBh
cnNlIGJhc2UgPiAvZGV2L251bGwgfHwgZXhpdCAwCmdpdCBjb25maWcgLS1sb2NhbCBkaWZmLnJl
bmFtZWxpbWl0IDAKZ2l0IGNvbmZpZyAtLWxvY2FsIGRpZmYucmVuYW1lcyBUcnVlCmdpdCBjb25m
aWcgLS1sb2NhbCBkaWZmLmFsZ29yaXRobSBoaXN0b2dyYW0KLi9zY3JpcHRzL2NoZWNrcGF0Y2gu
cGwgLS1tYWlsYmFjayBiYXNlLi4KPT09IFRFU1QgU0NSSVBUIEVORCA9PT0KClVwZGF0aW5nIDNj
OGNmNWE5YzIxZmY4NzgyMTY0ZDFkZWY3ZjQ0YmQ4ODg3MTMzODQKRnJvbSBodHRwczovL2dpdGh1
Yi5jb20vcGF0Y2hldy1wcm9qZWN0L3FlbXUKICogW25ldyB0YWddICAgICAgICAgcGF0Y2hldy8y
MDIwMTAxMjE4MjgwMC4xNTc2OTctMS1zdGVmYW5oYUByZWRoYXQuY29tIC0+IHBhdGNoZXcvMjAy
MDEwMTIxODI4MDAuMTU3Njk3LTEtc3RlZmFuaGFAcmVkaGF0LmNvbQpTd2l0Y2hlZCB0byBhIG5l
dyBicmFuY2ggJ3Rlc3QnCjBhOTYwZjggaW90ZXN0czogYWRkIGNvbW1pdCB0b3AtPmJhc2UgY2Fz
ZXMgdG8gMjc0CjI5MDQwOTggYmxvY2svaW86IGZpeCBiZHJ2X2lzX2FsbG9jYXRlZF9hYm92ZQpk
NGE3ZDNlIGJsb2NrL2lvOiBiZHJ2X2NvbW1vbl9ibG9ja19zdGF0dXNfYWJvdmU6IHN1cHBvcnQg
YnMgPT0gYmFzZQpiNDlkYzU1IGJsb2NrL2lvOiBiZHJ2X2NvbW1vbl9ibG9ja19zdGF0dXNfYWJv
dmU6IHN1cHBvcnQgaW5jbHVkZV9iYXNlCmQ4NTVjMzggYmxvY2svaW86IGZpeCBiZHJ2X2NvX2Js
b2NrX3N0YXR1c19hYm92ZQo2MTdhYjMyIHRlc3RzL3F0ZXN0OiBhZGQgbXVsdGktcXVldWUgdGVz
dCBjYXNlIHRvIHZob3N0LXVzZXItYmxrLXRlc3QKMWJhM2RhOCBibG9jay9leHBvcnQ6IGFkZCB2
aG9zdC11c2VyLWJsayBtdWx0aS1xdWV1ZSBzdXBwb3J0CmM5Y2RhNjMgYmxvY2svZXhwb3J0OiBh
ZGQgaW90aHJlYWQgYW5kIGZpeGVkLWlvdGhyZWFkIG9wdGlvbnMKOGQ3ZWQ2YyBibG9jazogbW92
ZSBibG9jayBleHBvcnRzIHRvIGxpYmJsb2NrZGV2CmM2OGUyNDQgcWVtdS1zdG9yYWdlLWRhZW1v
bjogYXZvaWQgY29tcGlsaW5nIGJsb2NrZGV2X3NzIHR3aWNlCjA1ZGY0N2EgdXRpbC92aG9zdC11
c2VyLXNlcnZlcjogdXNlIHN0YXRpYyBsaWJyYXJ5IGluIG1lc29uLmJ1aWxkCjU1ZTI1MWYgdXRp
bC92aG9zdC11c2VyLXNlcnZlcjogbW92ZSBoZWFkZXIgdG8gaW5jbHVkZS8KYjFkMTAxZSBibG9j
ay9leHBvcnQ6IGNvbnZlcnQgdmhvc3QtdXNlci1ibGsgc2VydmVyIHRvIGJsb2NrIGV4cG9ydCBB
UEkKMjFjM2MxMyBibG9jay9leHBvcnQ6IHJlcG9ydCBmbHVzaCBlcnJvcnMKNTU5ZTNiMyB1dGls
L3Zob3N0LXVzZXItc2VydmVyOiByZXdvcmsgdnVfY2xpZW50X3RyaXAoKSBjb3JvdXRpbmUgbGlm
ZWN5Y2xlCmM0Y2NjMDIgdXRpbC92aG9zdC11c2VyLXNlcnZlcjogY2hlY2sgRU9GIHdoZW4gcmVh
ZGluZyBwYXlsb2FkCmRiNDlhYzEgdXRpbC92aG9zdC11c2VyLXNlcnZlcjogZml4IG1lbW9yeSBs
ZWFrIGluIHZ1X21lc3NhZ2VfcmVhZCgpCjViMDFjYTAgdXRpbC92aG9zdC11c2VyLXNlcnZlcjog
ZHJvcCB1bnVzZWQgRGV2aWNlUGFuaWNOb3RpZmllcgoxYWFiMzcyIGJsb2NrL2V4cG9ydDogY29u
c29saWRhdGUgcmVxdWVzdCBzdHJ1Y3RzIGludG8gVnVCbG9ja1JlcQoxZGY2ZWNkIHV0aWwvdmhv
c3QtdXNlci1zZXJ2ZXI6IGRyb3AgdW5uZWNlc3Nhcnkgd2F0Y2ggZGVsZXRpb24KYTg5MzNhOCB1
dGlsL3Zob3N0LXVzZXItc2VydmVyOiBkcm9wIHVubmVjZXNzYXJ5IFFPTSBjYXN0CmJkNGVkYjAg
dXRpbC92aG9zdC11c2VyLXNlcnZlcjogcy9maWxlZHMvZmllbGRzLyB0eXBvIGZpeApiZWM4Y2Jm
IE1BSU5UQUlORVJTOiBBZGQgdmhvc3QtdXNlciBibG9jayBkZXZpY2UgYmFja2VuZCBzZXJ2ZXIg
bWFpbnRhaW5lcgpkZTIyNjhjIHRlc3Q6IG5ldyBxVGVzdCBjYXNlIHRvIHRlc3QgdGhlIHZob3N0
LXVzZXItYmxrLXNlcnZlcgplYzZkNDY3IGJsb2NrL2V4cG9ydDogdmhvc3QtdXNlciBibG9jayBk
ZXZpY2UgYmFja2VuZCBzZXJ2ZXIKNmFjMzQ5ZCBibG9jazogbW92ZSBsb2dpY2FsIGJsb2NrIHNp
emUgY2hlY2sgZnVuY3Rpb24gdG8gYSBjb21tb24gdXRpbGl0eSBmdW5jdGlvbgo5MDM2ZGZjIHV0
aWwvdmhvc3QtdXNlci1zZXJ2ZXI6IGdlbmVyaWMgdmhvc3QgdXNlciBzZXJ2ZXIKYTcwYzJmMCBs
aWJ2aG9zdC11c2VyOiByZW1vdmUgd2F0Y2ggZm9yIGtpY2tfZmQgd2hlbiBkZS1pbml0aWFsaXpl
IHZ1LWRldgpjZWE2Yzk2IGxpYnZob3N0LXVzZXI6IEFsbG93IHZ1X21lc3NhZ2VfcmVhZCB0byBi
ZSByZXBsYWNlZAo1MDIzZThhIGJsb2NrL252bWU6IEFkZCBkcml2ZXIgc3RhdGlzdGljcyBmb3Ig
YWNjZXNzIGFsaWdubWVudCBhbmQgaHcgZXJyb3JzCgo9PT0gT1VUUFVUIEJFR0lOID09PQoxLzMw
IENoZWNraW5nIGNvbW1pdCA1MDIzZThhOGJmMDQgKGJsb2NrL252bWU6IEFkZCBkcml2ZXIgc3Rh
dGlzdGljcyBmb3IgYWNjZXNzIGFsaWdubWVudCBhbmQgaHcgZXJyb3JzKQoyLzMwIENoZWNraW5n
IGNvbW1pdCBjZWE2Yzk2ZGViNGUgKGxpYnZob3N0LXVzZXI6IEFsbG93IHZ1X21lc3NhZ2VfcmVh
ZCB0byBiZSByZXBsYWNlZCkKV0FSTklORzogQmxvY2sgY29tbWVudHMgdXNlIGEgbGVhZGluZyAv
KiBvbiBhIHNlcGFyYXRlIGxpbmUKIzEzMDogRklMRTogY29udHJpYi9saWJ2aG9zdC11c2VyL2xp
YnZob3N0LXVzZXIuaDozOTU6CisgICAgLyogQHJlYWRfbXNnOiBjdXN0b20gbWV0aG9kIHRvIHJl
YWQgdmhvc3QtdXNlciBtZXNzYWdlCgp0b3RhbDogMCBlcnJvcnMsIDEgd2FybmluZ3MsIDEzOSBs
aW5lcyBjaGVja2VkCgpQYXRjaCAyLzMwIGhhcyBzdHlsZSBwcm9ibGVtcywgcGxlYXNlIHJldmll
dy4gIElmIGFueSBvZiB0aGVzZSBlcnJvcnMKYXJlIGZhbHNlIHBvc2l0aXZlcyByZXBvcnQgdGhl
bSB0byB0aGUgbWFpbnRhaW5lciwgc2VlCkNIRUNLUEFUQ0ggaW4gTUFJTlRBSU5FUlMuCjMvMzAg
Q2hlY2tpbmcgY29tbWl0IGE3MGMyZjAxYmIzZiAobGlidmhvc3QtdXNlcjogcmVtb3ZlIHdhdGNo
IGZvciBraWNrX2ZkIHdoZW4gZGUtaW5pdGlhbGl6ZSB2dS1kZXYpCjQvMzAgQ2hlY2tpbmcgY29t
bWl0IDkwMzZkZmMyYzQ3NSAodXRpbC92aG9zdC11c2VyLXNlcnZlcjogZ2VuZXJpYyB2aG9zdCB1
c2VyIHNlcnZlcikKV0FSTklORzogYWRkZWQsIG1vdmVkIG9yIGRlbGV0ZWQgZmlsZShzKSwgZG9l
cyBNQUlOVEFJTkVSUyBuZWVkIHVwZGF0aW5nPwojMzM6IApuZXcgZmlsZSBtb2RlIDEwMDY0NAoK
V0FSTklORzogbGluZSBvdmVyIDgwIGNoYXJhY3RlcnMKIzg1OiBGSUxFOiB1dGlsL3Zob3N0LXVz
ZXItc2VydmVyLmM6NDg6CisgICAgLyogV2hlbiB0aGlzIGlzIHNldCB2dV9jbGllbnRfdHJpcCB3
aWxsIHN0b3AgbmV3IHByb2Nlc3Npbmcgdmhvc3QtdXNlciBtZXNzYWdlICovCgp0b3RhbDogMCBl
cnJvcnMsIDIgd2FybmluZ3MsIDUwMCBsaW5lcyBjaGVja2VkCgpQYXRjaCA0LzMwIGhhcyBzdHls
ZSBwcm9ibGVtcywgcGxlYXNlIHJldmlldy4gIElmIGFueSBvZiB0aGVzZSBlcnJvcnMKYXJlIGZh
bHNlIHBvc2l0aXZlcyByZXBvcnQgdGhlbSB0byB0aGUgbWFpbnRhaW5lciwgc2VlCkNIRUNLUEFU
Q0ggaW4gTUFJTlRBSU5FUlMuCjUvMzAgQ2hlY2tpbmcgY29tbWl0IDZhYzM0OWRjMWZiZiAoYmxv
Y2s6IG1vdmUgbG9naWNhbCBibG9jayBzaXplIGNoZWNrIGZ1bmN0aW9uIHRvIGEgY29tbW9uIHV0
aWxpdHkgZnVuY3Rpb24pCldBUk5JTkc6IGFkZGVkLCBtb3ZlZCBvciBkZWxldGVkIGZpbGUocyks
IGRvZXMgTUFJTlRBSU5FUlMgbmVlZCB1cGRhdGluZz8KIzg1OiAKbmV3IGZpbGUgbW9kZSAxMDA2
NDQKCnRvdGFsOiAwIGVycm9ycywgMSB3YXJuaW5ncywgMTI5IGxpbmVzIGNoZWNrZWQKClBhdGNo
IDUvMzAgaGFzIHN0eWxlIHByb2JsZW1zLCBwbGVhc2UgcmV2aWV3LiAgSWYgYW55IG9mIHRoZXNl
IGVycm9ycwphcmUgZmFsc2UgcG9zaXRpdmVzIHJlcG9ydCB0aGVtIHRvIHRoZSBtYWludGFpbmVy
LCBzZWUKQ0hFQ0tQQVRDSCBpbiBNQUlOVEFJTkVSUy4KNi8zMCBDaGVja2luZyBjb21taXQgZWM2
ZDQ2N2VmYTA1IChibG9jay9leHBvcnQ6IHZob3N0LXVzZXIgYmxvY2sgZGV2aWNlIGJhY2tlbmQg
c2VydmVyKQpXQVJOSU5HOiBhZGRlZCwgbW92ZWQgb3IgZGVsZXRlZCBmaWxlKHMpLCBkb2VzIE1B
SU5UQUlORVJTIG5lZWQgdXBkYXRpbmc/CiMyODogCm5ldyBmaWxlIG1vZGUgMTAwNjQ0CgpXQVJO
SU5HOiBsaW5lIG92ZXIgODAgY2hhcmFjdGVycwojNDc0OiBGSUxFOiBibG9jay9leHBvcnQvdmhv
c3QtdXNlci1ibGstc2VydmVyLmM6NDQyOgorICAgICAgICBibGtfcmVtb3ZlX2Fpb19jb250ZXh0
X25vdGlmaWVyKHZ1X2Jsb2NrX2RldmljZS0+YmFja2VuZCwgYmxrX2Fpb19hdHRhY2hlZCwKCkVS
Uk9SOiBnX2ZyZWUoTlVMTCkgaXMgc2FmZSB0aGlzIGNoZWNrIGlzIHByb2JhYmx5IG5vdCByZXF1
aXJlZAojNTM0OiBGSUxFOiBibG9jay9leHBvcnQvdmhvc3QtdXNlci1ibGstc2VydmVyLmM6NTAy
OgorICAgIGlmICh2dXMtPm5vZGVfbmFtZSkgeworICAgICAgICBnX2ZyZWUodnVzLT5ub2RlX25h
bWUpOwoKdG90YWw6IDEgZXJyb3JzLCAyIHdhcm5pbmdzLCA3MTQgbGluZXMgY2hlY2tlZAoKUGF0
Y2ggNi8zMCBoYXMgc3R5bGUgcHJvYmxlbXMsIHBsZWFzZSByZXZpZXcuICBJZiBhbnkgb2YgdGhl
c2UgZXJyb3JzCmFyZSBmYWxzZSBwb3NpdGl2ZXMgcmVwb3J0IHRoZW0gdG8gdGhlIG1haW50YWlu
ZXIsIHNlZQpDSEVDS1BBVENIIGluIE1BSU5UQUlORVJTLgoKNy8zMCBDaGVja2luZyBjb21taXQg
ZGUyMjY4YzdhMDk3ICh0ZXN0OiBuZXcgcVRlc3QgY2FzZSB0byB0ZXN0IHRoZSB2aG9zdC11c2Vy
LWJsay1zZXJ2ZXIpCldBUk5JTkc6IGFkZGVkLCBtb3ZlZCBvciBkZWxldGVkIGZpbGUocyksIGRv
ZXMgTUFJTlRBSU5FUlMgbmVlZCB1cGRhdGluZz8KIzY5OiAKbmV3IGZpbGUgbW9kZSAxMDA2NDQK
CldBUk5JTkc6IGxpbmUgb3ZlciA4MCBjaGFyYWN0ZXJzCiMxODg6IEZJTEU6IHRlc3RzL3F0ZXN0
L2xpYnFvcy92aG9zdC11c2VyLWJsay5jOjExNToKKyAgICBxb3Nfbm9kZV9jcmVhdGVfZHJpdmVy
KCJ2aG9zdC11c2VyLWJsay1kZXZpY2UiLCB2aG9zdF91c2VyX2Jsa19kZXZpY2VfY3JlYXRlKTsK
CnRvdGFsOiAwIGVycm9ycywgMiB3YXJuaW5ncywgMTAzMyBsaW5lcyBjaGVja2VkCgpQYXRjaCA3
LzMwIGhhcyBzdHlsZSBwcm9ibGVtcywgcGxlYXNlIHJldmlldy4gIElmIGFueSBvZiB0aGVzZSBl
cnJvcnMKYXJlIGZhbHNlIHBvc2l0aXZlcyByZXBvcnQgdGhlbSB0byB0aGUgbWFpbnRhaW5lciwg
c2VlCkNIRUNLUEFUQ0ggaW4gTUFJTlRBSU5FUlMuCjgvMzAgQ2hlY2tpbmcgY29tbWl0IGJlYzhj
YmYyODcwZiAoTUFJTlRBSU5FUlM6IEFkZCB2aG9zdC11c2VyIGJsb2NrIGRldmljZSBiYWNrZW5k
IHNlcnZlciBtYWludGFpbmVyKQo5LzMwIENoZWNraW5nIGNvbW1pdCBiZDRlZGIwYmZkYjEgKHV0
aWwvdmhvc3QtdXNlci1zZXJ2ZXI6IHMvZmlsZWRzL2ZpZWxkcy8gdHlwbyBmaXgpCjEwLzMwIENo
ZWNraW5nIGNvbW1pdCBhODkzM2E4Y2YyODggKHV0aWwvdmhvc3QtdXNlci1zZXJ2ZXI6IGRyb3Ag
dW5uZWNlc3NhcnkgUU9NIGNhc3QpCjExLzMwIENoZWNraW5nIGNvbW1pdCAxZGY2ZWNkYWJhMDAg
KHV0aWwvdmhvc3QtdXNlci1zZXJ2ZXI6IGRyb3AgdW5uZWNlc3Nhcnkgd2F0Y2ggZGVsZXRpb24p
CjEyLzMwIENoZWNraW5nIGNvbW1pdCAxYWFiMzcyYTNlNjUgKGJsb2NrL2V4cG9ydDogY29uc29s
aWRhdGUgcmVxdWVzdCBzdHJ1Y3RzIGludG8gVnVCbG9ja1JlcSkKMTMvMzAgQ2hlY2tpbmcgY29t
bWl0IDViMDFjYTAzMGM0ZiAodXRpbC92aG9zdC11c2VyLXNlcnZlcjogZHJvcCB1bnVzZWQgRGV2
aWNlUGFuaWNOb3RpZmllcikKMTQvMzAgQ2hlY2tpbmcgY29tbWl0IGRiNDlhYzFiYTdiOCAodXRp
bC92aG9zdC11c2VyLXNlcnZlcjogZml4IG1lbW9yeSBsZWFrIGluIHZ1X21lc3NhZ2VfcmVhZCgp
KQoxNS8zMCBDaGVja2luZyBjb21taXQgYzRjY2MwMjdhNzgxICh1dGlsL3Zob3N0LXVzZXItc2Vy
dmVyOiBjaGVjayBFT0Ygd2hlbiByZWFkaW5nIHBheWxvYWQpCjE2LzMwIENoZWNraW5nIGNvbW1p
dCA1NTllM2IzZmFmNjYgKHV0aWwvdmhvc3QtdXNlci1zZXJ2ZXI6IHJld29yayB2dV9jbGllbnRf
dHJpcCgpIGNvcm91dGluZSBsaWZlY3ljbGUpCjE3LzMwIENoZWNraW5nIGNvbW1pdCAyMWMzYzEz
OWIwNTIgKGJsb2NrL2V4cG9ydDogcmVwb3J0IGZsdXNoIGVycm9ycykKMTgvMzAgQ2hlY2tpbmcg
Y29tbWl0IGIxZDEwMWUzN2UyOSAoYmxvY2svZXhwb3J0OiBjb252ZXJ0IHZob3N0LXVzZXItYmxr
IHNlcnZlciB0byBibG9jayBleHBvcnQgQVBJKQpXQVJOSU5HOiBsaW5lIG92ZXIgODAgY2hhcmFj
dGVycwojODU4OiBGSUxFOiB1dGlsL3Zob3N0LXVzZXItc2VydmVyLmM6NDE1OgorICAgICAgICBl
cnJvcl9zZXRnKGVycnAsICJPbmx5IHNvY2tldCBhZGRyZXNzIHR5cGVzICd1bml4JyBhbmQgJ2Zk
JyBhcmUgc3VwcG9ydGVkIik7Cgp0b3RhbDogMCBlcnJvcnMsIDEgd2FybmluZ3MsIDc1OCBsaW5l
cyBjaGVja2VkCgpQYXRjaCAxOC8zMCBoYXMgc3R5bGUgcHJvYmxlbXMsIHBsZWFzZSByZXZpZXcu
ICBJZiBhbnkgb2YgdGhlc2UgZXJyb3JzCmFyZSBmYWxzZSBwb3NpdGl2ZXMgcmVwb3J0IHRoZW0g
dG8gdGhlIG1haW50YWluZXIsIHNlZQpDSEVDS1BBVENIIGluIE1BSU5UQUlORVJTLgoxOS8zMCBD
aGVja2luZyBjb21taXQgNTVlMjUxZjQ4YmQ4ICh1dGlsL3Zob3N0LXVzZXItc2VydmVyOiBtb3Zl
IGhlYWRlciB0byBpbmNsdWRlLykKV0FSTklORzogYWRkZWQsIG1vdmVkIG9yIGRlbGV0ZWQgZmls
ZShzKSwgZG9lcyBNQUlOVEFJTkVSUyBuZWVkIHVwZGF0aW5nPwojNDc6IApyZW5hbWUgZnJvbSB1
dGlsL3Zob3N0LXVzZXItc2VydmVyLmgKCnRvdGFsOiAwIGVycm9ycywgMSB3YXJuaW5ncywgMjkg
bGluZXMgY2hlY2tlZAoKUGF0Y2ggMTkvMzAgaGFzIHN0eWxlIHByb2JsZW1zLCBwbGVhc2UgcmV2
aWV3LiAgSWYgYW55IG9mIHRoZXNlIGVycm9ycwphcmUgZmFsc2UgcG9zaXRpdmVzIHJlcG9ydCB0
aGVtIHRvIHRoZSBtYWludGFpbmVyLCBzZWUKQ0hFQ0tQQVRDSCBpbiBNQUlOVEFJTkVSUy4KMjAv
MzAgQ2hlY2tpbmcgY29tbWl0IDA1ZGY0N2FkMWVhOCAodXRpbC92aG9zdC11c2VyLXNlcnZlcjog
dXNlIHN0YXRpYyBsaWJyYXJ5IGluIG1lc29uLmJ1aWxkKQoyMS8zMCBDaGVja2luZyBjb21taXQg
YzY4ZTI0NGNkN2Y5IChxZW11LXN0b3JhZ2UtZGFlbW9uOiBhdm9pZCBjb21waWxpbmcgYmxvY2tk
ZXZfc3MgdHdpY2UpCjIyLzMwIENoZWNraW5nIGNvbW1pdCA4ZDdlZDZjYWE0MTAgKGJsb2NrOiBt
b3ZlIGJsb2NrIGV4cG9ydHMgdG8gbGliYmxvY2tkZXYpCldBUk5JTkc6IGFkZGVkLCBtb3ZlZCBv
ciBkZWxldGVkIGZpbGUocyksIGRvZXMgTUFJTlRBSU5FUlMgbmVlZCB1cGRhdGluZz8KIzEzMTog
Cm5ldyBmaWxlIG1vZGUgMTAwNjQ0Cgp0b3RhbDogMCBlcnJvcnMsIDEgd2FybmluZ3MsIDkwIGxp
bmVzIGNoZWNrZWQKClBhdGNoIDIyLzMwIGhhcyBzdHlsZSBwcm9ibGVtcywgcGxlYXNlIHJldmll
dy4gIElmIGFueSBvZiB0aGVzZSBlcnJvcnMKYXJlIGZhbHNlIHBvc2l0aXZlcyByZXBvcnQgdGhl
bSB0byB0aGUgbWFpbnRhaW5lciwgc2VlCkNIRUNLUEFUQ0ggaW4gTUFJTlRBSU5FUlMuCjIzLzMw
IENoZWNraW5nIGNvbW1pdCBjOWNkYTYzNDg2M2MgKGJsb2NrL2V4cG9ydDogYWRkIGlvdGhyZWFk
IGFuZCBmaXhlZC1pb3RocmVhZCBvcHRpb25zKQoyNC8zMCBDaGVja2luZyBjb21taXQgMWJhM2Rh
ODA1NDE3IChibG9jay9leHBvcnQ6IGFkZCB2aG9zdC11c2VyLWJsayBtdWx0aS1xdWV1ZSBzdXBw
b3J0KQoyNS8zMCBDaGVja2luZyBjb21taXQgNjE3YWIzMjMxZWM0ICh0ZXN0cy9xdGVzdDogYWRk
IG11bHRpLXF1ZXVlIHRlc3QgY2FzZSB0byB2aG9zdC11c2VyLWJsay10ZXN0KQoyNi8zMCBDaGVj
a2luZyBjb21taXQgZDg1NWMzOGEzNTMwIChibG9jay9pbzogZml4IGJkcnZfY29fYmxvY2tfc3Rh
dHVzX2Fib3ZlKQoyNy8zMCBDaGVja2luZyBjb21taXQgYjQ5ZGM1NTkzMzFmIChibG9jay9pbzog
YmRydl9jb21tb25fYmxvY2tfc3RhdHVzX2Fib3ZlOiBzdXBwb3J0IGluY2x1ZGVfYmFzZSkKMjgv
MzAgQ2hlY2tpbmcgY29tbWl0IGQ0YTdkM2U1MjBiOSAoYmxvY2svaW86IGJkcnZfY29tbW9uX2Js
b2NrX3N0YXR1c19hYm92ZTogc3VwcG9ydCBicyA9PSBiYXNlKQoyOS8zMCBDaGVja2luZyBjb21t
aXQgMjkwNDA5ODI5NmEzIChibG9jay9pbzogZml4IGJkcnZfaXNfYWxsb2NhdGVkX2Fib3ZlKQoz
MC8zMCBDaGVja2luZyBjb21taXQgMGE5NjBmODI5NTJlIChpb3Rlc3RzOiBhZGQgY29tbWl0IHRv
cC0+YmFzZSBjYXNlcyB0byAyNzQpCj09PSBPVVRQVVQgRU5EID09PQoKVGVzdCBjb21tYW5kIGV4
aXRlZCB3aXRoIGNvZGU6IDEKCgpUaGUgZnVsbCBsb2cgaXMgYXZhaWxhYmxlIGF0Cmh0dHA6Ly9w
YXRjaGV3Lm9yZy9sb2dzLzIwMjAxMDEyMTgyODAwLjE1NzY5Ny0xLXN0ZWZhbmhhQHJlZGhhdC5j
b20vdGVzdGluZy5jaGVja3BhdGNoLz90eXBlPW1lc3NhZ2UuCi0tLQpFbWFpbCBnZW5lcmF0ZWQg
YXV0b21hdGljYWxseSBieSBQYXRjaGV3IFtodHRwczovL3BhdGNoZXcub3JnL10uClBsZWFzZSBz
ZW5kIHlvdXIgZmVlZGJhY2sgdG8gcGF0Y2hldy1kZXZlbEByZWRoYXQuY29t

