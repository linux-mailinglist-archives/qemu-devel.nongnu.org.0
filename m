Return-Path: <qemu-devel-bounces+lists+qemu-devel=lfdr.de@nongnu.org>
X-Original-To: lists+qemu-devel@lfdr.de
Delivered-To: lists+qemu-devel@lfdr.de
Received: from lists.gnu.org (lists.gnu.org [209.51.188.17])
	by mail.lfdr.de (Postfix) with ESMTPS id DCF81117B1A
	for <lists+qemu-devel@lfdr.de>; Mon,  9 Dec 2019 23:59:36 +0100 (CET)
Received: from localhost ([::1]:48136 helo=lists1p.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.90_1)
	(envelope-from <qemu-devel-bounces+lists+qemu-devel=lfdr.de@nongnu.org>)
	id 1ieS08-00046T-00
	for lists+qemu-devel@lfdr.de; Mon, 09 Dec 2019 17:59:36 -0500
Received: from eggs.gnu.org ([2001:470:142:3::10]:39192)
 by lists.gnu.org with esmtp (Exim 4.90_1)
 (envelope-from <no-reply@patchew.org>) id 1ieRz9-0003h4-L2
 for qemu-devel@nongnu.org; Mon, 09 Dec 2019 17:58:37 -0500
Received: from Debian-exim by eggs.gnu.org with spam-scanned (Exim 4.71)
 (envelope-from <no-reply@patchew.org>) id 1ieRz7-0007ph-Ph
 for qemu-devel@nongnu.org; Mon, 09 Dec 2019 17:58:35 -0500
Resent-Date: Mon, 09 Dec 2019 17:58:35 -0500
Resent-Message-Id: <E1ieRz7-0007ph-Ph@eggs.gnu.org>
Received: from sender4-of-o50.zoho.com ([136.143.188.50]:21052)
 by eggs.gnu.org with esmtps (TLS1.0:RSA_AES_256_CBC_SHA1:32)
 (Exim 4.71) (envelope-from <no-reply@patchew.org>)
 id 1ieRz7-0007nY-I3
 for qemu-devel@nongnu.org; Mon, 09 Dec 2019 17:58:33 -0500
ARC-Seal: i=1; a=rsa-sha256; t=1575932306; cv=none; 
 d=zohomail.com; s=zohoarc; 
 b=eNDEFRIhK3mhfdWsNs4ZiWnMYXvm3VD1VkqRosRbve6p2loS6EwaGtlU/YqReWm89dSLtFWX4x6WoINaZy4i17D6JoosGyEIZXc7Yvoaz6x/WaB2+ImROKVepBKkxg0PA2u8fwOTK9PiFcvjgvPSm+g3pAOOgfX5m+SGflr3sSE=
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=zohomail.com;
 s=zohoarc; t=1575932306;
 h=Content-Type:Content-Transfer-Encoding:Cc:Date:From:In-Reply-To:MIME-Version:Message-ID:Reply-To:Subject:To;
 bh=WBZmA++vd/6Ckrmtauq7DIzeFS7lZWj0Rg/yQhP9Rkk=; 
 b=VyRZhrzkBE5549PVPaMg9eWZNZeCwKKl3RSyvAtbuUqb0q58X0+55HXKvLUUciV/KpSStU9Ec05WH17IKbpwLPEoVjOYnmFCTiH0XJllt/H1KgtnGQJV4Z29Tre+dJggXFnuVBQ9mup8XT+oLhbiTOEEqHDt/BjaM39t5r0FX3U=
ARC-Authentication-Results: i=1; mx.zohomail.com;
 dkim=pass  header.i=patchew.org;
 spf=pass  smtp.mailfrom=no-reply@patchew.org;
 dmarc=pass header.from=<no-reply@patchew.org>
 header.from=<no-reply@patchew.org>
Received: from [172.17.0.3] (23.253.156.214 [23.253.156.214]) by
 mx.zohomail.com with SMTPS id 1575932305314470.42331718350397;
 Mon, 9 Dec 2019 14:58:25 -0800 (PST)
In-Reply-To: <1575903705-12925-1-git-send-email-pbonzini@redhat.com>
Subject: Re: [PATCH v2 00/18] Complete the implementation of -accel
Message-ID: <157593230433.7675.14777048512232643228@37313f22b938>
MIME-Version: 1.0
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Resent-From: 
From: no-reply@patchew.org
To: pbonzini@redhat.com
Date: Mon, 9 Dec 2019 14:58:25 -0800 (PST)
X-ZohoMailClient: External
X-detected-operating-system: by eggs.gnu.org: GNU/Linux 2.2.x-3.x [generic]
 [fuzzy]
X-Received-From: 136.143.188.50
X-BeenThere: qemu-devel@nongnu.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: <qemu-devel.nongnu.org>
List-Unsubscribe: <https://lists.nongnu.org/mailman/options/qemu-devel>,
 <mailto:qemu-devel-request@nongnu.org?subject=unsubscribe>
List-Archive: <https://lists.nongnu.org/archive/html/qemu-devel>
List-Post: <mailto:qemu-devel@nongnu.org>
List-Help: <mailto:qemu-devel-request@nongnu.org?subject=help>
List-Subscribe: <https://lists.nongnu.org/mailman/listinfo/qemu-devel>,
 <mailto:qemu-devel-request@nongnu.org?subject=subscribe>
Reply-To: qemu-devel@nongnu.org
Cc: thuth@redhat.com, qemu-devel@nongnu.org, elmarco@redhat.com
Errors-To: qemu-devel-bounces+lists+qemu-devel=lfdr.de@nongnu.org
Sender: "Qemu-devel" <qemu-devel-bounces+lists+qemu-devel=lfdr.de@nongnu.org>

UGF0Y2hldyBVUkw6IGh0dHBzOi8vcGF0Y2hldy5vcmcvUUVNVS8xNTc1OTAzNzA1LTEyOTI1LTEt
Z2l0LXNlbmQtZW1haWwtcGJvbnppbmlAcmVkaGF0LmNvbS8KCgoKSGksCgpUaGlzIHNlcmllcyBz
ZWVtcyB0byBoYXZlIHNvbWUgY29kaW5nIHN0eWxlIHByb2JsZW1zLiBTZWUgb3V0cHV0IGJlbG93
IGZvcgptb3JlIGluZm9ybWF0aW9uOgoKU3ViamVjdDogW1BBVENIIHYyIDAwLzE4XSBDb21wbGV0
ZSB0aGUgaW1wbGVtZW50YXRpb24gb2YgLWFjY2VsClR5cGU6IHNlcmllcwpNZXNzYWdlLWlkOiAx
NTc1OTAzNzA1LTEyOTI1LTEtZ2l0LXNlbmQtZW1haWwtcGJvbnppbmlAcmVkaGF0LmNvbQoKPT09
IFRFU1QgU0NSSVBUIEJFR0lOID09PQojIS9iaW4vYmFzaApnaXQgcmV2LXBhcnNlIGJhc2UgPiAv
ZGV2L251bGwgfHwgZXhpdCAwCmdpdCBjb25maWcgLS1sb2NhbCBkaWZmLnJlbmFtZWxpbWl0IDAK
Z2l0IGNvbmZpZyAtLWxvY2FsIGRpZmYucmVuYW1lcyBUcnVlCmdpdCBjb25maWcgLS1sb2NhbCBk
aWZmLmFsZ29yaXRobSBoaXN0b2dyYW0KLi9zY3JpcHRzL2NoZWNrcGF0Y2gucGwgLS1tYWlsYmFj
ayBiYXNlLi4KPT09IFRFU1QgU0NSSVBUIEVORCA9PT0KClN3aXRjaGVkIHRvIGEgbmV3IGJyYW5j
aCAndGVzdCcKZmFiYjhiMyBrdm06IGNvbnZlcnQgIi1tYWNoaW5lIGtlcm5lbF9pcnFjaGlwIiB0
byBhbiBhY2NlbGVyYXRvciBwcm9wZXJ0eQo2YTFkYmVlIGt2bTogaW50cm9kdWNlIGt2bV9rZXJu
ZWxfaXJxY2hpcF8qIGZ1bmN0aW9ucwo4MDBjOTU4IGt2bTogY29udmVydCAiLW1hY2hpbmUga3Zt
X3NoYWRvd19tZW0iIHRvIGFuIGFjY2VsZXJhdG9yIHByb3BlcnR5CmQ3MmQzZWEgeGVuOiBjb252
ZXJ0ICItbWFjaGluZSBpZ2QtcGFzc3RocnUiIHRvIGFuIGFjY2VsZXJhdG9yIHByb3BlcnR5CjI0
MDY3YjIgdGNnOiBhZGQgIi1hY2NlbCB0Y2csIHRiLXNpemUiIGFuZCBkZXByZWNhdGUgIi10Yi1z
aXplIgo4YjQyYTdlIHRjZzogY29udmVydCAiLWFjY2VsIHRocmVhZHMiIHRvIGEgUU9NIHByb3Bl
cnR5CjNlYmQ1MWQgYWNjZWw6IHBhc3Mgb2JqZWN0IHRvIGFjY2VsX2luaXRfbWFjaGluZQo0MzUx
NTk0IHFvbTogYWRkIG9iamVjdF9uZXdfd2l0aF9jbGFzcwozMTRmYjgwIHFvbTogaW50cm9kdWNl
IG9iamVjdF9yZWdpc3Rlcl9zdWdhcl9wcm9wCjA5OTU2NTQgdmw6IHdhcm4gZm9yIHVuYXZhaWxh
YmxlIGFjY2VsZXJhdG9ycywgY2xhcmlmeSBtZXNzYWdlcwo1YzdiOTA0IHZsOiBjb25maWd1cmUg
YWNjZWxlcmF0b3JzIGZyb20gLWFjY2VsIG9wdGlvbnMKNmE0ZGE5MyB2bDogaW50cm9kdWNlIG9i
amVjdF9wYXJzZV9wcm9wZXJ0eV9vcHQKYTRiOTg4MCBhY2NlbDogY29tcGlsZSBhY2NlbC9hY2Nl
bC5jIGp1c3Qgb25jZQo2MmNkYzc5IHZsOiBtZXJnZSAtYWNjZWwgcHJvY2Vzc2luZyBpbnRvIGNv
bmZpZ3VyZV9hY2NlbGVyYXRvcnMKNjI0NjM1NyB2bDogZXh0cmFjdCBhY2NlbGVyYXRvciBvcHRp
b24gcHJvY2Vzc2luZyB0byBhIHNlcGFyYXRlIGZ1bmN0aW9uCjYzODc3YjkgdGNnOiBtb3ZlIHFl
bXVfdGNnX2NvbmZpZ3VyZSB0byBhY2NlbC90Y2cvdGNnLWFsbC5jCjFiZDAxZTYgdmw6IG1vdmUg
aWNvdW50IGNvbmZpZ3VyYXRpb24gZWFybGllcgo4NmQ0MTRkIG1lbW9yeTogZG8gbm90IGxvb2sg
YXQgY3VycmVudF9tYWNoaW5lLT5hY2NlbAoKPT09IE9VVFBVVCBCRUdJTiA9PT0KMS8xOCBDaGVj
a2luZyBjb21taXQgODZkNDE0ZDg2NTEzIChtZW1vcnk6IGRvIG5vdCBsb29rIGF0IGN1cnJlbnRf
bWFjaGluZS0+YWNjZWwpCjIvMTggQ2hlY2tpbmcgY29tbWl0IDFiZDAxZTYyY2NhZiAodmw6IG1v
dmUgaWNvdW50IGNvbmZpZ3VyYXRpb24gZWFybGllcikKMy8xOCBDaGVja2luZyBjb21taXQgNjM4
NzdiOTRhZDE1ICh0Y2c6IG1vdmUgcWVtdV90Y2dfY29uZmlndXJlIHRvIGFjY2VsL3RjZy90Y2ct
YWxsLmMpCjQvMTggQ2hlY2tpbmcgY29tbWl0IDYyNDYzNTc5YzI4ZiAodmw6IGV4dHJhY3QgYWNj
ZWxlcmF0b3Igb3B0aW9uIHByb2Nlc3NpbmcgdG8gYSBzZXBhcmF0ZSBmdW5jdGlvbikKNS8xOCBD
aGVja2luZyBjb21taXQgNjJjZGM3OTg2Zjg5ICh2bDogbWVyZ2UgLWFjY2VsIHByb2Nlc3Npbmcg
aW50byBjb25maWd1cmVfYWNjZWxlcmF0b3JzKQo2LzE4IENoZWNraW5nIGNvbW1pdCBhNGI5ODgw
MGU2YTIgKGFjY2VsOiBjb21waWxlIGFjY2VsL2FjY2VsLmMganVzdCBvbmNlKQo3LzE4IENoZWNr
aW5nIGNvbW1pdCA2YTRkYTkzYjE1YjAgKHZsOiBpbnRyb2R1Y2Ugb2JqZWN0X3BhcnNlX3Byb3Bl
cnR5X29wdCkKOC8xOCBDaGVja2luZyBjb21taXQgNWM3YjkwNGJmMzQ0ICh2bDogY29uZmlndXJl
IGFjY2VsZXJhdG9ycyBmcm9tIC1hY2NlbCBvcHRpb25zKQpXQVJOSU5HOiBsaW5lIG92ZXIgODAg
Y2hhcmFjdGVycwojMjA2OiBGSUxFOiB2bC5jOjI5MDk6CisgICAgICAgICAgICBlcnJvcl9yZXBv
cnQoIlRoZSAtYWNjZWwgYW5kIFwiLW1hY2hpbmUgYWNjZWw9XCIgb3B0aW9ucyBhcmUgaW5jb21w
YXRpYmxlIik7CgpXQVJOSU5HOiBsaW5lIG92ZXIgODAgY2hhcmFjdGVycwojMjE0OiBGSUxFOiB2
bC5jOjI5MTU6CisgICAgICAgICAgICAgICAgICAgICAgICAgICBkb19jb25maWd1cmVfYWNjZWxl
cmF0b3IsICZpbml0X2ZhaWxlZCwgJmVycm9yX2ZhdGFsKSkgewoKdG90YWw6IDAgZXJyb3JzLCAy
IHdhcm5pbmdzLCAxOTYgbGluZXMgY2hlY2tlZAoKUGF0Y2ggOC8xOCBoYXMgc3R5bGUgcHJvYmxl
bXMsIHBsZWFzZSByZXZpZXcuICBJZiBhbnkgb2YgdGhlc2UgZXJyb3JzCmFyZSBmYWxzZSBwb3Np
dGl2ZXMgcmVwb3J0IHRoZW0gdG8gdGhlIG1haW50YWluZXIsIHNlZQpDSEVDS1BBVENIIGluIE1B
SU5UQUlORVJTLgo5LzE4IENoZWNraW5nIGNvbW1pdCAwOTk1NjU0NTA0ODcgKHZsOiB3YXJuIGZv
ciB1bmF2YWlsYWJsZSBhY2NlbGVyYXRvcnMsIGNsYXJpZnkgbWVzc2FnZXMpCjEwLzE4IENoZWNr
aW5nIGNvbW1pdCAzMTRmYjgwZDlhMmMgKHFvbTogaW50cm9kdWNlIG9iamVjdF9yZWdpc3Rlcl9z
dWdhcl9wcm9wKQpXQVJOSU5HOiBsaW5lIG92ZXIgODAgY2hhcmFjdGVycwojMjQ6IEZJTEU6IGlu
Y2x1ZGUvcW9tL29iamVjdC5oOjY4MjoKK3ZvaWQgb2JqZWN0X3JlZ2lzdGVyX3N1Z2FyX3Byb3Ao
Y29uc3QgY2hhciAqZHJpdmVyLCBjb25zdCBjaGFyICpwcm9wLCBjb25zdCBjaGFyICp2YWx1ZSk7
CgpXQVJOSU5HOiBsaW5lIG92ZXIgODAgY2hhcmFjdGVycwojNDg6IEZJTEU6IHFvbS9vYmplY3Qu
Yzo0Mjg6Cit2b2lkIG9iamVjdF9yZWdpc3Rlcl9zdWdhcl9wcm9wKGNvbnN0IGNoYXIgKmRyaXZl
ciwgY29uc3QgY2hhciAqcHJvcCwgY29uc3QgY2hhciAqdmFsdWUpCgp0b3RhbDogMCBlcnJvcnMs
IDIgd2FybmluZ3MsIDYxIGxpbmVzIGNoZWNrZWQKClBhdGNoIDEwLzE4IGhhcyBzdHlsZSBwcm9i
bGVtcywgcGxlYXNlIHJldmlldy4gIElmIGFueSBvZiB0aGVzZSBlcnJvcnMKYXJlIGZhbHNlIHBv
c2l0aXZlcyByZXBvcnQgdGhlbSB0byB0aGUgbWFpbnRhaW5lciwgc2VlCkNIRUNLUEFUQ0ggaW4g
TUFJTlRBSU5FUlMuCjExLzE4IENoZWNraW5nIGNvbW1pdCA0MzUxNTk0MTkyYzAgKHFvbTogYWRk
IG9iamVjdF9uZXdfd2l0aF9jbGFzcykKV0FSTklORzogbGluZSBvdmVyIDgwIGNoYXJhY3RlcnMK
IzE0MjogRklMRTogdmwuYzozOTkyOgorICAgIGN1cnJlbnRfbWFjaGluZSA9IE1BQ0hJTkUob2Jq
ZWN0X25ld193aXRoX2NsYXNzKE9CSkVDVF9DTEFTUyhtYWNoaW5lX2NsYXNzKSkpOwoKdG90YWw6
IDAgZXJyb3JzLCAxIHdhcm5pbmdzLCA5NiBsaW5lcyBjaGVja2VkCgpQYXRjaCAxMS8xOCBoYXMg
c3R5bGUgcHJvYmxlbXMsIHBsZWFzZSByZXZpZXcuICBJZiBhbnkgb2YgdGhlc2UgZXJyb3JzCmFy
ZSBmYWxzZSBwb3NpdGl2ZXMgcmVwb3J0IHRoZW0gdG8gdGhlIG1haW50YWluZXIsIHNlZQpDSEVD
S1BBVENIIGluIE1BSU5UQUlORVJTLgoxMi8xOCBDaGVja2luZyBjb21taXQgM2ViZDUxZGMzODkz
IChhY2NlbDogcGFzcyBvYmplY3QgdG8gYWNjZWxfaW5pdF9tYWNoaW5lKQoxMy8xOCBDaGVja2lu
ZyBjb21taXQgOGI0MmE3ZTI1ZjNmICh0Y2c6IGNvbnZlcnQgIi1hY2NlbCB0aHJlYWRzIiB0byBh
IFFPTSBwcm9wZXJ0eSkKMTQvMTggQ2hlY2tpbmcgY29tbWl0IDI0MDY3YjJkNzdkNiAodGNnOiBh
ZGQgIi1hY2NlbCB0Y2csIHRiLXNpemUiIGFuZCBkZXByZWNhdGUgIi10Yi1zaXplIikKRVJST1I6
IGxpbmUgb3ZlciA5MCBjaGFyYWN0ZXJzCiMxODk6IEZJTEU6IHZsLmM6Mzc1MDoKKyAgICAgICAg
ICAgICAgICB3YXJuX3JlcG9ydCgiVGhlIC10Yi1zaXplIG9wdGlvbiBpcyBkZXByZWNhdGVkLCB1
c2UgLWFjY2VsIHRjZyx0Yi1zaXplIGluc3RlYWQiKTsKCldBUk5JTkc6IGxpbmUgb3ZlciA4MCBj
aGFyYWN0ZXJzCiMxOTA6IEZJTEU6IHZsLmM6Mzc1MToKKyAgICAgICAgICAgICAgICBvYmplY3Rf
cmVnaXN0ZXJfc3VnYXJfcHJvcChBQ0NFTF9DTEFTU19OQU1FKCJ0Y2ciKSwgInRiLXNpemUiLCBv
cHRhcmcpOwoKdG90YWw6IDEgZXJyb3JzLCAxIHdhcm5pbmdzLCAxNDggbGluZXMgY2hlY2tlZAoK
UGF0Y2ggMTQvMTggaGFzIHN0eWxlIHByb2JsZW1zLCBwbGVhc2UgcmV2aWV3LiAgSWYgYW55IG9m
IHRoZXNlIGVycm9ycwphcmUgZmFsc2UgcG9zaXRpdmVzIHJlcG9ydCB0aGVtIHRvIHRoZSBtYWlu
dGFpbmVyLCBzZWUKQ0hFQ0tQQVRDSCBpbiBNQUlOVEFJTkVSUy4KCjE1LzE4IENoZWNraW5nIGNv
bW1pdCBkNzJkM2VhNWU3ZTQgKHhlbjogY29udmVydCAiLW1hY2hpbmUgaWdkLXBhc3N0aHJ1IiB0
byBhbiBhY2NlbGVyYXRvciBwcm9wZXJ0eSkKMTYvMTggQ2hlY2tpbmcgY29tbWl0IDgwMGM5NTgx
OWJhNyAoa3ZtOiBjb252ZXJ0ICItbWFjaGluZSBrdm1fc2hhZG93X21lbSIgdG8gYW4gYWNjZWxl
cmF0b3IgcHJvcGVydHkpCldBUk5JTkc6IGxpbmUgb3ZlciA4MCBjaGFyYWN0ZXJzCiMyMjg6IEZJ
TEU6IHRhcmdldC9pMzg2L2t2bS5jOjIxNjY6CisgICAgc2hhZG93X21lbSA9IG9iamVjdF9wcm9w
ZXJ0eV9nZXRfaW50KE9CSkVDVChzKSwgImt2bS1zaGFkb3ctbWVtIiwgJmVycm9yX2Fib3J0KTsK
CnRvdGFsOiAwIGVycm9ycywgMSB3YXJuaW5ncywgMTk3IGxpbmVzIGNoZWNrZWQKClBhdGNoIDE2
LzE4IGhhcyBzdHlsZSBwcm9ibGVtcywgcGxlYXNlIHJldmlldy4gIElmIGFueSBvZiB0aGVzZSBl
cnJvcnMKYXJlIGZhbHNlIHBvc2l0aXZlcyByZXBvcnQgdGhlbSB0byB0aGUgbWFpbnRhaW5lciwg
c2VlCkNIRUNLUEFUQ0ggaW4gTUFJTlRBSU5FUlMuCjE3LzE4IENoZWNraW5nIGNvbW1pdCA2YTFk
YmVlN2Y2MTAgKGt2bTogaW50cm9kdWNlIGt2bV9rZXJuZWxfaXJxY2hpcF8qIGZ1bmN0aW9ucykK
MTgvMTggQ2hlY2tpbmcgY29tbWl0IGZhYmI4YjMwYTcxMSAoa3ZtOiBjb252ZXJ0ICItbWFjaGlu
ZSBrZXJuZWxfaXJxY2hpcCIgdG8gYW4gYWNjZWxlcmF0b3IgcHJvcGVydHkpCldBUk5JTkc6IEJs
b2NrIGNvbW1lbnRzIHVzZSBhIGxlYWRpbmcgLyogb24gYSBzZXBhcmF0ZSBsaW5lCiM4NTogRklM
RTogYWNjZWwva3ZtL2t2bS1hbGwuYzozMDA3OgorICAgICAgICAgICAgLyogVGhlIHZhbHVlIHdh
cyBjaGVja2VkIGluIHZpc2l0X3R5cGVfT25PZmZTcGxpdCgpIGFib3ZlLiBJZgoKdG90YWw6IDAg
ZXJyb3JzLCAxIHdhcm5pbmdzLCAyNDEgbGluZXMgY2hlY2tlZAoKUGF0Y2ggMTgvMTggaGFzIHN0
eWxlIHByb2JsZW1zLCBwbGVhc2UgcmV2aWV3LiAgSWYgYW55IG9mIHRoZXNlIGVycm9ycwphcmUg
ZmFsc2UgcG9zaXRpdmVzIHJlcG9ydCB0aGVtIHRvIHRoZSBtYWludGFpbmVyLCBzZWUKQ0hFQ0tQ
QVRDSCBpbiBNQUlOVEFJTkVSUy4KPT09IE9VVFBVVCBFTkQgPT09CgpUZXN0IGNvbW1hbmQgZXhp
dGVkIHdpdGggY29kZTogMQoKClRoZSBmdWxsIGxvZyBpcyBhdmFpbGFibGUgYXQKaHR0cDovL3Bh
dGNoZXcub3JnL2xvZ3MvMTU3NTkwMzcwNS0xMjkyNS0xLWdpdC1zZW5kLWVtYWlsLXBib256aW5p
QHJlZGhhdC5jb20vdGVzdGluZy5jaGVja3BhdGNoLz90eXBlPW1lc3NhZ2UuCi0tLQpFbWFpbCBn
ZW5lcmF0ZWQgYXV0b21hdGljYWxseSBieSBQYXRjaGV3IFtodHRwczovL3BhdGNoZXcub3JnL10u
ClBsZWFzZSBzZW5kIHlvdXIgZmVlZGJhY2sgdG8gcGF0Y2hldy1kZXZlbEByZWRoYXQuY29t


