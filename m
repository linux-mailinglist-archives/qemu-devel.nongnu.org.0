Return-Path: <qemu-devel-bounces+lists+qemu-devel=lfdr.de@nongnu.org>
X-Original-To: lists+qemu-devel@lfdr.de
Delivered-To: lists+qemu-devel@lfdr.de
Received: from lists.gnu.org (lists.gnu.org [209.51.188.17])
	by mail.lfdr.de (Postfix) with ESMTPS id F3F8639A624
	for <lists+qemu-devel@lfdr.de>; Thu,  3 Jun 2021 18:46:10 +0200 (CEST)
Received: from localhost ([::1]:57808 helo=lists1p.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.90_1)
	(envelope-from <qemu-devel-bounces+lists+qemu-devel=lfdr.de@nongnu.org>)
	id 1loqTx-0006Ir-V8
	for lists+qemu-devel@lfdr.de; Thu, 03 Jun 2021 12:46:09 -0400
Received: from eggs.gnu.org ([2001:470:142:3::10]:46090)
 by lists.gnu.org with esmtps (TLS1.2:ECDHE_RSA_AES_256_GCM_SHA384:256)
 (Exim 4.90_1) (envelope-from <no-reply@patchew.org>)
 id 1loqR6-0001V3-T6
 for qemu-devel@nongnu.org; Thu, 03 Jun 2021 12:43:12 -0400
Resent-Date: Thu, 03 Jun 2021 12:43:12 -0400
Resent-Message-Id: <E1loqR6-0001V3-T6@lists.gnu.org>
Received: from sender4-of-o53.zoho.com ([136.143.188.53]:21374)
 by eggs.gnu.org with esmtps (TLS1.2:ECDHE_RSA_AES_256_GCM_SHA384:256)
 (Exim 4.90_1) (envelope-from <no-reply@patchew.org>)
 id 1loqR1-0001fe-GW
 for qemu-devel@nongnu.org; Thu, 03 Jun 2021 12:43:12 -0400
ARC-Seal: i=1; a=rsa-sha256; t=1622738581; cv=none; 
 d=zohomail.com; s=zohoarc; 
 b=HsI3YUfsej4DUd78+xSFjfJXzl9xu1lWhlM5TW45FAvGUMPNgpNb0ovbtwp2HkuF3uJs0tRs74frY95sEt3am4Ed/3D8BUNrfZa/7pDZ4PhTp1PXUhudCBaFPYq13Nsh4i53I1MbBu/MgNvwemYKMrl6GdCAEGJxa6ZpJmB0Ono=
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=zohomail.com;
 s=zohoarc; t=1622738581;
 h=Content-Type:Content-Transfer-Encoding:Cc:Date:From:In-Reply-To:MIME-Version:Message-ID:Reply-To:Subject:To;
 bh=Kn07YI9NAruA5fDu4jt/6OltCVAPrPcrBHyBvnVa5IY=; 
 b=HZNQBmVetch/EtmXaozj5tStTiy69z80yKzGkDNo/56uOgVjUZTbXQL4B9Ai8TyqvcSK/33XPC9Hazi/R3PiOKeClELSOnHHvfO0DOwr4+QR6sxjufBYzvvlVzSpxzOeXPA3ubJHEH2GfQj7868OA2rX/raB/hgN+DrymhjEPAQ=
ARC-Authentication-Results: i=1; mx.zohomail.com;
 spf=pass  smtp.mailfrom=no-reply@patchew.org;
 dmarc=pass header.from=<no-reply@patchew.org>
Received: from [172.17.0.3] (23.253.156.214 [23.253.156.214]) by
 mx.zohomail.com with SMTPS id 1622738578521456.30918030836347;
 Thu, 3 Jun 2021 09:42:58 -0700 (PDT)
In-Reply-To: <20210603155904.26021-1-peter.maydell@linaro.org>
Subject: Re: [PULL 00/45] target-arm queue
Message-ID: <162273857737.3762.2403426045206341731@c34b7421dd88>
MIME-Version: 1.0
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Resent-From: 
From: no-reply@patchew.org
To: peter.maydell@linaro.org
Date: Thu, 3 Jun 2021 09:42:58 -0700 (PDT)
X-ZohoMailClient: External
Received-SPF: pass client-ip=136.143.188.53; envelope-from=no-reply@patchew.org;
 helo=sender4-of-o53.zoho.com
X-Spam_score_int: -18
X-Spam_score: -1.9
X-Spam_bar: -
X-Spam_report: (-1.9 / 5.0 requ) BAYES_00=-1.9, RCVD_IN_DNSWL_NONE=-0.0001,
 RCVD_IN_MSPIKE_H3=0.001, RCVD_IN_MSPIKE_WL=0.001, SPF_HELO_NONE=0.001,
 SPF_PASS=-0.001 autolearn=ham autolearn_force=no
X-Spam_action: no action
X-BeenThere: qemu-devel@nongnu.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: <qemu-devel.nongnu.org>
List-Unsubscribe: <https://lists.nongnu.org/mailman/options/qemu-devel>,
 <mailto:qemu-devel-request@nongnu.org?subject=unsubscribe>
List-Archive: <https://lists.nongnu.org/archive/html/qemu-devel>
List-Post: <mailto:qemu-devel@nongnu.org>
List-Help: <mailto:qemu-devel-request@nongnu.org?subject=help>
List-Subscribe: <https://lists.nongnu.org/mailman/listinfo/qemu-devel>,
 <mailto:qemu-devel-request@nongnu.org?subject=subscribe>
Reply-To: qemu-devel@nongnu.org
Cc: qemu-devel@nongnu.org
Errors-To: qemu-devel-bounces+lists+qemu-devel=lfdr.de@nongnu.org
Sender: "Qemu-devel" <qemu-devel-bounces+lists+qemu-devel=lfdr.de@nongnu.org>

UGF0Y2hldyBVUkw6IGh0dHBzOi8vcGF0Y2hldy5vcmcvUUVNVS8yMDIxMDYwMzE1NTkwNC4yNjAy
MS0xLXBldGVyLm1heWRlbGxAbGluYXJvLm9yZy8KCgoKSGksCgpUaGlzIHNlcmllcyBzZWVtcyB0
byBoYXZlIHNvbWUgY29kaW5nIHN0eWxlIHByb2JsZW1zLiBTZWUgb3V0cHV0IGJlbG93IGZvcgpt
b3JlIGluZm9ybWF0aW9uOgoKVHlwZTogc2VyaWVzCk1lc3NhZ2UtaWQ6IDIwMjEwNjAzMTU1OTA0
LjI2MDIxLTEtcGV0ZXIubWF5ZGVsbEBsaW5hcm8ub3JnClN1YmplY3Q6IFtQVUxMIDAwLzQ1XSB0
YXJnZXQtYXJtIHF1ZXVlCgo9PT0gVEVTVCBTQ1JJUFQgQkVHSU4gPT09CiMhL2Jpbi9iYXNoCmdp
dCByZXYtcGFyc2UgYmFzZSA+IC9kZXYvbnVsbCB8fCBleGl0IDAKZ2l0IGNvbmZpZyAtLWxvY2Fs
IGRpZmYucmVuYW1lbGltaXQgMApnaXQgY29uZmlnIC0tbG9jYWwgZGlmZi5yZW5hbWVzIFRydWUK
Z2l0IGNvbmZpZyAtLWxvY2FsIGRpZmYuYWxnb3JpdGhtIGhpc3RvZ3JhbQouL3NjcmlwdHMvY2hl
Y2twYXRjaC5wbCAtLW1haWxiYWNrIGJhc2UuLgo9PT0gVEVTVCBTQ1JJUFQgRU5EID09PQoKVXBk
YXRpbmcgM2M4Y2Y1YTljMjFmZjg3ODIxNjRkMWRlZjdmNDRiZDg4ODcxMzM4NApGcm9tIGh0dHBz
Oi8vZ2l0aHViLmNvbS9wYXRjaGV3LXByb2plY3QvcWVtdQogLSBbdGFnIHVwZGF0ZV0gICAgICBw
YXRjaGV3LzIwMjEwNTI1MTUwNzA2LjI5NDk2OC0xLXJpY2hhcmQuaGVuZGVyc29uQGxpbmFyby5v
cmcgLT4gcGF0Y2hldy8yMDIxMDUyNTE1MDcwNi4yOTQ5NjgtMS1yaWNoYXJkLmhlbmRlcnNvbkBs
aW5hcm8ub3JnCiAtIFt0YWcgdXBkYXRlXSAgICAgIHBhdGNoZXcvMjAyMTA2MDMwOTAzMTAuMjc0
OTg5Mi0xLWY0YnVnQGFtc2F0Lm9yZyAtPiBwYXRjaGV3LzIwMjEwNjAzMDkwMzEwLjI3NDk4OTIt
MS1mNGJ1Z0BhbXNhdC5vcmcKIC0gW3RhZyB1cGRhdGVdICAgICAgcGF0Y2hldy8yMDIxMDYwMzE0
MjcxNC4yMjQyMTAtMS1wYm9uemluaUByZWRoYXQuY29tIC0+IHBhdGNoZXcvMjAyMTA2MDMxNDI3
MTQuMjI0MjEwLTEtcGJvbnppbmlAcmVkaGF0LmNvbQogKiBbbmV3IHRhZ10gICAgICAgICBwYXRj
aGV3LzIwMjEwNjAzMTU1OTA0LjI2MDIxLTEtcGV0ZXIubWF5ZGVsbEBsaW5hcm8ub3JnIC0+IHBh
dGNoZXcvMjAyMTA2MDMxNTU5MDQuMjYwMjEtMS1wZXRlci5tYXlkZWxsQGxpbmFyby5vcmcKU3dp
dGNoZWQgdG8gYSBuZXcgYnJhbmNoICd0ZXN0JwoxM2QxOTcyIHRlc3RzL3VuaXQvdGVzdC12bXN0
YXRlOiBBc3NlcnQgdGhhdCBkdXAoKSBhbmQgbWtzdGVtcCgpIHN1Y2NlZWQKNjVhOWFkMyB0ZXN0
cy9xdGVzdC90cG0tdGVzdHM6IFJlbW92ZSB1bm5lY2Vzc2FyeSBOVUxMIGNoZWNrcwoyZDk3MTdh
IHRlc3RzL3F0ZXN0L3BmbGFzaC1jZmkwMi10ZXN0OiBBdm9pZCBwb3RlbnRpYWwgaW50ZWdlciBv
dmVyZmxvdwo1N2FkYzY4IHRlc3RzL3F0ZXN0L2hkLWdlby10ZXN0OiBGaXggY2hlY2tzIG9uIG1r
c3RlbXAoKSByZXR1cm4gdmFsdWUKYmM5MmQ1ZSB0ZXN0cy9xdGVzdC9lMTAwMGUtdGVzdDogQ2hl
Y2sgcWVtdV9yZWN2KCkgc3VjY2VlZGVkCmI5ZDAwNzIgdGVzdHMvcXRlc3QvYmlvcy10YWJsZXMt
dGVzdDogQ2hlY2sgZm9yIGR1cDIoKSBmYWlsdXJlCjg1NzA2ZWQgaHZmOiBTaW1wbGlmeSBwb3N0
IHJlc2V0L2luaXQvbG9hZHZtIGhvb2tzCjc3ZTMxY2MgaHZmOiBJbnRyb2R1Y2UgaHZmIHZjcHUg
c3RydWN0CmYzZTU3MTEgaHZmOiBSZW1vdmUgaHZmLWFjY2VsLW9wcy5oCmNhZWU2NmQgaHZmOiBN
YWtlIHN5bmNocm9uaXplIGZ1bmN0aW9ucyBzdGF0aWMKYjI3NTFhYiBodmY6IFVzZSBjcHVfc3lu
Y2hyb25pemVfc3RhdGUoKQo3MzVjMWMzIGh2ZjogU3BsaXQgb3V0IGNvbW1vbiBjb2RlIG9uIHZj
cHUgaW5pdCBhbmQgZGVzdHJveQoyNGY4ZTk0IGh2ZjogUmVtb3ZlIHVzZSBvZiBodl91dmFkZHJf
dCBhbmQgaHZfZ3BhZGRyX3QKMzM4NmYyNyBodmY6IE1ha2UgaHZmX3NldF9waHlzX21lbSgpIHN0
YXRpYwpiOGEwNTFiIGh2ZjogTW92ZSBodmYgaW50ZXJuYWwgZGVmaW5pdGlvbnMgaW50byBjb21t
b24gaGVhZGVyCmQxMDJjMTggaHZmOiBNb3ZlIGNwdSBmdW5jdGlvbnMgaW50byBjb21tb24gZGly
ZWN0b3J5CmJhZDI4NjggaHZmOiBNb3ZlIHZjcHUgdGhyZWFkIGZ1bmN0aW9ucyBpbnRvIGNvbW1v
biBkaXJlY3RvcnkKZGY4Nzk1MyBodmY6IE1vdmUgYXNzZXJ0X2h2Zl9vaygpIGludG8gY29tbW9u
IGRpcmVjdG9yeQo2NDk4OWJlIHRhcmdldC9hcm06IEVuYWJsZSBCRmxvYXQxNiBleHRlbnNpb25z
CjU5ZWVlNjMgbGludXgtdXNlci9hYXJjaDY0OiBFbmFibGUgaHdjYXAgYml0cyBmb3IgYmZsb2F0
MTYKNWRlZmVmMSB0YXJnZXQvYXJtOiBJbXBsZW1lbnQgYmZsb2F0IHdpZGVuaW5nIGZtYSAoaW5k
ZXhlZCkKMWFmMjc4MSB0YXJnZXQvYXJtOiBJbXBsZW1lbnQgYmZsb2F0IHdpZGVuaW5nIGZtYSAo
dmVjdG9yKQo3NDE0ZTc2IHRhcmdldC9hcm06IEltcGxlbWVudCBiZmxvYXQxNiBtYXRyaXggbXVs
dGlwbHkgYWNjdW11bGF0ZQo4NzZjNjdiIHRhcmdldC9hcm06IEltcGxlbWVudCBiZmxvYXQxNiBk
b3QgcHJvZHVjdCAoaW5kZXhlZCkKZGZmOTlhOSB0YXJnZXQvYXJtOiBJbXBsZW1lbnQgYmZsb2F0
MTYgZG90IHByb2R1Y3QgKHZlY3RvcikKMGM0YzA0YiBzb2Z0ZnB1OiBBZGQgZmxvYXRfcm91bmRf
dG9fb2RkX2luZgo1MTVjNGJhIHRhcmdldC9hcm06IEltcGxlbWVudCB2ZWN0b3IgZmxvYXQzMiB0
byBiZmxvYXQxNiBjb252ZXJzaW9uCmU4YmM1MDIgdGFyZ2V0L2FybTogSW1wbGVtZW50IHNjYWxh
ciBmbG9hdDMyIHRvIGJmbG9hdDE2IGNvbnZlcnNpb24KYjg2MzljYiB0YXJnZXQvYXJtOiBVbmlm
eSB1bmFsbG9jYXRlZCBwYXRoIGluIGRpc2FzX2ZwXzFzcmMKNTNhNGYxYyB0YXJnZXQvYXJtOiBB
ZGQgaXNhcl9mZWF0dXJlX3thYTMyLCBhYTY0LCBhYTY0X3N2ZX1fYmYxNgpkYzYxOWM3IHRhcmdl
dC9hcm06IHVzZSByYWlzZV9leGNlcHRpb25fcmEgZm9yIHN0YWNrIGxpbWl0IGV4Y2VwdGlvbgpl
ODFlZTViIHRhcmdldC9hcm06IHVzZSByYWlzZV9leGNlcHRpb25fcmEgZm9yIE1URSBjaGVjayBm
YWlsdXJlCjFiMDAyYjggdGFyZ2V0L2FybTogZm9sZCBkb19yYWlzZV9leGNlcHRpb24gaW50byBy
YWlzZV9leGNlcHRpb24KZTU4NmQ5YiB0YXJnZXQvYXJtOiBmaXggbWlzc2luZyBleGNlcHRpb24g
Y2xhc3MKNzg4M2FiMiB0YXJnZXQvYXJtOiBNYXJrIExEU3tNSU4sTUFYfSBhcyBzaWduZWQgb3Bl
cmF0aW9ucwo4MGM1NmVlIGRvY3M6IEZpeCBpbnN0YWxsYXRpb24gb2YgbWFuIHBhZ2VzIHdpdGgg
U3BoaW54IDQueApjNTFiZTY4IGFybTogQ29uc2lzdGVudGx5IHVzZSAiQ29ydGV4LUF4eCIsIG5v
dCAiQ29ydGV4IEF4eCIKNTBiZTg4MiB0YXJnZXQvYXJtOiBBbGxvdyBib2FyZCBtb2RlbHMgdG8g
c3BlY2lmeSBpbml0aWFsIE5TIFZUT1IKMzdiNDQ0MyB0YXJnZXQvYXJtOiBNYWtlIEZQU0NSLkxU
UFNJWkUgd3JpdGFibGUgZm9yIE1WRQpmOGYwMmZmIHRhcmdldC9hcm06IEltcGxlbWVudCBNLXBy
b2ZpbGUgVlBSIHJlZ2lzdGVyCmY4ZWUwN2EgdGFyZ2V0L2FybTogRml4IHJldHVybiB2YWx1ZXMg
aW4gZnBfc3lzcmVnX2NoZWNrcygpCjU5MjA4YzUgdGFyZ2V0L2FybTogQWRkIE1WRSBjaGVjayB0
byBWTU9WX3JlZ19zcCBhbmQgVk1PVl9yZWdfZHAKMWU3YzY5OCB0YXJnZXQvYXJtOiBNb3ZlIGZw
c3AvZnBkcCBpc2FyIGNoZWNrIGludG8gY2FsbGVycyBvZiBkb192ZnBfMm9wX3NwL2RwCmI1ZGMy
YjUgdGFyZ2V0L2FybTogVXBkYXRlIGZlYXR1cmUgY2hlY2tzIGZvciBpbnNucyB3aGljaCBhcmUg
Ik1WRSBvciBGUCIKMzdlZGZlOSB0YXJnZXQvYXJtOiBBZGQgaXNhciBmZWF0dXJlIGNoZWNrIGZ1
bmN0aW9ucyBmb3IgTVZFCgo9PT0gT1VUUFVUIEJFR0lOID09PQoxLzQ1IENoZWNraW5nIGNvbW1p
dCAzN2VkZmU5MjMyZjIgKHRhcmdldC9hcm06IEFkZCBpc2FyIGZlYXR1cmUgY2hlY2sgZnVuY3Rp
b25zIGZvciBNVkUpCjIvNDUgQ2hlY2tpbmcgY29tbWl0IGI1ZGMyYjVmZTg0MCAodGFyZ2V0L2Fy
bTogVXBkYXRlIGZlYXR1cmUgY2hlY2tzIGZvciBpbnNucyB3aGljaCBhcmUgIk1WRSBvciBGUCIp
CjMvNDUgQ2hlY2tpbmcgY29tbWl0IDFlN2M2OThhMDgwNSAodGFyZ2V0L2FybTogTW92ZSBmcHNw
L2ZwZHAgaXNhciBjaGVjayBpbnRvIGNhbGxlcnMgb2YgZG9fdmZwXzJvcF9zcC9kcCkKNC80NSBD
aGVja2luZyBjb21taXQgNTkyMDhjNTExZmUzICh0YXJnZXQvYXJtOiBBZGQgTVZFIGNoZWNrIHRv
IFZNT1ZfcmVnX3NwIGFuZCBWTU9WX3JlZ19kcCkKRVJST1I6IHNwYWNlcyByZXF1aXJlZCBhcm91
bmQgdGhhdCAnKicgKGN0eDpXeFYpCiMzMDogRklMRTogdGFyZ2V0L2FybS90cmFuc2xhdGUtdmZw
LmM6MjgyMzoKKyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYXJnXyMjSU5T
TiMjXyMjUFJFQyAqYSkgICBcCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgXgoKdG90YWw6IDEgZXJyb3JzLCAwIHdhcm5pbmdzLCAyMSBs
aW5lcyBjaGVja2VkCgpQYXRjaCA0LzQ1IGhhcyBzdHlsZSBwcm9ibGVtcywgcGxlYXNlIHJldmll
dy4gIElmIGFueSBvZiB0aGVzZSBlcnJvcnMKYXJlIGZhbHNlIHBvc2l0aXZlcyByZXBvcnQgdGhl
bSB0byB0aGUgbWFpbnRhaW5lciwgc2VlCkNIRUNLUEFUQ0ggaW4gTUFJTlRBSU5FUlMuCgo1LzQ1
IENoZWNraW5nIGNvbW1pdCBmOGVlMDdhMDYxZjUgKHRhcmdldC9hcm06IEZpeCByZXR1cm4gdmFs
dWVzIGluIGZwX3N5c3JlZ19jaGVja3MoKSkKNi80NSBDaGVja2luZyBjb21taXQgZjhmMDJmZjk5
YzFlICh0YXJnZXQvYXJtOiBJbXBsZW1lbnQgTS1wcm9maWxlIFZQUiByZWdpc3RlcikKNy80NSBD
aGVja2luZyBjb21taXQgMzdiNDQ0MzU2OTY4ICh0YXJnZXQvYXJtOiBNYWtlIEZQU0NSLkxUUFNJ
WkUgd3JpdGFibGUgZm9yIE1WRSkKOC80NSBDaGVja2luZyBjb21taXQgNTBiZTg4MmU3NGI0ICh0
YXJnZXQvYXJtOiBBbGxvdyBib2FyZCBtb2RlbHMgdG8gc3BlY2lmeSBpbml0aWFsIE5TIFZUT1Ip
CldBUk5JTkc6IGxpbmUgb3ZlciA4MCBjaGFyYWN0ZXJzCiM1NzogRklMRTogaW5jbHVkZS9ody9h
cm0vYXJtdjdtLmg6NDk6CisgKiArIFByb3BlcnR5ICJpbml0LW5zdnRvciI6IG5vbi1zZWN1cmUg
VlRPUiByZXNldCB2YWx1ZSAoZm9yd2FyZGVkIHRvIENQVSBvYmplY3QpCgp0b3RhbDogMCBlcnJv
cnMsIDEgd2FybmluZ3MsIDYzIGxpbmVzIGNoZWNrZWQKClBhdGNoIDgvNDUgaGFzIHN0eWxlIHBy
b2JsZW1zLCBwbGVhc2UgcmV2aWV3LiAgSWYgYW55IG9mIHRoZXNlIGVycm9ycwphcmUgZmFsc2Ug
cG9zaXRpdmVzIHJlcG9ydCB0aGVtIHRvIHRoZSBtYWludGFpbmVyLCBzZWUKQ0hFQ0tQQVRDSCBp
biBNQUlOVEFJTkVSUy4KOS80NSBDaGVja2luZyBjb21taXQgYzUxYmU2ODcyNDJmIChhcm06IENv
bnNpc3RlbnRseSB1c2UgIkNvcnRleC1BeHgiLCBub3QgIkNvcnRleCBBeHgiKQoxMC80NSBDaGVj
a2luZyBjb21taXQgODBjNTZlZTM2MGQzIChkb2NzOiBGaXggaW5zdGFsbGF0aW9uIG9mIG1hbiBw
YWdlcyB3aXRoIFNwaGlueCA0LngpCjExLzQ1IENoZWNraW5nIGNvbW1pdCA3ODgzYWIyZTE5MzYg
KHRhcmdldC9hcm06IE1hcmsgTERTe01JTixNQVh9IGFzIHNpZ25lZCBvcGVyYXRpb25zKQoxMi80
NSBDaGVja2luZyBjb21taXQgZTU4NmQ5YmQwYmMwICh0YXJnZXQvYXJtOiBmaXggbWlzc2luZyBl
eGNlcHRpb24gY2xhc3MpCjEzLzQ1IENoZWNraW5nIGNvbW1pdCAxYjAwMmI4ODQ4ZDYgKHRhcmdl
dC9hcm06IGZvbGQgZG9fcmFpc2VfZXhjZXB0aW9uIGludG8gcmFpc2VfZXhjZXB0aW9uKQoxNC80
NSBDaGVja2luZyBjb21taXQgZTgxZWU1YjU2ZGE3ICh0YXJnZXQvYXJtOiB1c2UgcmFpc2VfZXhj
ZXB0aW9uX3JhIGZvciBNVEUgY2hlY2sgZmFpbHVyZSkKMTUvNDUgQ2hlY2tpbmcgY29tbWl0IGRj
NjE5Yzc3OGYwNCAodGFyZ2V0L2FybTogdXNlIHJhaXNlX2V4Y2VwdGlvbl9yYSBmb3Igc3RhY2sg
bGltaXQgZXhjZXB0aW9uKQoxNi80NSBDaGVja2luZyBjb21taXQgNTNhNGYxY2JjMzNjICh0YXJn
ZXQvYXJtOiBBZGQgaXNhcl9mZWF0dXJlX3thYTMyLCBhYTY0LCBhYTY0X3N2ZX1fYmYxNikKMTcv
NDUgQ2hlY2tpbmcgY29tbWl0IGI4NjM5Y2IwNTRiOSAodGFyZ2V0L2FybTogVW5pZnkgdW5hbGxv
Y2F0ZWQgcGF0aCBpbiBkaXNhc19mcF8xc3JjKQoxOC80NSBDaGVja2luZyBjb21taXQgZThiYzUw
Mjk0OWM5ICh0YXJnZXQvYXJtOiBJbXBsZW1lbnQgc2NhbGFyIGZsb2F0MzIgdG8gYmZsb2F0MTYg
Y29udmVyc2lvbikKMTkvNDUgQ2hlY2tpbmcgY29tbWl0IDUxNWM0YmE0NWJhMSAodGFyZ2V0L2Fy
bTogSW1wbGVtZW50IHZlY3RvciBmbG9hdDMyIHRvIGJmbG9hdDE2IGNvbnZlcnNpb24pCjIwLzQ1
IENoZWNraW5nIGNvbW1pdCAwYzRjMDRiNWJhOWMgKHNvZnRmcHU6IEFkZCBmbG9hdF9yb3VuZF90
b19vZGRfaW5mKQoyMS80NSBDaGVja2luZyBjb21taXQgZGZmOTlhOTBkOWYyICh0YXJnZXQvYXJt
OiBJbXBsZW1lbnQgYmZsb2F0MTYgZG90IHByb2R1Y3QgKHZlY3RvcikpCjIyLzQ1IENoZWNraW5n
IGNvbW1pdCA4NzZjNjdiY2JjNGQgKHRhcmdldC9hcm06IEltcGxlbWVudCBiZmxvYXQxNiBkb3Qg
cHJvZHVjdCAoaW5kZXhlZCkpCjIzLzQ1IENoZWNraW5nIGNvbW1pdCA3NDE0ZTc2NDE0MDEgKHRh
cmdldC9hcm06IEltcGxlbWVudCBiZmxvYXQxNiBtYXRyaXggbXVsdGlwbHkgYWNjdW11bGF0ZSkK
MjQvNDUgQ2hlY2tpbmcgY29tbWl0IDFhZjI3ODE5MzQ0NiAodGFyZ2V0L2FybTogSW1wbGVtZW50
IGJmbG9hdCB3aWRlbmluZyBmbWEgKHZlY3RvcikpCjI1LzQ1IENoZWNraW5nIGNvbW1pdCA1ZGVm
ZWYxYTU0ZmIgKHRhcmdldC9hcm06IEltcGxlbWVudCBiZmxvYXQgd2lkZW5pbmcgZm1hIChpbmRl
eGVkKSkKMjYvNDUgQ2hlY2tpbmcgY29tbWl0IDU5ZWVlNjNkMzEzMCAobGludXgtdXNlci9hYXJj
aDY0OiBFbmFibGUgaHdjYXAgYml0cyBmb3IgYmZsb2F0MTYpCjI3LzQ1IENoZWNraW5nIGNvbW1p
dCA2NDk4OWJlMTdmZGIgKHRhcmdldC9hcm06IEVuYWJsZSBCRmxvYXQxNiBleHRlbnNpb25zKQoy
OC80NSBDaGVja2luZyBjb21taXQgZGY4Nzk1MzM5MTgwIChodmY6IE1vdmUgYXNzZXJ0X2h2Zl9v
aygpIGludG8gY29tbW9uIGRpcmVjdG9yeSkKMjkvNDUgQ2hlY2tpbmcgY29tbWl0IGJhZDI4Njg0
MWFjZCAoaHZmOiBNb3ZlIHZjcHUgdGhyZWFkIGZ1bmN0aW9ucyBpbnRvIGNvbW1vbiBkaXJlY3Rv
cnkpCldBUk5JTkc6IGFkZGVkLCBtb3ZlZCBvciBkZWxldGVkIGZpbGUocyksIGRvZXMgTUFJTlRB
SU5FUlMgbmVlZCB1cGRhdGluZz8KIzIxOiAKIHt0YXJnZXQvaTM4NiA9PiBhY2NlbH0vaHZmL2h2
Zi1hY2NlbC1vcHMuYyB8IDAKCnRvdGFsOiAwIGVycm9ycywgMSB3YXJuaW5ncywgMjEgbGluZXMg
Y2hlY2tlZAoKUGF0Y2ggMjkvNDUgaGFzIHN0eWxlIHByb2JsZW1zLCBwbGVhc2UgcmV2aWV3LiAg
SWYgYW55IG9mIHRoZXNlIGVycm9ycwphcmUgZmFsc2UgcG9zaXRpdmVzIHJlcG9ydCB0aGVtIHRv
IHRoZSBtYWludGFpbmVyLCBzZWUKQ0hFQ0tQQVRDSCBpbiBNQUlOVEFJTkVSUy4KMzAvNDUgQ2hl
Y2tpbmcgY29tbWl0IGQxMDJjMThjODJkOCAoaHZmOiBNb3ZlIGNwdSBmdW5jdGlvbnMgaW50byBj
b21tb24gZGlyZWN0b3J5KQozMS80NSBDaGVja2luZyBjb21taXQgYjhhMDUxYjI3MDVmIChodmY6
IE1vdmUgaHZmIGludGVybmFsIGRlZmluaXRpb25zIGludG8gY29tbW9uIGhlYWRlcikKMzIvNDUg
Q2hlY2tpbmcgY29tbWl0IDMzODZmMjcyNTYyMyAoaHZmOiBNYWtlIGh2Zl9zZXRfcGh5c19tZW0o
KSBzdGF0aWMpCjMzLzQ1IENoZWNraW5nIGNvbW1pdCAyNGY4ZTk0ZDU5YTggKGh2ZjogUmVtb3Zl
IHVzZSBvZiBodl91dmFkZHJfdCBhbmQgaHZfZ3BhZGRyX3QpCjM0LzQ1IENoZWNraW5nIGNvbW1p
dCA3MzVjMWMzYjZmOGIgKGh2ZjogU3BsaXQgb3V0IGNvbW1vbiBjb2RlIG9uIHZjcHUgaW5pdCBh
bmQgZGVzdHJveSkKMzUvNDUgQ2hlY2tpbmcgY29tbWl0IGIyNzUxYWI2NTI4ZiAoaHZmOiBVc2Ug
Y3B1X3N5bmNocm9uaXplX3N0YXRlKCkpCjM2LzQ1IENoZWNraW5nIGNvbW1pdCBjYWVlNjZkYzRj
ZDQgKGh2ZjogTWFrZSBzeW5jaHJvbml6ZSBmdW5jdGlvbnMgc3RhdGljKQozNy80NSBDaGVja2lu
ZyBjb21taXQgZjNlNTcxMTY4ZDM4IChodmY6IFJlbW92ZSBodmYtYWNjZWwtb3BzLmgpCldBUk5J
Tkc6IGFkZGVkLCBtb3ZlZCBvciBkZWxldGVkIGZpbGUocyksIGRvZXMgTUFJTlRBSU5FUlMgbmVl
ZCB1cGRhdGluZz8KIzM3OiAKZGVsZXRlZCBmaWxlIG1vZGUgMTAwNjQ0Cgp0b3RhbDogMCBlcnJv
cnMsIDEgd2FybmluZ3MsIDIzIGxpbmVzIGNoZWNrZWQKClBhdGNoIDM3LzQ1IGhhcyBzdHlsZSBw
cm9ibGVtcywgcGxlYXNlIHJldmlldy4gIElmIGFueSBvZiB0aGVzZSBlcnJvcnMKYXJlIGZhbHNl
IHBvc2l0aXZlcyByZXBvcnQgdGhlbSB0byB0aGUgbWFpbnRhaW5lciwgc2VlCkNIRUNLUEFUQ0gg
aW4gTUFJTlRBSU5FUlMuCjM4LzQ1IENoZWNraW5nIGNvbW1pdCA3N2UzMWNjNTE0NTAgKGh2Zjog
SW50cm9kdWNlIGh2ZiB2Y3B1IHN0cnVjdCkKV0FSTklORzogbGluZSBvdmVyIDgwIGNoYXJhY3Rl
cnMKIzE1NzogRklMRTogdGFyZ2V0L2kzODYvaHZmL2h2Zi5jOjI2MzoKKyAgICB3dm1jcyhjcHUt
Pmh2Zi0+ZmQsIFZNQ1NfRU5UUllfQ1RMUywgY2FwMmN0cmwoaHZmX3N0YXRlLT5odmZfY2Fwcy0+
dm14X2NhcF9lbnRyeSwKCkVSUk9SOiAiKGZvbyopIiBzaG91bGQgYmUgIihmb28gKikiCiM3NzA6
IEZJTEU6IHRhcmdldC9pMzg2L2h2Zi94ODZodmYuYzo4MzoKKyAgICBpZiAoaHZfdmNwdV93cml0
ZV9mcHN0YXRlKGNwdV9zdGF0ZS0+aHZmLT5mZCwgKHZvaWQqKXhzYXZlLCA0MDk2KSkgewoKRVJS
T1I6ICIoZm9vKikiIHNob3VsZCBiZSAiKGZvbyAqKSIKIzg1MTogRklMRTogdGFyZ2V0L2kzODYv
aHZmL3g4Nmh2Zi5jOjE2NToKKyAgICBpZiAoaHZfdmNwdV9yZWFkX2Zwc3RhdGUoY3B1X3N0YXRl
LT5odmYtPmZkLCAodm9pZCopeHNhdmUsIDQwOTYpKSB7Cgp0b3RhbDogMiBlcnJvcnMsIDEgd2Fy
bmluZ3MsIDEwMDEgbGluZXMgY2hlY2tlZAoKUGF0Y2ggMzgvNDUgaGFzIHN0eWxlIHByb2JsZW1z
LCBwbGVhc2UgcmV2aWV3LiAgSWYgYW55IG9mIHRoZXNlIGVycm9ycwphcmUgZmFsc2UgcG9zaXRp
dmVzIHJlcG9ydCB0aGVtIHRvIHRoZSBtYWludGFpbmVyLCBzZWUKQ0hFQ0tQQVRDSCBpbiBNQUlO
VEFJTkVSUy4KCjM5LzQ1IENoZWNraW5nIGNvbW1pdCA4NTcwNmVkYjhlYjYgKGh2ZjogU2ltcGxp
ZnkgcG9zdCByZXNldC9pbml0L2xvYWR2bSBob29rcykKNDAvNDUgQ2hlY2tpbmcgY29tbWl0IGI5
ZDAwNzJiNDhlMiAodGVzdHMvcXRlc3QvYmlvcy10YWJsZXMtdGVzdDogQ2hlY2sgZm9yIGR1cDIo
KSBmYWlsdXJlKQo0MS80NSBDaGVja2luZyBjb21taXQgYmM5MmQ1ZTdmNzY4ICh0ZXN0cy9xdGVz
dC9lMTAwMGUtdGVzdDogQ2hlY2sgcWVtdV9yZWN2KCkgc3VjY2VlZGVkKQo0Mi80NSBDaGVja2lu
ZyBjb21taXQgNTdhZGM2ODRhNDNjICh0ZXN0cy9xdGVzdC9oZC1nZW8tdGVzdDogRml4IGNoZWNr
cyBvbiBta3N0ZW1wKCkgcmV0dXJuIHZhbHVlKQo0My80NSBDaGVja2luZyBjb21taXQgMmQ5NzE3
YWMwYzBhICh0ZXN0cy9xdGVzdC9wZmxhc2gtY2ZpMDItdGVzdDogQXZvaWQgcG90ZW50aWFsIGlu
dGVnZXIgb3ZlcmZsb3cpCjQ0LzQ1IENoZWNraW5nIGNvbW1pdCA2NWE5YWQzOWE4MjggKHRlc3Rz
L3F0ZXN0L3RwbS10ZXN0czogUmVtb3ZlIHVubmVjZXNzYXJ5IE5VTEwgY2hlY2tzKQo0NS80NSBD
aGVja2luZyBjb21taXQgMTNkMTk3MjVkNzI1ICh0ZXN0cy91bml0L3Rlc3Qtdm1zdGF0ZTogQXNz
ZXJ0IHRoYXQgZHVwKCkgYW5kIG1rc3RlbXAoKSBzdWNjZWVkKQo9PT0gT1VUUFVUIEVORCA9PT0K
ClRlc3QgY29tbWFuZCBleGl0ZWQgd2l0aCBjb2RlOiAxCgoKVGhlIGZ1bGwgbG9nIGlzIGF2YWls
YWJsZSBhdApodHRwOi8vcGF0Y2hldy5vcmcvbG9ncy8yMDIxMDYwMzE1NTkwNC4yNjAyMS0xLXBl
dGVyLm1heWRlbGxAbGluYXJvLm9yZy90ZXN0aW5nLmNoZWNrcGF0Y2gvP3R5cGU9bWVzc2FnZS4K
LS0tCkVtYWlsIGdlbmVyYXRlZCBhdXRvbWF0aWNhbGx5IGJ5IFBhdGNoZXcgW2h0dHBzOi8vcGF0
Y2hldy5vcmcvXS4KUGxlYXNlIHNlbmQgeW91ciBmZWVkYmFjayB0byBwYXRjaGV3LWRldmVsQHJl
ZGhhdC5jb20=

