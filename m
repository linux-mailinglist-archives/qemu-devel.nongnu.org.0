Return-Path: <qemu-devel-bounces+lists+qemu-devel=lfdr.de@nongnu.org>
X-Original-To: lists+qemu-devel@lfdr.de
Delivered-To: lists+qemu-devel@lfdr.de
Received: from lists.gnu.org (lists.gnu.org [209.51.188.17])
	by mail.lfdr.de (Postfix) with ESMTPS id 38F7727AE29
	for <lists+qemu-devel@lfdr.de>; Mon, 28 Sep 2020 14:50:06 +0200 (CEST)
Received: from localhost ([::1]:59252 helo=lists1p.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.90_1)
	(envelope-from <qemu-devel-bounces+lists+qemu-devel=lfdr.de@nongnu.org>)
	id 1kMsbV-0000oC-6A
	for lists+qemu-devel@lfdr.de; Mon, 28 Sep 2020 08:50:05 -0400
Received: from eggs.gnu.org ([2001:470:142:3::10]:49762)
 by lists.gnu.org with esmtps (TLS1.2:ECDHE_RSA_AES_256_GCM_SHA384:256)
 (Exim 4.90_1) (envelope-from <tsimpson@qualcomm.com>)
 id 1kMsOv-00041e-0C
 for qemu-devel@nongnu.org; Mon, 28 Sep 2020 08:37:05 -0400
Received: from alexa-out-sd-01.qualcomm.com ([199.106.114.38]:46899)
 by eggs.gnu.org with esmtps (TLS1.2:RSA_AES_256_CBC_SHA1:256)
 (Exim 4.90_1) (envelope-from <tsimpson@qualcomm.com>)
 id 1kMsOq-0005eW-Nr
 for qemu-devel@nongnu.org; Mon, 28 Sep 2020 08:37:04 -0400
DKIM-Signature: v=1; a=rsa-sha256; c=simple/simple;
 d=quicinc.com; i=@quicinc.com; q=dns/txt; s=qcdkim;
 t=1601296620; x=1632832620;
 h=from:to:cc:subject:date:message-id:in-reply-to:
 references:mime-version:content-transfer-encoding;
 bh=7QJImFi5T27hjfpztFkmzb28ZvqTGrpwyAGKaNMZJG8=;
 b=wHSz2xDvJNxn/DwQERNyiQ3by+2hLvZbeAdXnRX6nlKIxvapUN3Qgnyg
 OpZMPZdKZ27daeLmQG9m5qujue1JTeukJ+8KDru80tf97mABk2pMAGcaA
 1lU4nfF8LpIeFmGEvu+FAZoPo7DnaCxDFCjaFA6wuILGIxqSfEYCQszjY U=;
Received: from unknown (HELO ironmsg01-sd.qualcomm.com) ([10.53.140.141])
 by alexa-out-sd-01.qualcomm.com with ESMTP; 28 Sep 2020 05:36:52 -0700
X-QCInternal: smtphost
Received: from vu-tsimpson-aus.qualcomm.com (HELO
 vu-tsimpson1-aus.qualcomm.com) ([10.222.150.1])
 by ironmsg01-sd.qualcomm.com with ESMTP; 28 Sep 2020 05:36:52 -0700
Received: by vu-tsimpson1-aus.qualcomm.com (Postfix, from userid 47164)
 id 572CCCC0; Mon, 28 Sep 2020 07:36:52 -0500 (CDT)
From: Taylor Simpson <tsimpson@quicinc.com>
To: tsimpson@quicinc.com
Subject: [RFC PATCH v4 12/29] Hexagon (target/hexagon) instruction attributes
Date: Mon, 28 Sep 2020 07:36:31 -0500
Message-Id: <1601296608-29390-13-git-send-email-tsimpson@quicinc.com>
X-Mailer: git-send-email 2.7.4
In-Reply-To: <1601296608-29390-1-git-send-email-tsimpson@quicinc.com>
References: <1601296608-29390-1-git-send-email-tsimpson@quicinc.com>
MIME-Version: 1.0
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Received-SPF: pass client-ip=199.106.114.38;
 envelope-from=tsimpson@qualcomm.com; helo=alexa-out-sd-01.qualcomm.com
X-detected-operating-system: by eggs.gnu.org: First seen = 2020/09/28 08:36:52
X-ACL-Warn: Detected OS   = FreeBSD 9.x or newer [fuzzy]
X-Spam_score_int: -40
X-Spam_score: -4.1
X-Spam_bar: ----
X-Spam_report: (-4.1 / 5.0 requ) BAYES_00=-1.9, DKIM_SIGNED=0.1,
 DKIM_VALID=-0.1, DKIM_VALID_AU=-0.1, HEADER_FROM_DIFFERENT_DOMAINS=0.199,
 RCVD_IN_DNSWL_MED=-2.3, SPF_HELO_NONE=0.001,
 SPF_PASS=-0.001 autolearn=ham autolearn_force=no
X-Spam_action: no action
X-BeenThere: qemu-devel@nongnu.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: <qemu-devel.nongnu.org>
List-Unsubscribe: <https://lists.nongnu.org/mailman/options/qemu-devel>,
 <mailto:qemu-devel-request@nongnu.org?subject=unsubscribe>
List-Archive: <https://lists.nongnu.org/archive/html/qemu-devel>
List-Post: <mailto:qemu-devel@nongnu.org>
List-Help: <mailto:qemu-devel-request@nongnu.org?subject=help>
List-Subscribe: <https://lists.nongnu.org/mailman/listinfo/qemu-devel>,
 <mailto:qemu-devel-request@nongnu.org?subject=subscribe>
Cc: "open list:All patches CC here" <qemu-devel@nongnu.org>
Errors-To: qemu-devel-bounces+lists+qemu-devel=lfdr.de@nongnu.org
Sender: "Qemu-devel" <qemu-devel-bounces+lists+qemu-devel=lfdr.de@nongnu.org>

U2lnbmVkLW9mZi1ieTogVGF5bG9yIFNpbXBzb24gPHRzaW1wc29uQHF1aWNpbmMuY29tPgotLS0K
IHRhcmdldC9oZXhhZ29uL2F0dHJpYnMuaCAgICAgfCAzMiArKysrKysrKysrKysrKysKIHRhcmdl
dC9oZXhhZ29uL2F0dHJpYnNfZGVmLmggfCA5OCArKysrKysrKysrKysrKysrKysrKysrKysrKysr
KysrKysrKysrKysrKysrKwogMiBmaWxlcyBjaGFuZ2VkLCAxMzAgaW5zZXJ0aW9ucygrKQogY3Jl
YXRlIG1vZGUgMTAwNjQ0IHRhcmdldC9oZXhhZ29uL2F0dHJpYnMuaAogY3JlYXRlIG1vZGUgMTAw
NjQ0IHRhcmdldC9oZXhhZ29uL2F0dHJpYnNfZGVmLmgKCmRpZmYgLS1naXQgYS90YXJnZXQvaGV4
YWdvbi9hdHRyaWJzLmggYi90YXJnZXQvaGV4YWdvbi9hdHRyaWJzLmgKbmV3IGZpbGUgbW9kZSAx
MDA2NDQKaW5kZXggMDAwMDAwMC4uZDM1YWYwYwotLS0gL2Rldi9udWxsCisrKyBiL3RhcmdldC9o
ZXhhZ29uL2F0dHJpYnMuaApAQCAtMCwwICsxLDMyIEBACisvKgorICogIENvcHlyaWdodChjKSAy
MDE5LTIwMjAgUXVhbGNvbW0gSW5ub3ZhdGlvbiBDZW50ZXIsIEluYy4gQWxsIFJpZ2h0cyBSZXNl
cnZlZC4KKyAqCisgKiAgVGhpcyBwcm9ncmFtIGlzIGZyZWUgc29mdHdhcmU7IHlvdSBjYW4gcmVk
aXN0cmlidXRlIGl0IGFuZC9vciBtb2RpZnkKKyAqICBpdCB1bmRlciB0aGUgdGVybXMgb2YgdGhl
IEdOVSBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlIGFzIHB1Ymxpc2hlZCBieQorICogIHRoZSBGcmVl
IFNvZnR3YXJlIEZvdW5kYXRpb247IGVpdGhlciB2ZXJzaW9uIDIgb2YgdGhlIExpY2Vuc2UsIG9y
CisgKiAgKGF0IHlvdXIgb3B0aW9uKSBhbnkgbGF0ZXIgdmVyc2lvbi4KKyAqCisgKiAgVGhpcyBw
cm9ncmFtIGlzIGRpc3RyaWJ1dGVkIGluIHRoZSBob3BlIHRoYXQgaXQgd2lsbCBiZSB1c2VmdWws
CisgKiAgYnV0IFdJVEhPVVQgQU5ZIFdBUlJBTlRZOyB3aXRob3V0IGV2ZW4gdGhlIGltcGxpZWQg
d2FycmFudHkgb2YKKyAqICBNRVJDSEFOVEFCSUxJVFkgb3IgRklUTkVTUyBGT1IgQSBQQVJUSUNV
TEFSIFBVUlBPU0UuICBTZWUgdGhlCisgKiAgR05VIEdlbmVyYWwgUHVibGljIExpY2Vuc2UgZm9y
IG1vcmUgZGV0YWlscy4KKyAqCisgKiAgWW91IHNob3VsZCBoYXZlIHJlY2VpdmVkIGEgY29weSBv
ZiB0aGUgR05VIEdlbmVyYWwgUHVibGljIExpY2Vuc2UKKyAqICBhbG9uZyB3aXRoIHRoaXMgcHJv
Z3JhbTsgaWYgbm90LCBzZWUgPGh0dHA6Ly93d3cuZ251Lm9yZy9saWNlbnNlcy8+LgorICovCisK
KyNpZm5kZWYgSEVYQUdPTl9BVFRSSUJTX0gKKyNkZWZpbmUgSEVYQUdPTl9BVFRSSUJTX0gKKwor
ZW51bSB7CisjZGVmaW5lIERFRl9BVFRSSUIoTkFNRSwgLi4uKSBBXyMjTkFNRSwKKyNpbmNsdWRl
ICJhdHRyaWJzX2RlZi5oIgorI3VuZGVmIERFRl9BVFRSSUIKK307CisKKyNkZWZpbmUgQVRUUklC
X1dJRFRIIDMyCisjZGVmaW5lIEdFVF9BVFRSSUIob3Bjb2RlLCBhdHRyaWIpIFwKKyAgICAoKChv
cGNvZGVfYXR0cmlic1tvcGNvZGVdW2F0dHJpYiAvIEFUVFJJQl9XSURUSF0pXAorICAgID4+IChh
dHRyaWIgJSBBVFRSSUJfV0lEVEgpKSAmIDB4MSkKKworI2VuZGlmIC8qIEFUVFJJQlNfSCAqLwpk
aWZmIC0tZ2l0IGEvdGFyZ2V0L2hleGFnb24vYXR0cmlic19kZWYuaCBiL3RhcmdldC9oZXhhZ29u
L2F0dHJpYnNfZGVmLmgKbmV3IGZpbGUgbW9kZSAxMDA2NDQKaW5kZXggMDAwMDAwMC4uZDAyNDE3
NgotLS0gL2Rldi9udWxsCisrKyBiL3RhcmdldC9oZXhhZ29uL2F0dHJpYnNfZGVmLmgKQEAgLTAs
MCArMSw5OCBAQAorLyoKKyAqICBDb3B5cmlnaHQoYykgMjAxOS0yMDIwIFF1YWxjb21tIElubm92
YXRpb24gQ2VudGVyLCBJbmMuIEFsbCBSaWdodHMgUmVzZXJ2ZWQuCisgKgorICogIFRoaXMgcHJv
Z3JhbSBpcyBmcmVlIHNvZnR3YXJlOyB5b3UgY2FuIHJlZGlzdHJpYnV0ZSBpdCBhbmQvb3IgbW9k
aWZ5CisgKiAgaXQgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBHTlUgR2VuZXJhbCBQdWJsaWMgTGlj
ZW5zZSBhcyBwdWJsaXNoZWQgYnkKKyAqICB0aGUgRnJlZSBTb2Z0d2FyZSBGb3VuZGF0aW9uOyBl
aXRoZXIgdmVyc2lvbiAyIG9mIHRoZSBMaWNlbnNlLCBvcgorICogIChhdCB5b3VyIG9wdGlvbikg
YW55IGxhdGVyIHZlcnNpb24uCisgKgorICogIFRoaXMgcHJvZ3JhbSBpcyBkaXN0cmlidXRlZCBp
biB0aGUgaG9wZSB0aGF0IGl0IHdpbGwgYmUgdXNlZnVsLAorICogIGJ1dCBXSVRIT1VUIEFOWSBX
QVJSQU5UWTsgd2l0aG91dCBldmVuIHRoZSBpbXBsaWVkIHdhcnJhbnR5IG9mCisgKiAgTUVSQ0hB
TlRBQklMSVRZIG9yIEZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFLiAgU2VlIHRoZQor
ICogIEdOVSBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlIGZvciBtb3JlIGRldGFpbHMuCisgKgorICog
IFlvdSBzaG91bGQgaGF2ZSByZWNlaXZlZCBhIGNvcHkgb2YgdGhlIEdOVSBHZW5lcmFsIFB1Ymxp
YyBMaWNlbnNlCisgKiAgYWxvbmcgd2l0aCB0aGlzIHByb2dyYW07IGlmIG5vdCwgc2VlIDxodHRw
Oi8vd3d3LmdudS5vcmcvbGljZW5zZXMvPi4KKyAqLworCisvKiBLZWVwIHRoaXMgYXMgdGhlIGZp
cnN0IGF0dHJpYnV0ZTogKi8KK0RFRl9BVFRSSUIoQUFfRFVNTVksICJEdW1teSBaZXJvdGggQXR0
cmlidXRlIiwgIiIsICIiKQorCisvKiBNaXNjICovCitERUZfQVRUUklCKEVYVEVOU0lPTiwgIkV4
dGVuc2lvbiBpbnN0cnVjdGlvbiIsICIiLCAiIikKKworREVGX0FUVFJJQihQUklWLCAiTm90IGF2
YWlsYWJsZSBpbiB1c2VyIG9yIGd1ZXN0IG1vZGUiLCAiIiwgIiIpCitERUZfQVRUUklCKEdVRVNU
LCAiTm90IGF2YWlsYWJsZSBpbiB1c2VyIG1vZGUiLCAiIiwgIiIpCisKK0RFRl9BVFRSSUIoRlBP
UCwgIkZsb2F0aW5nIFBvaW50IE9wZXJhdGlvbiIsICIiLCAiIikKKworREVGX0FUVFJJQihFWFRF
TkRBQkxFLCAiSW1tZWRpYXRlIG1heSBiZSBleHRlbmRlZCIsICIiLCAiIikKKworREVGX0FUVFJJ
QihBUkNIVjIsICJWMiBhcmNoaXRlY3R1cmUiLCAiIiwgIiIpCitERUZfQVRUUklCKEFSQ0hWMywg
IlYzIGFyY2hpdGVjdHVyZSIsICIiLCAiIikKK0RFRl9BVFRSSUIoQVJDSFY0LCAiVjQgYXJjaGl0
ZWN0dXJlIiwgIiIsICIiKQorREVGX0FUVFJJQihBUkNIVjUsICJWNSBhcmNoaXRlY3R1cmUiLCAi
IiwgIiIpCisKK0RFRl9BVFRSSUIoU1VCSU5TTiwgInN1Yi1pbnN0cnVjdGlvbiIsICIiLCAiIikK
KworLyogTG9hZCBhbmQgU3RvcmUgYXR0cmlidXRlcyAqLworREVGX0FUVFJJQihMT0FELCAiTG9h
ZHMgZnJvbSBtZW1vcnkiLCAiIiwgIiIpCitERUZfQVRUUklCKFNUT1JFLCAiU3RvcmVzIHRvIG1l
bW9yeSIsICIiLCAiIikKK0RFRl9BVFRSSUIoTUVNTElLRSwgIk1lbW9yeS1saWtlIGluc3RydWN0
aW9uIiwgIiIsICIiKQorREVGX0FUVFJJQihNRU1MSUtFX1BBQ0tFVF9SVUxFUywgImZvbGxvd3Mg
TWVtb3J5LWxpa2UgcGFja2V0IHJ1bGVzIiwgIiIsICIiKQorCisKKy8qIENoYW5nZS1vZi1mbG93
IGF0dHJpYnV0ZXMgKi8KK0RFRl9BVFRSSUIoSlVNUCwgIkp1bXAtdHlwZSBpbnN0cnVjdGlvbiIs
ICIiLCAiIikKK0RFRl9BVFRSSUIoSU5ESVJFQ1QsICJBYnNvbHV0ZSByZWdpc3RlciBqdW1wIiwg
IiIsICIiKQorREVGX0FUVFJJQihDQUxMLCAiRnVuY3Rpb24gY2FsbCBpbnN0cnVjdGlvbiIsICIi
LCAiIikKK0RFRl9BVFRSSUIoQ09GLCAiQ2hhbmdlLW9mLWZsb3cgaW5zdHJ1Y3Rpb24iLCAiIiwg
IiIpCitERUZfQVRUUklCKENPTkRFWEVDLCAiTWF5IGJlIGNhbmNlbGxlZCBieSBhIHByZWRpY2F0
ZSIsICIiLCAiIikKK0RFRl9BVFRSSUIoRE9UTkVXVkFMVUUsICJVc2VzIGEgcmVnaXN0ZXIgdmFs
dWUgZ2VuZXJhdGVkIGluIHRoaXMgcGt0IiwgIiIsICIiKQorREVGX0FUVFJJQihORVdDTVBKVU1Q
LCAiQ29tcG91bmQgY29tcGFyZSBhbmQganVtcCIsICIiLCAiIikKKworLyogYWNjZXNzIHRvIGlt
cGxpY2l0IHJlZ2lzdGVycyAqLworREVGX0FUVFJJQihJTVBMSUNJVF9XUklURVNfTFIsICJXcml0
ZXMgdGhlIGxpbmsgcmVnaXN0ZXIiLCAiIiwgIlVSRUcuTFIiKQorREVGX0FUVFJJQihJTVBMSUNJ
VF9XUklURVNfUEMsICJXcml0ZXMgdGhlIHByb2dyYW0gY291bnRlciIsICIiLCAiVVJFRy5QQyIp
CitERUZfQVRUUklCKElNUExJQ0lUX1dSSVRFU19TUCwgIldyaXRlcyB0aGUgc3RhY2sgcG9pbnRl
ciIsICIiLCAiVVJFRy5TUCIpCitERUZfQVRUUklCKElNUExJQ0lUX1dSSVRFU19GUCwgIldyaXRl
cyB0aGUgZnJhbWUgcG9pbnRlciIsICIiLCAiVVJFRy5GUCIpCitERUZfQVRUUklCKElNUExJQ0lU
X1dSSVRFU19HUCwgIldyaXRlcyB0aGUgR1AgcmVnaXN0ZXIiLCAiIiwgIlVSRUcuR1AiKQorREVG
X0FUVFJJQihJTVBMSUNJVF9XUklURVNfTEMwLCAiV3JpdGVzIGxvb3AgY291bnQgZm9yIGxvb3Ag
MCIsICIiLCAiVVJFRy5MQzAiKQorREVGX0FUVFJJQihJTVBMSUNJVF9XUklURVNfTEMxLCAiV3Jp
dGVzIGxvb3AgY291bnQgZm9yIGxvb3AgMSIsICIiLCAiVVJFRy5MQzEiKQorREVGX0FUVFJJQihJ
TVBMSUNJVF9XUklURVNfU0EwLCAiV3JpdGVzIHN0YXJ0IGFkZHIgZm9yIGxvb3AgMCIsICIiLCAi
VVJFRy5TQTAiKQorREVGX0FUVFJJQihJTVBMSUNJVF9XUklURVNfU0ExLCAiV3JpdGVzIHN0YXJ0
IGFkZHIgZm9yIGxvb3AgMSIsICIiLCAiVVJFRy5TQTEiKQorREVGX0FUVFJJQihJTVBMSUNJVF9X
UklURVNfUDAsICJXcml0ZXMgUHJlZGljYXRlIDAiLCAiIiwgIlVSRUcuUDAiKQorREVGX0FUVFJJ
QihJTVBMSUNJVF9XUklURVNfUDEsICJXcml0ZXMgUHJlZGljYXRlIDEiLCAiIiwgIlVSRUcuUDEi
KQorREVGX0FUVFJJQihJTVBMSUNJVF9XUklURVNfUDIsICJXcml0ZXMgUHJlZGljYXRlIDEiLCAi
IiwgIlVSRUcuUDIiKQorREVGX0FUVFJJQihJTVBMSUNJVF9XUklURVNfUDMsICJNYXkgd3JpdGUg
UHJlZGljYXRlIDMiLCAiIiwgIlVSRUcuUDMiKQorCitERUZfQVRUUklCKENSU0xPVDIzLCAiQ2Fu
IGV4ZWN1dGUgaW4gc2xvdCAyIG9yIHNsb3QgMyAoQ1IpIiwgIiIsICIiKQorREVGX0FUVFJJQihJ
VF9OT1AsICJub3AgaW5zdHJ1Y3Rpb24iLCAiIiwgIiIpCitERUZfQVRUUklCKElUX0VYVEVOREVS
LCAiY29uc3RhbnQgZXh0ZW5kZXIgaW5zdHJ1Y3Rpb24iLCAiIiwgIiIpCisKKworLyogUmVzdHJp
Y3Rpb25zIHRvIG1ha2Ugbm90ZSBvZiAqLworREVGX0FUVFJJQihSRVNUUklDVF9TTE9UME9OTFks
ICJNdXN0IGV4ZWN1dGUgb24gc2xvdDAiLCAiIiwgIiIpCitERUZfQVRUUklCKFJFU1RSSUNUX1NM
T1QxT05MWSwgIk11c3QgZXhlY3V0ZSBvbiBzbG90MSIsICIiLCAiIikKK0RFRl9BVFRSSUIoUkVT
VFJJQ1RfU0xPVDJPTkxZLCAiTXVzdCBleGVjdXRlIG9uIHNsb3QyIiwgIiIsICIiKQorREVGX0FU
VFJJQihSRVNUUklDVF9TTE9UM09OTFksICJNdXN0IGV4ZWN1dGUgb24gc2xvdDMiLCAiIiwgIiIp
CitERUZfQVRUUklCKFJFU1RSSUNUX05PU0xPVDEsICJObyBzbG90IDEgaW5zdHJ1Y3Rpb24gaW4g
cGFyYWxsZWwiLCAiIiwgIiIpCitERUZfQVRUUklCKFJFU1RSSUNUX1BSRUZFUlNMT1QwLCAiVHJ5
IHRvIGVuY29kZSBpbnRvIHNsb3QgMCIsICIiLCAiIikKKworREVGX0FUVFJJQihJQ09QLCAiSW5z
dHJ1Y3Rpb24gY2FjaGUgb3AiLCAiIiwgIiIpCisKK0RFRl9BVFRSSUIoSFdMT09QMF9FTkQsICJF
bmRzIEhXIGxvb3AwIiwgIiIsICIiKQorREVGX0FUVFJJQihIV0xPT1AxX0VORCwgIkVuZHMgSFcg
bG9vcDEiLCAiIiwgIiIpCitERUZfQVRUUklCKERDWkVST0EsICJkY3plcm9hIHR5cGUiLCAiIiwg
IiIpCitERUZfQVRUUklCKElDRkxVU0hPUCwgImljZmx1c2ggb3AgdHlwZSIsICIiLCAiIikKK0RF
Rl9BVFRSSUIoRENGTFVTSE9QLCAiZGNmbHVzaCBvcCB0eXBlIiwgIiIsICIiKQorREVGX0FUVFJJ
QihEQ0ZFVENILCAiZGNmZXRjaCB0eXBlIiwgIiIsICIiKQorCitERUZfQVRUUklCKEwyRkVUQ0gs
ICJJbnN0cnVjdGlvbiBpcyBsMmZldGNoIHR5cGUiLCAiIiwgIiIpCisKK0RFRl9BVFRSSUIoSUNJ
TlZBLCAiaWNpbnZhIiwgIiIsICIiKQorREVGX0FUVFJJQihEQ0NMRUFOSU5WQSwgImRjY2xlYW5p
bnZhIiwgIiIsICIiKQorCisvKiBLZWVwIHRoaXMgYXMgdGhlIGxhc3QgYXR0cmlidXRlOiAqLwor
REVGX0FUVFJJQihaWl9MQVNUQVRUUklCLCAiTGFzdCBhdHRyaWJ1dGUgaW4gdGhlIGZpbGUiLCAi
IiwgIiIpCisKLS0gCjIuNy40Cgo=

