Return-Path: <qemu-devel-bounces+lists+qemu-devel=lfdr.de@nongnu.org>
X-Original-To: lists+qemu-devel@lfdr.de
Delivered-To: lists+qemu-devel@lfdr.de
Received: from lists.gnu.org (lists.gnu.org [209.51.188.17])
	by mail.lfdr.de (Postfix) with ESMTPS id C4F4516B380
	for <lists+qemu-devel@lfdr.de>; Mon, 24 Feb 2020 23:02:37 +0100 (CET)
Received: from localhost ([::1]:44786 helo=lists1p.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.90_1)
	(envelope-from <qemu-devel-bounces+lists+qemu-devel=lfdr.de@nongnu.org>)
	id 1j6LoC-00086J-D3
	for lists+qemu-devel@lfdr.de; Mon, 24 Feb 2020 17:02:36 -0500
Received: from eggs.gnu.org ([2001:470:142:3::10]:35077)
 by lists.gnu.org with esmtp (Exim 4.90_1)
 (envelope-from <no-reply@patchew.org>) id 1j6Lla-0006er-5N
 for qemu-devel@nongnu.org; Mon, 24 Feb 2020 16:59:56 -0500
Received: from Debian-exim by eggs.gnu.org with spam-scanned (Exim 4.71)
 (envelope-from <no-reply@patchew.org>) id 1j6LlX-0003fu-EN
 for qemu-devel@nongnu.org; Mon, 24 Feb 2020 16:59:53 -0500
Resent-Date: Mon, 24 Feb 2020 16:59:53 -0500
Resent-Message-Id: <E1j6LlX-0003fu-EN@eggs.gnu.org>
Received: from sender4-of-o51.zoho.com ([136.143.188.51]:21188)
 by eggs.gnu.org with esmtps (TLS1.0:RSA_AES_256_CBC_SHA1:32)
 (Exim 4.71) (envelope-from <no-reply@patchew.org>)
 id 1j6LlX-0003fa-63
 for qemu-devel@nongnu.org; Mon, 24 Feb 2020 16:59:51 -0500
ARC-Seal: i=1; a=rsa-sha256; t=1582581565; cv=none; 
 d=zohomail.com; s=zohoarc; 
 b=fCbKWn5ObSMJpVGEAb3tqGZwTE29voCuY7eg6EOrjAElv3v/hz5axEtW1rs4+ZaLVmyUWonsWlGrt0dmrQz9hLpTFZxyDavvkhwyN/SmGPa51RSrr2xNOYYDLV7UCaky42TWPlvkY9mIarzUEaa24C7IoB42GXff8+BwgSxbJsg=
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=zohomail.com;
 s=zohoarc; t=1582581565;
 h=Content-Type:Content-Transfer-Encoding:Cc:Date:From:In-Reply-To:MIME-Version:Message-ID:Reply-To:Subject:To;
 bh=xBC9NROqExsUucotruFISCjS12Oc2DV1wOMbEBjAufk=; 
 b=cxT+6xKqhJ91RetSizfYi04g1ouAKQA1qlBwwoab98A2fbEXXEPOmLPAMfU8miKFOWzZw4OyTwF90dFSRMcbHQumSrI/mA7qIARcnWSMLVaNfJjUiz142LDUffcmUptPIGPpa2vpr2zDwy2HkLYZwzpbqaYtiwEqgFCdyYqAk00=
ARC-Authentication-Results: i=1; mx.zohomail.com;
 dkim=pass  header.i=patchew.org;
 spf=pass  smtp.mailfrom=no-reply@patchew.org;
 dmarc=pass header.from=<no-reply@patchew.org>
 header.from=<no-reply@patchew.org>
Received: from [172.17.0.3] (23.253.156.214 [23.253.156.214]) by
 mx.zohomail.com with SMTPS id 1582581562417368.68644984892615;
 Mon, 24 Feb 2020 13:59:22 -0800 (PST)
In-Reply-To: <cover.1582576372.git.jag.raman@oracle.com>
Subject: Re: [PATCH v5 00/50] Initial support for multi-process qemu
Message-ID: <158258155914.10132.9562717528134549041@a1bbccc8075a>
MIME-Version: 1.0
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Resent-From: 
From: no-reply@patchew.org
To: jag.raman@oracle.com
Date: Mon, 24 Feb 2020 13:59:22 -0800 (PST)
X-ZohoMailClient: External
X-detected-operating-system: by eggs.gnu.org: GNU/Linux 2.2.x-3.x [generic]
 [fuzzy]
X-Received-From: 136.143.188.51
X-BeenThere: qemu-devel@nongnu.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: <qemu-devel.nongnu.org>
List-Unsubscribe: <https://lists.nongnu.org/mailman/options/qemu-devel>,
 <mailto:qemu-devel-request@nongnu.org?subject=unsubscribe>
List-Archive: <https://lists.nongnu.org/archive/html/qemu-devel>
List-Post: <mailto:qemu-devel@nongnu.org>
List-Help: <mailto:qemu-devel-request@nongnu.org?subject=help>
List-Subscribe: <https://lists.nongnu.org/mailman/listinfo/qemu-devel>,
 <mailto:qemu-devel-request@nongnu.org?subject=subscribe>
Reply-To: qemu-devel@nongnu.org
Cc: elena.ufimtseva@oracle.com, fam@euphon.net, swapnil.ingle@nutanix.com,
 john.g.johnson@oracle.com, qemu-devel@nongnu.org, kraxel@redhat.com,
 jag.raman@oracle.com, quintela@redhat.com, mst@redhat.com, armbru@redhat.com,
 kanth.ghatraju@oracle.com, felipe@nutanix.com, thuth@redhat.com,
 ehabkost@redhat.com, konrad.wilk@oracle.com, dgilbert@redhat.com,
 liran.alon@oracle.com, stefanha@redhat.com, pbonzini@redhat.com,
 rth@twiddle.net, kwolf@redhat.com, berrange@redhat.com, mreitz@redhat.com,
 ross.lagerwall@citrix.com, marcandre.lureau@gmail.com,
 thanos.makatos@nutanix.com
Errors-To: qemu-devel-bounces+lists+qemu-devel=lfdr.de@nongnu.org
Sender: "Qemu-devel" <qemu-devel-bounces+lists+qemu-devel=lfdr.de@nongnu.org>

UGF0Y2hldyBVUkw6IGh0dHBzOi8vcGF0Y2hldy5vcmcvUUVNVS9jb3Zlci4xNTgyNTc2MzcyLmdp
dC5qYWcucmFtYW5Ab3JhY2xlLmNvbS8KCgoKSGksCgpUaGlzIHNlcmllcyBzZWVtcyB0byBoYXZl
IHNvbWUgY29kaW5nIHN0eWxlIHByb2JsZW1zLiBTZWUgb3V0cHV0IGJlbG93IGZvcgptb3JlIGlu
Zm9ybWF0aW9uOgoKU3ViamVjdDogW1BBVENIIHY1IDAwLzUwXSBJbml0aWFsIHN1cHBvcnQgZm9y
IG11bHRpLXByb2Nlc3MgcWVtdQpNZXNzYWdlLWlkOiBjb3Zlci4xNTgyNTc2MzcyLmdpdC5qYWcu
cmFtYW5Ab3JhY2xlLmNvbQpUeXBlOiBzZXJpZXMKCj09PSBURVNUIFNDUklQVCBCRUdJTiA9PT0K
IyEvYmluL2Jhc2gKZ2l0IHJldi1wYXJzZSBiYXNlID4gL2Rldi9udWxsIHx8IGV4aXQgMApnaXQg
Y29uZmlnIC0tbG9jYWwgZGlmZi5yZW5hbWVsaW1pdCAwCmdpdCBjb25maWcgLS1sb2NhbCBkaWZm
LnJlbmFtZXMgVHJ1ZQpnaXQgY29uZmlnIC0tbG9jYWwgZGlmZi5hbGdvcml0aG0gaGlzdG9ncmFt
Ci4vc2NyaXB0cy9jaGVja3BhdGNoLnBsIC0tbWFpbGJhY2sgYmFzZS4uCj09PSBURVNUIFNDUklQ
VCBFTkQgPT09CgpVcGRhdGluZyAzYzhjZjVhOWMyMWZmODc4MjE2NGQxZGVmN2Y0NGJkODg4NzEz
Mzg0CkZyb20gaHR0cHM6Ly9naXRodWIuY29tL3BhdGNoZXctcHJvamVjdC9xZW11CiAqIFtuZXcg
dGFnXSAgICAgICAgIHBhdGNoZXcvMjAyMDAyMjQyMDU1MzMuMjM3OTgtMS1waGlsbWRAcmVkaGF0
LmNvbSAtPiBwYXRjaGV3LzIwMjAwMjI0MjA1NTMzLjIzNzk4LTEtcGhpbG1kQHJlZGhhdC5jb20K
U3dpdGNoZWQgdG8gYSBuZXcgYnJhbmNoICd0ZXN0JwowNDY2NDljIG11bHRpLXByb2Nlc3M6IGFk
ZCBjb25maWd1cmUgYW5kIHVzYWdlIGluZm9ybWF0aW9uCjdjNzk0MTkgbXVsdGktcHJvY2Vzczog
YWRkIHRoZSBjb25jZXB0IGRlc2NyaXB0aW9uIHRvIGRvY3MvZGV2ZWwvcWVtdS1tdWx0aXByb2Nl
c3MKYjA2ZTY3NiBtdWx0aS1wcm9jZXNzOiBWYWxpZGF0ZSBpbmNvbWluZyBjb21tYW5kcyBmcm9t
IFByb3h5CmNjMWY2YjQgbXVsdGktcHJvY2VzczogRW5hYmxlIHN1cHBvcnQgZm9yIG11bHRpcGxl
IGRldmljZXMgaW4gcmVtb3RlCjAwNjBmODEgbXVsdGktcHJvY2Vzcy9taWc6IFJlc3RvcmUgdGhl
IFZNU0QgaW4gcmVtb3RlIHByb2Nlc3MKZjE2M2U5YiBtdWx0aS1wcm9jZXNzL21pZzogU3luY2hy
b25pemUgcnVuc3RhdGUgb2YgcmVtb3RlIHByb2Nlc3MKOGJjMzc5NiBtdWx0aS1wcm9jZXNzL21p
ZzogcmVmYWN0b3IgcnVuc3RhdGVfY2hlY2sgaW50byBjb21tb24gZmlsZQo0ZWJiZDc0IG11bHRp
LXByb2Nlc3MvbWlnOiBMb2FkIFZNU0QgaW4gdGhlIHByb3h5IG9iamVjdAo0YjEyNGIyIG11bHRp
LXByb2Nlc3MvbWlnOiBTZW5kIFZNU0Qgb2YgcmVtb3RlIHRvIHRoZSBQcm94eSBvYmplY3QKYjhk
YmFkOCBtdWx0aS1wcm9jZXNzL21pZzogRW5hYmxlIFZNU0Qgc2F2ZSBpbiB0aGUgUHJveHkgb2Jq
ZWN0CjMyNTMxNTcgbXVsdGktcHJvY2Vzcy9taWc6IGJ1aWxkIG1pZ3JhdGlvbiBtb2R1bGUgaW4g
dGhlIHJlbW90ZSBwcm9jZXNzCjk2NTU3ZDAgbXVsdGktcHJvY2VzczogcHJldmVudCBkdXBsaWNh
dGUgbWVtb3J5IGluaXRpYWxpemF0aW9uIGluIHJlbW90ZQo5YTg1YWYwIG11bHRpLXByb2Nlc3Mv
bW9uOiBJbml0aWFsaXplIFFNUCBtb2R1bGUgZm9yIHJlbW90ZSBwcm9jZXNzZXMKY2E3MGQ0YSBt
dWx0aS1wcm9jZXNzL21vbjogUmVmYWN0b3IgbW9uaXRvci9jaGFyZGV2IGZ1bmN0aW9ucyBvdXQg
b2YgdmwuYwpkYmUzYTYzIG11bHRpLXByb2Nlc3MvbW9uOiBlbmFibGUgUU1QIG1vZHVsZSBzdXBw
b3J0IGluIHRoZSByZW1vdGUgcHJvY2VzcwphMTJhODAyIG11bHRpLXByb2Nlc3MvbW9uOiBzdHVi
IGZ1bmN0aW9ucyB0byBlbmFibGUgUU1QIG1vZHVsZSBmb3IgcmVtb3RlIHByb2Nlc3MKMWU2ZDNh
ZiBtdWx0aS1wcm9jZXNzL21vbjogY2hvb3NlIEhNUCBjb21tYW5kcyBiYXNlZCBvbiB0YXJnZXQK
ODg4ZTc0MSBtdWx0aS1wcm9jZXNzOiBwZXJmb3JtIGRldmljZSByZXNldCBpbiB0aGUgcmVtb3Rl
IHByb2Nlc3MKOGYxNWJkOCBtdWx0aS1wcm9jZXNzOiBVc2Ugc2VwYXJhdGUgTU1JTyBjb21tdW5p
Y2F0aW9uIGNoYW5uZWwKNjQ1OTNmNSBtdWx0aS1wcm9jZXNzOiBoYW5kbGUgaGVhcnRiZWF0IG1l
c3NhZ2VzIGluIHJlbW90ZSBwcm9jZXNzCjkzYjBmOTYgbXVsdGktcHJvY2Vzczogc2VuZCBoZWFy
dGJlYXQgbWVzc2FnZXMgdG8gcmVtb3RlCmFkMjE0ZTkgbXVsdGktcHJvY2VzczogYWRkIHBhcnNl
X2NtZGxpbmUgaW4gcmVtb3RlIHByb2Nlc3MKODNiYzM1MiBtdWx0aS1wcm9jZXNzOiBhZGQgcmVt
b3RlIG9wdGlvbnMgcGFyc2VyCjdmY2M3MDQgbXVsdGktcHJvY2VzczogYWRkIHJlbW90ZSBvcHRp
b24KMjRjYTE2MiBtdWx0aS1wcm9jZXNzOiByZWZyYWN0b3IgdmwuYyBjb2RlCjIwYzA1ZDkgbXVs
dGktcHJvY2VzczogSW50cm9kdWNlIGJ1aWxkIGZsYWdzIHRvIHNlcGFyYXRlIHJlbW90ZSBwcm9j
ZXNzIGNvZGUKMzM1ZjMzMSBtdWx0aS1wcm9jZXNzOiBhZGQgcHJvY2Vzc2luZyBvZiByZW1vdGUg
ZGV2aWNlIGNvbW1hbmQgbGluZQo0MTNiZjI4IG11bHRpLXByb2Nlc3M6IHJlbW90ZTogYWRkIGNy
ZWF0ZV9kb25lIGNvbmRpdGlvbgpkMGU0ZjAwIG11bHRpLXByb2Nlc3M6IHJlbW90ZTogdXNlIGZk
IGZvciBzb2NrZXQgZnJvbSBwYXJlbnQgcHJvY2VzcwowNDVmOGY4IG11bHRpLXByb2Nlc3M6IHJl
bW90ZTogYWRkIHNldHVwX2RldmljZXMgbXNnIHByb2Nlc3NpbmcKYThlYThhYSBtdWx0aS1wcm9j
ZXNzOiBhZGQgcWRldl9wcm94eV9hZGQgdG8gY3JlYXRlIHByb3h5IGRldmljZXMKNTlkMGJmZiBt
dWx0aS1wcm9jZXNzOiBSZXRyaWV2ZSBQQ0kgaW5mbyBmcm9tIHJlbW90ZSBwcm9jZXNzCjg5OGFm
NTkgbXVsdGktcHJvY2VzczogY29uZmlndXJlIHJlbW90ZSBzaWRlIGRldmljZXMKYjQ5YzlmMyBt
dWx0aS1wcm9jZXNzOiBjcmVhdGUgSU9IVUIgb2JqZWN0IHRvIGhhbmRsZSBpcnEKMDZkYzc2NiBt
dWx0aS1wcm9jZXNzOiBTeW5jaHJvbml6ZSByZW1vdGUgbWVtb3J5CmE4OGRjYmQgbXVsdGktcHJv
Y2VzczogUENJIEJBUiByZWFkL3dyaXRlIGhhbmRsaW5nIGZvciBwcm94eSAmIHJlbW90ZSBlbmRw
b2ludHMKNWEzZmJiYiBtdXRsaS1wcm9jZXNzOiBidWlsZCByZW1vdGUgY29tbWFuZCBsaW5lIGFy
Z3MKYzMxOWNlNyBtdWx0aS1wcm9jZXNzOiBpbnRyb2R1Y2UgcHJveHkgb2JqZWN0CjdjYjk1MGQg
bXVsdGktcHJvY2VzczogcmVtb3RlIHByb2Nlc3MgaW5pdGlhbGl6YXRpb24KZTkxNTkyZSBtdWx0
aS1wcm9jZXNzOiBzZXR1cCBtZW1vcnkgbWFuYWdlciBmb3IgcmVtb3RlIGRldmljZQo0ZjE0YmE0
IG11bHRpLXByb2Nlc3M6IHNldHVwIGEgbWFjaGluZSBvYmplY3QgZm9yIHJlbW90ZSBkZXZpY2Ug
cHJvY2VzcwpiMWU1OGIxIG11bHRpLXByb2Nlc3M6IHNldHVwIFBDSSBob3N0IGJyaWRnZSBmb3Ig
cmVtb3RlIGRldmljZQoyNzg1MDQzIG11bHRpLXByb2Nlc3M6IGFkZCBmdW5jdGlvbnMgdG8gc3lu
Y2hyb25pemUgcHJveHkgYW5kIHJlbW90ZSBlbmRwb2ludHMKZjgzZDNmMyBtdWx0aS1wcm9jZXNz
OiBkZWZpbmUgbXBxZW11LWxpbmsgb2JqZWN0CjI1MmQ3MzYgbXVsdGktcHJvY2VzczogYnVpbGQg
c3lzdGVtIGZvciByZW1vdGUgZGV2aWNlIHByb2Nlc3MKMTQ4Mjg0OSBtdWx0aS1wcm9jZXNzOiBB
ZGQgY29uZmlnIG9wdGlvbiBmb3IgbXVsdGktcHJvY2VzcyBRRU1VCmI3OGYwY2MgbXVsdGktcHJv
Y2VzczogQWRkIHN0dWIgZnVuY3Rpb25zIHRvIGZhY2lsYXRlIGJ1aWxkIG9mIG11bHRpLXByb2Nl
c3MKODM3ZjRhNiBtdWx0aS1wcm9jZXNzOiBhZGQgYSBjb21tYW5kIGxpbmUgb3B0aW9uIGZvciBk
ZWJ1ZyBmaWxlCmU1OGZhNmQgbXVsdGktcHJvY2VzczogUmVmYWN0b3IgbWFjaGluZV9pbml0IGFu
ZCBleGl0IG5vdGlmaWVycwpiZjViMzQzIG11bHRpLXByb2Nlc3M6IG1lbW9yeTogYWxsb2MgUkFN
IGZyb20gZmlsZSBhdCBvZmZzZXQKCj09PSBPVVRQVVQgQkVHSU4gPT09CjEvNTAgQ2hlY2tpbmcg
Y29tbWl0IGJmNWIzNDM4ZjU4NCAobXVsdGktcHJvY2VzczogbWVtb3J5OiBhbGxvYyBSQU0gZnJv
bSBmaWxlIGF0IG9mZnNldCkKMi81MCBDaGVja2luZyBjb21taXQgZTU4ZmE2ZGIyNzZmIChtdWx0
aS1wcm9jZXNzOiBSZWZhY3RvciBtYWNoaW5lX2luaXQgYW5kIGV4aXQgbm90aWZpZXJzKQozLzUw
IENoZWNraW5nIGNvbW1pdCA4MzdmNGE2MDI4NjIgKG11bHRpLXByb2Nlc3M6IGFkZCBhIGNvbW1h
bmQgbGluZSBvcHRpb24gZm9yIGRlYnVnIGZpbGUpCjQvNTAgQ2hlY2tpbmcgY29tbWl0IGI3OGYw
Y2MzZjA3MiAobXVsdGktcHJvY2VzczogQWRkIHN0dWIgZnVuY3Rpb25zIHRvIGZhY2lsYXRlIGJ1
aWxkIG9mIG11bHRpLXByb2Nlc3MpCkVSUk9SOiBzdXNwZWN0IGNvZGUgaW5kZW50IGZvciBjb25k
aXRpb25hbCBzdGF0ZW1lbnRzICg0LCA0KQojMTQxOiBGSUxFOiBhY2NlbC9zdHVicy90Y2ctc3R1
Yi5jOjEwOToKKyAgICB3aGlsZSAoMSkgeworICAgIH0KCldBUk5JTkc6IGFkZGVkLCBtb3ZlZCBv
ciBkZWxldGVkIGZpbGUocyksIGRvZXMgTUFJTlRBSU5FUlMgbmVlZCB1cGRhdGluZz8KIzE1NTog
Cm5ldyBmaWxlIG1vZGUgMTAwNjQ0Cgp0b3RhbDogMSBlcnJvcnMsIDEgd2FybmluZ3MsIDM3OCBs
aW5lcyBjaGVja2VkCgpQYXRjaCA0LzUwIGhhcyBzdHlsZSBwcm9ibGVtcywgcGxlYXNlIHJldmll
dy4gIElmIGFueSBvZiB0aGVzZSBlcnJvcnMKYXJlIGZhbHNlIHBvc2l0aXZlcyByZXBvcnQgdGhl
bSB0byB0aGUgbWFpbnRhaW5lciwgc2VlCkNIRUNLUEFUQ0ggaW4gTUFJTlRBSU5FUlMuCgo1LzUw
IENoZWNraW5nIGNvbW1pdCAxNDgyODQ5ZTk1ODQgKG11bHRpLXByb2Nlc3M6IEFkZCBjb25maWcg
b3B0aW9uIGZvciBtdWx0aS1wcm9jZXNzIFFFTVUpCjYvNTAgQ2hlY2tpbmcgY29tbWl0IDI1MmQ3
MzY2ZTVjMSAobXVsdGktcHJvY2VzczogYnVpbGQgc3lzdGVtIGZvciByZW1vdGUgZGV2aWNlIHBy
b2Nlc3MpCldBUk5JTkc6IGFkZGVkLCBtb3ZlZCBvciBkZWxldGVkIGZpbGUocyksIGRvZXMgTUFJ
TlRBSU5FUlMgbmVlZCB1cGRhdGluZz8KIzMxMTogCm5ldyBmaWxlIG1vZGUgMTAwNjQ0Cgp0b3Rh
bDogMCBlcnJvcnMsIDEgd2FybmluZ3MsIDI1MCBsaW5lcyBjaGVja2VkCgpQYXRjaCA2LzUwIGhh
cyBzdHlsZSBwcm9ibGVtcywgcGxlYXNlIHJldmlldy4gIElmIGFueSBvZiB0aGVzZSBlcnJvcnMK
YXJlIGZhbHNlIHBvc2l0aXZlcyByZXBvcnQgdGhlbSB0byB0aGUgbWFpbnRhaW5lciwgc2VlCkNI
RUNLUEFUQ0ggaW4gTUFJTlRBSU5FUlMuCjcvNTAgQ2hlY2tpbmcgY29tbWl0IGY4M2QzZjM3NDMy
ZiAobXVsdGktcHJvY2VzczogZGVmaW5lIG1wcWVtdS1saW5rIG9iamVjdCkKV0FSTklORzogYWRk
ZWQsIG1vdmVkIG9yIGRlbGV0ZWQgZmlsZShzKSwgZG9lcyBNQUlOVEFJTkVSUyBuZWVkIHVwZGF0
aW5nPwojMjA6IApuZXcgZmlsZSBtb2RlIDEwMDY0NAoKdG90YWw6IDAgZXJyb3JzLCAxIHdhcm5p
bmdzLCA0MzcgbGluZXMgY2hlY2tlZAoKUGF0Y2ggNy81MCBoYXMgc3R5bGUgcHJvYmxlbXMsIHBs
ZWFzZSByZXZpZXcuICBJZiBhbnkgb2YgdGhlc2UgZXJyb3JzCmFyZSBmYWxzZSBwb3NpdGl2ZXMg
cmVwb3J0IHRoZW0gdG8gdGhlIG1haW50YWluZXIsIHNlZQpDSEVDS1BBVENIIGluIE1BSU5UQUlO
RVJTLgo4LzUwIENoZWNraW5nIGNvbW1pdCAyNzg1MDQzODhjMTggKG11bHRpLXByb2Nlc3M6IGFk
ZCBmdW5jdGlvbnMgdG8gc3luY2hyb25pemUgcHJveHkgYW5kIHJlbW90ZSBlbmRwb2ludHMpCjkv
NTAgQ2hlY2tpbmcgY29tbWl0IGIxZTU4YjE0YzRkMiAobXVsdGktcHJvY2Vzczogc2V0dXAgUENJ
IGhvc3QgYnJpZGdlIGZvciByZW1vdGUgZGV2aWNlKQpXQVJOSU5HOiBhZGRlZCwgbW92ZWQgb3Ig
ZGVsZXRlZCBmaWxlKHMpLCBkb2VzIE1BSU5UQUlORVJTIG5lZWQgdXBkYXRpbmc/CiMzMTogCm5l
dyBmaWxlIG1vZGUgMTAwNjQ0Cgp0b3RhbDogMCBlcnJvcnMsIDEgd2FybmluZ3MsIDExOCBsaW5l
cyBjaGVja2VkCgpQYXRjaCA5LzUwIGhhcyBzdHlsZSBwcm9ibGVtcywgcGxlYXNlIHJldmlldy4g
IElmIGFueSBvZiB0aGVzZSBlcnJvcnMKYXJlIGZhbHNlIHBvc2l0aXZlcyByZXBvcnQgdGhlbSB0
byB0aGUgbWFpbnRhaW5lciwgc2VlCkNIRUNLUEFUQ0ggaW4gTUFJTlRBSU5FUlMuCjEwLzUwIENo
ZWNraW5nIGNvbW1pdCA0ZjE0YmE0MzRkNWIgKG11bHRpLXByb2Nlc3M6IHNldHVwIGEgbWFjaGlu
ZSBvYmplY3QgZm9yIHJlbW90ZSBkZXZpY2UgcHJvY2VzcykKV0FSTklORzogYWRkZWQsIG1vdmVk
IG9yIGRlbGV0ZWQgZmlsZShzKSwgZG9lcyBNQUlOVEFJTkVSUyBuZWVkIHVwZGF0aW5nPwojNjM6
IApuZXcgZmlsZSBtb2RlIDEwMDY0NAoKdG90YWw6IDAgZXJyb3JzLCAxIHdhcm5pbmdzLCAxNjkg
bGluZXMgY2hlY2tlZAoKUGF0Y2ggMTAvNTAgaGFzIHN0eWxlIHByb2JsZW1zLCBwbGVhc2UgcmV2
aWV3LiAgSWYgYW55IG9mIHRoZXNlIGVycm9ycwphcmUgZmFsc2UgcG9zaXRpdmVzIHJlcG9ydCB0
aGVtIHRvIHRoZSBtYWludGFpbmVyLCBzZWUKQ0hFQ0tQQVRDSCBpbiBNQUlOVEFJTkVSUy4KMTEv
NTAgQ2hlY2tpbmcgY29tbWl0IGU5MTU5MmUxZDNlNSAobXVsdGktcHJvY2Vzczogc2V0dXAgbWVt
b3J5IG1hbmFnZXIgZm9yIHJlbW90ZSBkZXZpY2UpCldBUk5JTkc6IGFkZGVkLCBtb3ZlZCBvciBk
ZWxldGVkIGZpbGUocyksIGRvZXMgTUFJTlRBSU5FUlMgbmVlZCB1cGRhdGluZz8KIzEyMjogCm5l
dyBmaWxlIG1vZGUgMTAwNjQ0Cgp0b3RhbDogMCBlcnJvcnMsIDEgd2FybmluZ3MsIDE2MyBsaW5l
cyBjaGVja2VkCgpQYXRjaCAxMS81MCBoYXMgc3R5bGUgcHJvYmxlbXMsIHBsZWFzZSByZXZpZXcu
ICBJZiBhbnkgb2YgdGhlc2UgZXJyb3JzCmFyZSBmYWxzZSBwb3NpdGl2ZXMgcmVwb3J0IHRoZW0g
dG8gdGhlIG1haW50YWluZXIsIHNlZQpDSEVDS1BBVENIIGluIE1BSU5UQUlORVJTLgoxMi81MCBD
aGVja2luZyBjb21taXQgN2NiOTUwZDBiNDE0IChtdWx0aS1wcm9jZXNzOiByZW1vdGUgcHJvY2Vz
cyBpbml0aWFsaXphdGlvbikKMTMvNTAgQ2hlY2tpbmcgY29tbWl0IGMzMTljZTdlOGU0MiAobXVs
dGktcHJvY2VzczogaW50cm9kdWNlIHByb3h5IG9iamVjdCkKV0FSTklORzogYWRkZWQsIG1vdmVk
IG9yIGRlbGV0ZWQgZmlsZShzKSwgZG9lcyBNQUlOVEFJTkVSUyBuZWVkIHVwZGF0aW5nPwojMzQ6
IApuZXcgZmlsZSBtb2RlIDEwMDY0NAoKV0FSTklORzogbGluZSBvdmVyIDgwIGNoYXJhY3RlcnMK
Izc4OiBGSUxFOiBody9wcm94eS9xZW11LXByb3h5LmM6MzM6CisgICAgICAgIGVycm9yX3NldGco
ZXJycCwgIlJlbW90ZSBwcm9jZXNzZWQgaXMgbWFuYWdlZCBhbmQgbGF1bmNoZWQgYnkgZXh0ZXJu
YWwgcHJvZ3JhbSIpOwoKdG90YWw6IDAgZXJyb3JzLCAyIHdhcm5pbmdzLCAzMzggbGluZXMgY2hl
Y2tlZAoKUGF0Y2ggMTMvNTAgaGFzIHN0eWxlIHByb2JsZW1zLCBwbGVhc2UgcmV2aWV3LiAgSWYg
YW55IG9mIHRoZXNlIGVycm9ycwphcmUgZmFsc2UgcG9zaXRpdmVzIHJlcG9ydCB0aGVtIHRvIHRo
ZSBtYWludGFpbmVyLCBzZWUKQ0hFQ0tQQVRDSCBpbiBNQUlOVEFJTkVSUy4KMTQvNTAgQ2hlY2tp
bmcgY29tbWl0IDVhM2ZiYmI4M2U4OSAobXV0bGktcHJvY2VzczogYnVpbGQgcmVtb3RlIGNvbW1h
bmQgbGluZSBhcmdzKQoxNS81MCBDaGVja2luZyBjb21taXQgYTg4ZGNiZDNiMzcxIChtdWx0aS1w
cm9jZXNzOiBQQ0kgQkFSIHJlYWQvd3JpdGUgaGFuZGxpbmcgZm9yIHByb3h5ICYgcmVtb3RlIGVu
ZHBvaW50cykKMTYvNTAgQ2hlY2tpbmcgY29tbWl0IDA2ZGM3NjY2Y2IyMSAobXVsdGktcHJvY2Vz
czogU3luY2hyb25pemUgcmVtb3RlIG1lbW9yeSkKV0FSTklORzogYWRkZWQsIG1vdmVkIG9yIGRl
bGV0ZWQgZmlsZShzKSwgZG9lcyBNQUlOVEFJTkVSUyBuZWVkIHVwZGF0aW5nPwojMzY6IApuZXcg
ZmlsZSBtb2RlIDEwMDY0NAoKdG90YWw6IDAgZXJyb3JzLCAxIHdhcm5pbmdzLCAzMjMgbGluZXMg
Y2hlY2tlZAoKUGF0Y2ggMTYvNTAgaGFzIHN0eWxlIHByb2JsZW1zLCBwbGVhc2UgcmV2aWV3LiAg
SWYgYW55IG9mIHRoZXNlIGVycm9ycwphcmUgZmFsc2UgcG9zaXRpdmVzIHJlcG9ydCB0aGVtIHRv
IHRoZSBtYWludGFpbmVyLCBzZWUKQ0hFQ0tQQVRDSCBpbiBNQUlOVEFJTkVSUy4KMTcvNTAgQ2hl
Y2tpbmcgY29tbWl0IGI0OWM5ZjNhMzY1NSAobXVsdGktcHJvY2VzczogY3JlYXRlIElPSFVCIG9i
amVjdCB0byBoYW5kbGUgaXJxKQpXQVJOSU5HOiBhZGRlZCwgbW92ZWQgb3IgZGVsZXRlZCBmaWxl
KHMpLCBkb2VzIE1BSU5UQUlORVJTIG5lZWQgdXBkYXRpbmc/CiM0MzogCmRlbGV0ZWQgZmlsZSBt
b2RlIDEwMDY0NAoKdG90YWw6IDAgZXJyb3JzLCAxIHdhcm5pbmdzLCA0MTEgbGluZXMgY2hlY2tl
ZAoKUGF0Y2ggMTcvNTAgaGFzIHN0eWxlIHByb2JsZW1zLCBwbGVhc2UgcmV2aWV3LiAgSWYgYW55
IG9mIHRoZXNlIGVycm9ycwphcmUgZmFsc2UgcG9zaXRpdmVzIHJlcG9ydCB0aGVtIHRvIHRoZSBt
YWludGFpbmVyLCBzZWUKQ0hFQ0tQQVRDSCBpbiBNQUlOVEFJTkVSUy4KMTgvNTAgQ2hlY2tpbmcg
Y29tbWl0IDg5OGFmNTliMDFlZiAobXVsdGktcHJvY2VzczogY29uZmlndXJlIHJlbW90ZSBzaWRl
IGRldmljZXMpCjE5LzUwIENoZWNraW5nIGNvbW1pdCA1OWQwYmZmMDI2MTQgKG11bHRpLXByb2Nl
c3M6IFJldHJpZXZlIFBDSSBpbmZvIGZyb20gcmVtb3RlIHByb2Nlc3MpCjIwLzUwIENoZWNraW5n
IGNvbW1pdCBhOGVhOGFhMzQxN2QgKG11bHRpLXByb2Nlc3M6IGFkZCBxZGV2X3Byb3h5X2FkZCB0
byBjcmVhdGUgcHJveHkgZGV2aWNlcykKMjEvNTAgQ2hlY2tpbmcgY29tbWl0IDA0NWY4ZjgyZGUx
YyAobXVsdGktcHJvY2VzczogcmVtb3RlOiBhZGQgc2V0dXBfZGV2aWNlcyBtc2cgcHJvY2Vzc2lu
ZykKMjIvNTAgQ2hlY2tpbmcgY29tbWl0IGQwZTRmMDBjMzA2NSAobXVsdGktcHJvY2VzczogcmVt
b3RlOiB1c2UgZmQgZm9yIHNvY2tldCBmcm9tIHBhcmVudCBwcm9jZXNzKQoyMy81MCBDaGVja2lu
ZyBjb21taXQgNDEzYmYyODdjNDU5IChtdWx0aS1wcm9jZXNzOiByZW1vdGU6IGFkZCBjcmVhdGVf
ZG9uZSBjb25kaXRpb24pCjI0LzUwIENoZWNraW5nIGNvbW1pdCAzMzVmMzMxZWVkMzkgKG11bHRp
LXByb2Nlc3M6IGFkZCBwcm9jZXNzaW5nIG9mIHJlbW90ZSBkZXZpY2UgY29tbWFuZCBsaW5lKQoy
NS81MCBDaGVja2luZyBjb21taXQgMjBjMDVkOWRlY2NjIChtdWx0aS1wcm9jZXNzOiBJbnRyb2R1
Y2UgYnVpbGQgZmxhZ3MgdG8gc2VwYXJhdGUgcmVtb3RlIHByb2Nlc3MgY29kZSkKMjYvNTAgQ2hl
Y2tpbmcgY29tbWl0IDI0Y2ExNjI1ODdmMCAobXVsdGktcHJvY2VzczogcmVmcmFjdG9yIHZsLmMg
Y29kZSkKV0FSTklORzogYWRkZWQsIG1vdmVkIG9yIGRlbGV0ZWQgZmlsZShzKSwgZG9lcyBNQUlO
VEFJTkVSUyBuZWVkIHVwZGF0aW5nPwojMTg5OiAKbmV3IGZpbGUgbW9kZSAxMDA2NDQKCnRvdGFs
OiAwIGVycm9ycywgMSB3YXJuaW5ncywgMzI2IGxpbmVzIGNoZWNrZWQKClBhdGNoIDI2LzUwIGhh
cyBzdHlsZSBwcm9ibGVtcywgcGxlYXNlIHJldmlldy4gIElmIGFueSBvZiB0aGVzZSBlcnJvcnMK
YXJlIGZhbHNlIHBvc2l0aXZlcyByZXBvcnQgdGhlbSB0byB0aGUgbWFpbnRhaW5lciwgc2VlCkNI
RUNLUEFUQ0ggaW4gTUFJTlRBSU5FUlMuCjI3LzUwIENoZWNraW5nIGNvbW1pdCA3ZmNjNzA0N2Vh
YTAgKG11bHRpLXByb2Nlc3M6IGFkZCByZW1vdGUgb3B0aW9uKQoyOC81MCBDaGVja2luZyBjb21t
aXQgODNiYzM1MjUxMmM3IChtdWx0aS1wcm9jZXNzOiBhZGQgcmVtb3RlIG9wdGlvbnMgcGFyc2Vy
KQoyOS81MCBDaGVja2luZyBjb21taXQgYWQyMTRlOTE2ZTRkIChtdWx0aS1wcm9jZXNzOiBhZGQg
cGFyc2VfY21kbGluZSBpbiByZW1vdGUgcHJvY2VzcykKV0FSTklORzogYWRkZWQsIG1vdmVkIG9y
IGRlbGV0ZWQgZmlsZShzKSwgZG9lcyBNQUlOVEFJTkVSUyBuZWVkIHVwZGF0aW5nPwojNTk6IApu
ZXcgZmlsZSBtb2RlIDEwMDY0NAoKRVJST1I6IGxpbmUgb3ZlciA5MCBjaGFyYWN0ZXJzCiMxMzU6
IEZJTEU6IHJlbW90ZS9yZW1vdGUtb3B0cy5jOjcyOgorICAgICAgICAgICAgICAgIGVycm9yX3Jl
cG9ydCgiT3B0aW9uIG5vdCBzdXBwb3J0ZWQgZm9yIHRoaXMgdGFyZ2V0LCAleCBhcmNoX21hc2ss
ICV4IGFyY2hfdHlwZSIsCgp0b3RhbDogMSBlcnJvcnMsIDEgd2FybmluZ3MsIDE0OCBsaW5lcyBj
aGVja2VkCgpQYXRjaCAyOS81MCBoYXMgc3R5bGUgcHJvYmxlbXMsIHBsZWFzZSByZXZpZXcuICBJ
ZiBhbnkgb2YgdGhlc2UgZXJyb3JzCmFyZSBmYWxzZSBwb3NpdGl2ZXMgcmVwb3J0IHRoZW0gdG8g
dGhlIG1haW50YWluZXIsIHNlZQpDSEVDS1BBVENIIGluIE1BSU5UQUlORVJTLgoKMzAvNTAgQ2hl
Y2tpbmcgY29tbWl0IDkzYjBmOTZlYzI5YiAobXVsdGktcHJvY2Vzczogc2VuZCBoZWFydGJlYXQg
bWVzc2FnZXMgdG8gcmVtb3RlKQozMS81MCBDaGVja2luZyBjb21taXQgNjQ1OTNmNTFhODZjICht
dWx0aS1wcm9jZXNzOiBoYW5kbGUgaGVhcnRiZWF0IG1lc3NhZ2VzIGluIHJlbW90ZSBwcm9jZXNz
KQozMi81MCBDaGVja2luZyBjb21taXQgOGYxNWJkODQxMmEzIChtdWx0aS1wcm9jZXNzOiBVc2Ug
c2VwYXJhdGUgTU1JTyBjb21tdW5pY2F0aW9uIGNoYW5uZWwpCjMzLzUwIENoZWNraW5nIGNvbW1p
dCA4ODhlNzQxYTE5YWYgKG11bHRpLXByb2Nlc3M6IHBlcmZvcm0gZGV2aWNlIHJlc2V0IGluIHRo
ZSByZW1vdGUgcHJvY2VzcykKMzQvNTAgQ2hlY2tpbmcgY29tbWl0IDFlNmQzYWYwNDdlNiAobXVs
dGktcHJvY2Vzcy9tb246IGNob29zZSBITVAgY29tbWFuZHMgYmFzZWQgb24gdGFyZ2V0KQozNS81
MCBDaGVja2luZyBjb21taXQgYTEyYTgwMjAyZjRlIChtdWx0aS1wcm9jZXNzL21vbjogc3R1YiBm
dW5jdGlvbnMgdG8gZW5hYmxlIFFNUCBtb2R1bGUgZm9yIHJlbW90ZSBwcm9jZXNzKQpXQVJOSU5H
OiBhZGRlZCwgbW92ZWQgb3IgZGVsZXRlZCBmaWxlKHMpLCBkb2VzIE1BSU5UQUlORVJTIG5lZWQg
dXBkYXRpbmc/CiMxMTA6IApuZXcgZmlsZSBtb2RlIDEwMDY0NAoKRVJST1I6IGxpbmUgb3ZlciA5
MCBjaGFyYWN0ZXJzCiM1NTA6IEZJTEU6IHN0dWJzL3FhcGktdGFyZ2V0LmM6NDg6CisjaWYgZGVm
aW5lZChUQVJHRVRfUFBDKSB8fCBkZWZpbmVkKFRBUkdFVF9BUk0pIHx8IGRlZmluZWQoVEFSR0VU
X0kzODYpIHx8IGRlZmluZWQoVEFSR0VUX1MzOTBYKSB8fCBkZWZpbmVkKFRBUkdFVF9NSVBTKQoK
dG90YWw6IDEgZXJyb3JzLCAxIHdhcm5pbmdzLCA3MzAgbGluZXMgY2hlY2tlZAoKUGF0Y2ggMzUv
NTAgaGFzIHN0eWxlIHByb2JsZW1zLCBwbGVhc2UgcmV2aWV3LiAgSWYgYW55IG9mIHRoZXNlIGVy
cm9ycwphcmUgZmFsc2UgcG9zaXRpdmVzIHJlcG9ydCB0aGVtIHRvIHRoZSBtYWludGFpbmVyLCBz
ZWUKQ0hFQ0tQQVRDSCBpbiBNQUlOVEFJTkVSUy4KCjM2LzUwIENoZWNraW5nIGNvbW1pdCBkYmUz
YTYzN2ZhYzcgKG11bHRpLXByb2Nlc3MvbW9uOiBlbmFibGUgUU1QIG1vZHVsZSBzdXBwb3J0IGlu
IHRoZSByZW1vdGUgcHJvY2VzcykKMzcvNTAgQ2hlY2tpbmcgY29tbWl0IGNhNzBkNGE3ODU5ZCAo
bXVsdGktcHJvY2Vzcy9tb246IFJlZmFjdG9yIG1vbml0b3IvY2hhcmRldiBmdW5jdGlvbnMgb3V0
IG9mIHZsLmMpCjM4LzUwIENoZWNraW5nIGNvbW1pdCA5YTg1YWYwOWNmMDEgKG11bHRpLXByb2Nl
c3MvbW9uOiBJbml0aWFsaXplIFFNUCBtb2R1bGUgZm9yIHJlbW90ZSBwcm9jZXNzZXMpCjM5LzUw
IENoZWNraW5nIGNvbW1pdCA5NjU1N2QwOTc4N2MgKG11bHRpLXByb2Nlc3M6IHByZXZlbnQgZHVw
bGljYXRlIG1lbW9yeSBpbml0aWFsaXphdGlvbiBpbiByZW1vdGUpCjQwLzUwIENoZWNraW5nIGNv
bW1pdCAzMjUzMTU3MmU4YzcgKG11bHRpLXByb2Nlc3MvbWlnOiBidWlsZCBtaWdyYXRpb24gbW9k
dWxlIGluIHRoZSByZW1vdGUgcHJvY2VzcykKNDEvNTAgQ2hlY2tpbmcgY29tbWl0IGI4ZGJhZDgw
NzNiNiAobXVsdGktcHJvY2Vzcy9taWc6IEVuYWJsZSBWTVNEIHNhdmUgaW4gdGhlIFByb3h5IG9i
amVjdCkKRVJST1I6IHN1c3BlY3QgY29kZSBpbmRlbnQgZm9yIGNvbmRpdGlvbmFsIHN0YXRlbWVu
dHMgKDQsIDQpCiMxMzE6IEZJTEU6IGh3L3Byb3h5L3FlbXUtcHJveHkuYzo1NTc6CisgICAgd2hp
bGUgKCooKHZvbGF0aWxlIHVpbnQ2NF90ICopJnBkZXYtPm1pZ3NpemUpIDwgc2l6ZSkgeworICAg
IH0KCnRvdGFsOiAxIGVycm9ycywgMCB3YXJuaW5ncywgMTc0IGxpbmVzIGNoZWNrZWQKClBhdGNo
IDQxLzUwIGhhcyBzdHlsZSBwcm9ibGVtcywgcGxlYXNlIHJldmlldy4gIElmIGFueSBvZiB0aGVz
ZSBlcnJvcnMKYXJlIGZhbHNlIHBvc2l0aXZlcyByZXBvcnQgdGhlbSB0byB0aGUgbWFpbnRhaW5l
ciwgc2VlCkNIRUNLUEFUQ0ggaW4gTUFJTlRBSU5FUlMuCgo0Mi81MCBDaGVja2luZyBjb21taXQg
NGIxMjRiMjVhZGVkIChtdWx0aS1wcm9jZXNzL21pZzogU2VuZCBWTVNEIG9mIHJlbW90ZSB0byB0
aGUgUHJveHkgb2JqZWN0KQo0My81MCBDaGVja2luZyBjb21taXQgNGViYmQ3NDRmMzRiIChtdWx0
aS1wcm9jZXNzL21pZzogTG9hZCBWTVNEIGluIHRoZSBwcm94eSBvYmplY3QpCjQ0LzUwIENoZWNr
aW5nIGNvbW1pdCA4YmMzNzk2N2RjZDggKG11bHRpLXByb2Nlc3MvbWlnOiByZWZhY3RvciBydW5z
dGF0ZV9jaGVjayBpbnRvIGNvbW1vbiBmaWxlKQpXQVJOSU5HOiBhZGRlZCwgbW92ZWQgb3IgZGVs
ZXRlZCBmaWxlKHMpLCBkb2VzIE1BSU5UQUlORVJTIG5lZWQgdXBkYXRpbmc/CiM0ODogCm5ldyBm
aWxlIG1vZGUgMTAwNjQ0Cgp0b3RhbDogMCBlcnJvcnMsIDEgd2FybmluZ3MsIDg5IGxpbmVzIGNo
ZWNrZWQKClBhdGNoIDQ0LzUwIGhhcyBzdHlsZSBwcm9ibGVtcywgcGxlYXNlIHJldmlldy4gIElm
IGFueSBvZiB0aGVzZSBlcnJvcnMKYXJlIGZhbHNlIHBvc2l0aXZlcyByZXBvcnQgdGhlbSB0byB0
aGUgbWFpbnRhaW5lciwgc2VlCkNIRUNLUEFUQ0ggaW4gTUFJTlRBSU5FUlMuCjQ1LzUwIENoZWNr
aW5nIGNvbW1pdCBmMTYzZTliMDJlMjUgKG11bHRpLXByb2Nlc3MvbWlnOiBTeW5jaHJvbml6ZSBy
dW5zdGF0ZSBvZiByZW1vdGUgcHJvY2VzcykKNDYvNTAgQ2hlY2tpbmcgY29tbWl0IDAwNjBmODE0
ZTljOCAobXVsdGktcHJvY2Vzcy9taWc6IFJlc3RvcmUgdGhlIFZNU0QgaW4gcmVtb3RlIHByb2Nl
c3MpCjQ3LzUwIENoZWNraW5nIGNvbW1pdCBjYzFmNmI0OTcwZDQgKG11bHRpLXByb2Nlc3M6IEVu
YWJsZSBzdXBwb3J0IGZvciBtdWx0aXBsZSBkZXZpY2VzIGluIHJlbW90ZSkKNDgvNTAgQ2hlY2tp
bmcgY29tbWl0IGIwNmU2NzZjMjExOSAobXVsdGktcHJvY2VzczogVmFsaWRhdGUgaW5jb21pbmcg
Y29tbWFuZHMgZnJvbSBQcm94eSkKNDkvNTAgQ2hlY2tpbmcgY29tbWl0IDdjNzk0MTk1MzE5ZCAo
bXVsdGktcHJvY2VzczogYWRkIHRoZSBjb25jZXB0IGRlc2NyaXB0aW9uIHRvIGRvY3MvZGV2ZWwv
cWVtdS1tdWx0aXByb2Nlc3MpCldBUk5JTkc6IGFkZGVkLCBtb3ZlZCBvciBkZWxldGVkIGZpbGUo
cyksIGRvZXMgTUFJTlRBSU5FUlMgbmVlZCB1cGRhdGluZz8KIzIyOiAKbmV3IGZpbGUgbW9kZSAx
MDA2NDQKCnRvdGFsOiAwIGVycm9ycywgMSB3YXJuaW5ncywgMTEwNiBsaW5lcyBjaGVja2VkCgpQ
YXRjaCA0OS81MCBoYXMgc3R5bGUgcHJvYmxlbXMsIHBsZWFzZSByZXZpZXcuICBJZiBhbnkgb2Yg
dGhlc2UgZXJyb3JzCmFyZSBmYWxzZSBwb3NpdGl2ZXMgcmVwb3J0IHRoZW0gdG8gdGhlIG1haW50
YWluZXIsIHNlZQpDSEVDS1BBVENIIGluIE1BSU5UQUlORVJTLgo1MC81MCBDaGVja2luZyBjb21t
aXQgMDQ2NjQ5YzcxYzg3IChtdWx0aS1wcm9jZXNzOiBhZGQgY29uZmlndXJlIGFuZCB1c2FnZSBp
bmZvcm1hdGlvbikKV0FSTklORzogYWRkZWQsIG1vdmVkIG9yIGRlbGV0ZWQgZmlsZShzKSwgZG9l
cyBNQUlOVEFJTkVSUyBuZWVkIHVwZGF0aW5nPwojMTM6IApuZXcgZmlsZSBtb2RlIDEwMDY0NAoK
dG90YWw6IDAgZXJyb3JzLCAxIHdhcm5pbmdzLCA4NiBsaW5lcyBjaGVja2VkCgpQYXRjaCA1MC81
MCBoYXMgc3R5bGUgcHJvYmxlbXMsIHBsZWFzZSByZXZpZXcuICBJZiBhbnkgb2YgdGhlc2UgZXJy
b3JzCmFyZSBmYWxzZSBwb3NpdGl2ZXMgcmVwb3J0IHRoZW0gdG8gdGhlIG1haW50YWluZXIsIHNl
ZQpDSEVDS1BBVENIIGluIE1BSU5UQUlORVJTLgo9PT0gT1VUUFVUIEVORCA9PT0KClRlc3QgY29t
bWFuZCBleGl0ZWQgd2l0aCBjb2RlOiAxCgoKVGhlIGZ1bGwgbG9nIGlzIGF2YWlsYWJsZSBhdApo
dHRwOi8vcGF0Y2hldy5vcmcvbG9ncy9jb3Zlci4xNTgyNTc2MzcyLmdpdC5qYWcucmFtYW5Ab3Jh
Y2xlLmNvbS90ZXN0aW5nLmNoZWNrcGF0Y2gvP3R5cGU9bWVzc2FnZS4KLS0tCkVtYWlsIGdlbmVy
YXRlZCBhdXRvbWF0aWNhbGx5IGJ5IFBhdGNoZXcgW2h0dHBzOi8vcGF0Y2hldy5vcmcvXS4KUGxl
YXNlIHNlbmQgeW91ciBmZWVkYmFjayB0byBwYXRjaGV3LWRldmVsQHJlZGhhdC5jb20=

