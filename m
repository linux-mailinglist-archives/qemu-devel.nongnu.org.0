Return-Path: <qemu-devel-bounces+lists+qemu-devel=lfdr.de@nongnu.org>
X-Original-To: lists+qemu-devel@lfdr.de
Delivered-To: lists+qemu-devel@lfdr.de
Received: from lists.gnu.org (lists.gnu.org [209.51.188.17])
	by mail.lfdr.de (Postfix) with ESMTPS id C9869207182
	for <lists+qemu-devel@lfdr.de>; Wed, 24 Jun 2020 12:52:08 +0200 (CEST)
Received: from localhost ([::1]:48306 helo=lists1p.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.90_1)
	(envelope-from <qemu-devel-bounces+lists+qemu-devel=lfdr.de@nongnu.org>)
	id 1jo30h-0001WK-Qu
	for lists+qemu-devel@lfdr.de; Wed, 24 Jun 2020 06:52:07 -0400
Received: from eggs.gnu.org ([2001:470:142:3::10]:55878)
 by lists.gnu.org with esmtps (TLS1.2:ECDHE_RSA_AES_256_GCM_SHA384:256)
 (Exim 4.90_1) (envelope-from <stefanha@redhat.com>)
 id 1jo2yd-0007Oj-HP
 for qemu-devel@nongnu.org; Wed, 24 Jun 2020 06:49:59 -0400
Received: from us-smtp-2.mimecast.com ([207.211.31.81]:48060
 helo=us-smtp-delivery-1.mimecast.com)
 by eggs.gnu.org with esmtps (TLS1.2:ECDHE_RSA_AES_256_CBC_SHA1:256)
 (Exim 4.90_1) (envelope-from <stefanha@redhat.com>)
 id 1jo2yb-0000mu-AK
 for qemu-devel@nongnu.org; Wed, 24 Jun 2020 06:49:59 -0400
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=redhat.com;
 s=mimecast20190719; t=1592995796;
 h=from:from:reply-to:subject:subject:date:date:message-id:message-id:
 to:to:cc:cc:mime-version:mime-version:content-type:content-type:
 content-transfer-encoding:content-transfer-encoding:
 in-reply-to:in-reply-to:references:references;
 bh=xIcB8vduAfxdk/tQiglXPIEDhcVUHNx19z45fvg25z4=;
 b=U+2Tet0xEzgplkJabxmKP+EDaJOW7/pvaDWBeN6w++s9XiJ50CKlHoqQ9FYCBuqOrdqJL9
 thbRks11RaIgaHb3sSXuJ1c+Guz2uRzSPUQslB7XTzWkVsyJRjoANdOWQGasAqvBCCIlPU
 hGZFBwK4+H4G50oIi5nHuAp+nYMGu3Y=
Received: from mimecast-mx01.redhat.com (mimecast-mx01.redhat.com
 [209.132.183.4]) (Using TLS) by relay.mimecast.com with ESMTP id
 us-mta-483-jhP20RJZOXqhzorcSV0fHQ-1; Wed, 24 Jun 2020 06:49:54 -0400
X-MC-Unique: jhP20RJZOXqhzorcSV0fHQ-1
Received: from smtp.corp.redhat.com (int-mx03.intmail.prod.int.phx2.redhat.com
 [10.5.11.13])
 (using TLSv1.2 with cipher AECDH-AES256-SHA (256/256 bits))
 (No client certificate requested)
 by mimecast-mx01.redhat.com (Postfix) with ESMTPS id C59B364AD0;
 Wed, 24 Jun 2020 10:49:53 +0000 (UTC)
Received: from localhost (ovpn-114-150.ams2.redhat.com [10.36.114.150])
 by smtp.corp.redhat.com (Postfix) with ESMTP id 5C2FF7CADE;
 Wed, 24 Jun 2020 10:49:45 +0000 (UTC)
From: Stefan Hajnoczi <stefanha@redhat.com>
To: qemu-devel@nongnu.org
Subject: [PULL 1/2] scripts/tracetool: Update maintainer email address
Date: Wed, 24 Jun 2020 11:49:34 +0100
Message-Id: <20200624104935.61329-2-stefanha@redhat.com>
In-Reply-To: <20200624104935.61329-1-stefanha@redhat.com>
References: <20200624104935.61329-1-stefanha@redhat.com>
MIME-Version: 1.0
X-Scanned-By: MIMEDefang 2.79 on 10.5.11.13
X-Mimecast-Spam-Score: 0
X-Mimecast-Originator: redhat.com
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: base64
Received-SPF: pass client-ip=207.211.31.81; envelope-from=stefanha@redhat.com;
 helo=us-smtp-delivery-1.mimecast.com
X-detected-operating-system: by eggs.gnu.org: First seen = 2020/06/24 01:59:40
X-ACL-Warn: Detected OS   = Linux 2.2.x-3.x [generic] [fuzzy]
X-Spam_score_int: -30
X-Spam_score: -3.1
X-Spam_bar: ---
X-Spam_report: (-3.1 / 5.0 requ) BAYES_00=-1.9, DKIMWL_WL_HIGH=-1,
 DKIM_SIGNED=0.1, DKIM_VALID=-0.1, DKIM_VALID_AU=-0.1, DKIM_VALID_EF=-0.1,
 RCVD_IN_DNSWL_NONE=-0.0001, RCVD_IN_MSPIKE_H3=-0.01, RCVD_IN_MSPIKE_WL=-0.01,
 SPF_HELO_NONE=0.001, SPF_PASS=-0.001, URIBL_BLOCKED=0.001 autolearn=_AUTOLEARN
X-Spam_action: no action
X-BeenThere: qemu-devel@nongnu.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: <qemu-devel.nongnu.org>
List-Unsubscribe: <https://lists.nongnu.org/mailman/options/qemu-devel>,
 <mailto:qemu-devel-request@nongnu.org?subject=unsubscribe>
List-Archive: <https://lists.nongnu.org/archive/html/qemu-devel>
List-Post: <mailto:qemu-devel@nongnu.org>
List-Help: <mailto:qemu-devel-request@nongnu.org?subject=help>
List-Subscribe: <https://lists.nongnu.org/mailman/listinfo/qemu-devel>,
 <mailto:qemu-devel-request@nongnu.org?subject=subscribe>
Cc: Peter Maydell <peter.maydell@linaro.org>,
 Eduardo Habkost <ehabkost@redhat.com>, John Snow <jsnow@redhat.com>,
 Gerd Hoffmann <kraxel@redhat.com>, Stefan Hajnoczi <stefanha@redhat.com>,
 Cleber Rosa <crosa@redhat.com>, Paolo Bonzini <pbonzini@redhat.com>,
 =?UTF-8?q?Philippe=20Mathieu-Daud=C3=A9?= <philmd@redhat.com>
Errors-To: qemu-devel-bounces+lists+qemu-devel=lfdr.de@nongnu.org
Sender: "Qemu-devel" <qemu-devel-bounces+lists+qemu-devel=lfdr.de@nongnu.org>

RnJvbTogUGhpbGlwcGUgTWF0aGlldS1EYXVkw6kgPHBoaWxtZEByZWRoYXQuY29tPgoKVGhlcmUg
aXMgYW4gZWZmb3J0IGluIHByb2dyZXNzIHRvIGdlbmVyYXRlIGEgUUVNVSBQeXRob24KcGFja2Fn
ZS4gQXMgSSdtIG5vdCBzdXJlIHRoaXMgb2xkIGVtYWlsIGlzIHN0aWxsIHZhbGlkLAp1cGRhdGUg
aXQgdG8gbm90IHByb2R1Y2UgcGFja2FnZSB3aXRoIGJyb2tlbiBtYWludGFpbmVyCmVtYWlsLgoK
UGF0Y2ggY3JlYXRlZCBtZWNoYW5pY2FsbHkgYnkgcnVubmluZzoKCiAkIHNlZCAtaSAncyxcKF9f
ZW1haWxfXyAqPSAiXClzdGVmYW5oYUBsaW51eC52bmV0LmlibS5jb20iLFwxc3RlZmFuaGFAcmVk
aGF0LmNvbSIsJyBcCiAgICAgICAgICQoZ2l0IGdyZXAgLWwgJ2VtYWlsLipzdGVmYW5oYUBsaW51
eC52bmV0LmlibS5jb20nKQoKU2lnbmVkLW9mZi1ieTogUGhpbGlwcGUgTWF0aGlldS1EYXVkw6kg
PHBoaWxtZEByZWRoYXQuY29tPgpSZXZpZXdlZC1ieTogSm9obiBTbm93IDxqc25vd0ByZWRoYXQu
Y29tPgpNZXNzYWdlLWlkOiAyMDIwMDUxMTA4MjgxNi42OTYtMS1waGlsbWRAcmVkaGF0LmNvbQpT
aWduZWQtb2ZmLWJ5OiBTdGVmYW4gSGFqbm9jemkgPHN0ZWZhbmhhQHJlZGhhdC5jb20+Ci0tLQog
c2NyaXB0cy90cmFjZXRvb2wucHkgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHwgMiArLQog
c2NyaXB0cy90cmFjZXRvb2wvX19pbml0X18ucHkgICAgICAgICAgICAgICAgICAgIHwgMiArLQog
c2NyaXB0cy90cmFjZXRvb2wvYmFja2VuZC9fX2luaXRfXy5weSAgICAgICAgICAgIHwgMiArLQog
c2NyaXB0cy90cmFjZXRvb2wvYmFja2VuZC9kdHJhY2UucHkgICAgICAgICAgICAgIHwgMiArLQog
c2NyaXB0cy90cmFjZXRvb2wvYmFja2VuZC9sb2cucHkgICAgICAgICAgICAgICAgIHwgMiArLQog
c2NyaXB0cy90cmFjZXRvb2wvYmFja2VuZC9zaW1wbGUucHkgICAgICAgICAgICAgIHwgMiArLQog
c2NyaXB0cy90cmFjZXRvb2wvYmFja2VuZC91c3QucHkgICAgICAgICAgICAgICAgIHwgMiArLQog
c2NyaXB0cy90cmFjZXRvb2wvZm9ybWF0L19faW5pdF9fLnB5ICAgICAgICAgICAgIHwgMiArLQog
c2NyaXB0cy90cmFjZXRvb2wvZm9ybWF0L2MucHkgICAgICAgICAgICAgICAgICAgIHwgMiArLQog
c2NyaXB0cy90cmFjZXRvb2wvZm9ybWF0L2QucHkgICAgICAgICAgICAgICAgICAgIHwgMiArLQog
c2NyaXB0cy90cmFjZXRvb2wvZm9ybWF0L2gucHkgICAgICAgICAgICAgICAgICAgIHwgMiArLQog
c2NyaXB0cy90cmFjZXRvb2wvZm9ybWF0L3N0YXAucHkgICAgICAgICAgICAgICAgIHwgMiArLQog
c2NyaXB0cy90cmFjZXRvb2wvZm9ybWF0L3RjZ19oLnB5ICAgICAgICAgICAgICAgIHwgMiArLQog
c2NyaXB0cy90cmFjZXRvb2wvZm9ybWF0L3RjZ19oZWxwZXJfYy5weSAgICAgICAgIHwgMiArLQog
c2NyaXB0cy90cmFjZXRvb2wvZm9ybWF0L3RjZ19oZWxwZXJfaC5weSAgICAgICAgIHwgMiArLQog
c2NyaXB0cy90cmFjZXRvb2wvZm9ybWF0L3RjZ19oZWxwZXJfd3JhcHBlcl9oLnB5IHwgMiArLQog
c2NyaXB0cy90cmFjZXRvb2wvdHJhbnNmb3JtLnB5ICAgICAgICAgICAgICAgICAgIHwgMiArLQog
c2NyaXB0cy90cmFjZXRvb2wvdmNwdS5weSAgICAgICAgICAgICAgICAgICAgICAgIHwgMiArLQog
MTggZmlsZXMgY2hhbmdlZCwgMTggaW5zZXJ0aW9ucygrKSwgMTggZGVsZXRpb25zKC0pCgpkaWZm
IC0tZ2l0IGEvc2NyaXB0cy90cmFjZXRvb2wucHkgYi9zY3JpcHRzL3RyYWNldG9vbC5weQppbmRl
eCAyNjRjYzllZWNjLi4zMTE0NjI0MmI3IDEwMDc1NQotLS0gYS9zY3JpcHRzL3RyYWNldG9vbC5w
eQorKysgYi9zY3JpcHRzL3RyYWNldG9vbC5weQpAQCAtMTAsNyArMTAsNyBAQCBfX2NvcHlyaWdo
dF9fICA9ICJDb3B5cmlnaHQgMjAxMi0yMDE0LCBMbHXDrXMgVmlsYW5vdmEgPHZpbGFub3ZhQGFj
LnVwYy5lZHU+IgogX19saWNlbnNlX18gICAgPSAiR1BMIHZlcnNpb24gMiBvciAoYXQgeW91ciBv
cHRpb24pIGFueSBsYXRlciB2ZXJzaW9uIgogCiBfX21haW50YWluZXJfXyA9ICJTdGVmYW4gSGFq
bm9jemkiCi1fX2VtYWlsX18gICAgICA9ICJzdGVmYW5oYUBsaW51eC52bmV0LmlibS5jb20iCitf
X2VtYWlsX18gICAgICA9ICJzdGVmYW5oYUByZWRoYXQuY29tIgogCiAKIGltcG9ydCBzeXMKZGlm
ZiAtLWdpdCBhL3NjcmlwdHMvdHJhY2V0b29sL19faW5pdF9fLnB5IGIvc2NyaXB0cy90cmFjZXRv
b2wvX19pbml0X18ucHkKaW5kZXggMTNkMjlmMWU0Mi4uM2NjZmExZTExNiAxMDA2NDQKLS0tIGEv
c2NyaXB0cy90cmFjZXRvb2wvX19pbml0X18ucHkKKysrIGIvc2NyaXB0cy90cmFjZXRvb2wvX19p
bml0X18ucHkKQEAgLTksNyArOSw3IEBAIF9fY29weXJpZ2h0X18gID0gIkNvcHlyaWdodCAyMDEy
LTIwMTcsIExsdcOtcyBWaWxhbm92YSA8dmlsYW5vdmFAYWMudXBjLmVkdT4iCiBfX2xpY2Vuc2Vf
XyAgICA9ICJHUEwgdmVyc2lvbiAyIG9yIChhdCB5b3VyIG9wdGlvbikgYW55IGxhdGVyIHZlcnNp
b24iCiAKIF9fbWFpbnRhaW5lcl9fID0gIlN0ZWZhbiBIYWpub2N6aSIKLV9fZW1haWxfXyAgICAg
ID0gInN0ZWZhbmhhQGxpbnV4LnZuZXQuaWJtLmNvbSIKK19fZW1haWxfXyAgICAgID0gInN0ZWZh
bmhhQHJlZGhhdC5jb20iCiAKIAogaW1wb3J0IHJlCmRpZmYgLS1naXQgYS9zY3JpcHRzL3RyYWNl
dG9vbC9iYWNrZW5kL19faW5pdF9fLnB5IGIvc2NyaXB0cy90cmFjZXRvb2wvYmFja2VuZC9fX2lu
aXRfXy5weQppbmRleCA1NGNhYjJjNGRlLi43YmZjYzg2Y2M1IDEwMDY0NAotLS0gYS9zY3JpcHRz
L3RyYWNldG9vbC9iYWNrZW5kL19faW5pdF9fLnB5CisrKyBiL3NjcmlwdHMvdHJhY2V0b29sL2Jh
Y2tlbmQvX19pbml0X18ucHkKQEAgLTUwLDcgKzUwLDcgQEAgX19jb3B5cmlnaHRfXyAgPSAiQ29w
eXJpZ2h0IDIwMTItMjAxNCwgTGx1w61zIFZpbGFub3ZhIDx2aWxhbm92YUBhYy51cGMuZWR1PiIK
IF9fbGljZW5zZV9fICAgID0gIkdQTCB2ZXJzaW9uIDIgb3IgKGF0IHlvdXIgb3B0aW9uKSBhbnkg
bGF0ZXIgdmVyc2lvbiIKIAogX19tYWludGFpbmVyX18gPSAiU3RlZmFuIEhham5vY3ppIgotX19l
bWFpbF9fICAgICAgPSAic3RlZmFuaGFAbGludXgudm5ldC5pYm0uY29tIgorX19lbWFpbF9fICAg
ICAgPSAic3RlZmFuaGFAcmVkaGF0LmNvbSIKIAogCiBpbXBvcnQgb3MKZGlmZiAtLWdpdCBhL3Nj
cmlwdHMvdHJhY2V0b29sL2JhY2tlbmQvZHRyYWNlLnB5IGIvc2NyaXB0cy90cmFjZXRvb2wvYmFj
a2VuZC9kdHJhY2UucHkKaW5kZXggNjM4OTkwZGI3OS4uNTcxMTg5MmJhMCAxMDA2NDQKLS0tIGEv
c2NyaXB0cy90cmFjZXRvb2wvYmFja2VuZC9kdHJhY2UucHkKKysrIGIvc2NyaXB0cy90cmFjZXRv
b2wvYmFja2VuZC9kdHJhY2UucHkKQEAgLTksNyArOSw3IEBAIF9fY29weXJpZ2h0X18gID0gIkNv
cHlyaWdodCAyMDEyLTIwMTcsIExsdcOtcyBWaWxhbm92YSA8dmlsYW5vdmFAYWMudXBjLmVkdT4i
CiBfX2xpY2Vuc2VfXyAgICA9ICJHUEwgdmVyc2lvbiAyIG9yIChhdCB5b3VyIG9wdGlvbikgYW55
IGxhdGVyIHZlcnNpb24iCiAKIF9fbWFpbnRhaW5lcl9fID0gIlN0ZWZhbiBIYWpub2N6aSIKLV9f
ZW1haWxfXyAgICAgID0gInN0ZWZhbmhhQGxpbnV4LnZuZXQuaWJtLmNvbSIKK19fZW1haWxfXyAg
ICAgID0gInN0ZWZhbmhhQHJlZGhhdC5jb20iCiAKIAogZnJvbSB0cmFjZXRvb2wgaW1wb3J0IG91
dApkaWZmIC0tZ2l0IGEvc2NyaXB0cy90cmFjZXRvb2wvYmFja2VuZC9sb2cucHkgYi9zY3JpcHRz
L3RyYWNldG9vbC9iYWNrZW5kL2xvZy5weQppbmRleCAyM2IyNzRjMGZkLi44NzcyMjJiYmU5IDEw
MDY0NAotLS0gYS9zY3JpcHRzL3RyYWNldG9vbC9iYWNrZW5kL2xvZy5weQorKysgYi9zY3JpcHRz
L3RyYWNldG9vbC9iYWNrZW5kL2xvZy5weQpAQCAtOSw3ICs5LDcgQEAgX19jb3B5cmlnaHRfXyAg
PSAiQ29weXJpZ2h0IDIwMTItMjAxNywgTGx1w61zIFZpbGFub3ZhIDx2aWxhbm92YUBhYy51cGMu
ZWR1PiIKIF9fbGljZW5zZV9fICAgID0gIkdQTCB2ZXJzaW9uIDIgb3IgKGF0IHlvdXIgb3B0aW9u
KSBhbnkgbGF0ZXIgdmVyc2lvbiIKIAogX19tYWludGFpbmVyX18gPSAiU3RlZmFuIEhham5vY3pp
IgotX19lbWFpbF9fICAgICAgPSAic3RlZmFuaGFAbGludXgudm5ldC5pYm0uY29tIgorX19lbWFp
bF9fICAgICAgPSAic3RlZmFuaGFAcmVkaGF0LmNvbSIKIAogCiBmcm9tIHRyYWNldG9vbCBpbXBv
cnQgb3V0CmRpZmYgLS1naXQgYS9zY3JpcHRzL3RyYWNldG9vbC9iYWNrZW5kL3NpbXBsZS5weSBi
L3NjcmlwdHMvdHJhY2V0b29sL2JhY2tlbmQvc2ltcGxlLnB5CmluZGV4IGI2NTBjMjYyYjUuLmE3
NGQ2MWZjZDYgMTAwNjQ0Ci0tLSBhL3NjcmlwdHMvdHJhY2V0b29sL2JhY2tlbmQvc2ltcGxlLnB5
CisrKyBiL3NjcmlwdHMvdHJhY2V0b29sL2JhY2tlbmQvc2ltcGxlLnB5CkBAIC05LDcgKzksNyBA
QCBfX2NvcHlyaWdodF9fICA9ICJDb3B5cmlnaHQgMjAxMi0yMDE3LCBMbHXDrXMgVmlsYW5vdmEg
PHZpbGFub3ZhQGFjLnVwYy5lZHU+IgogX19saWNlbnNlX18gICAgPSAiR1BMIHZlcnNpb24gMiBv
ciAoYXQgeW91ciBvcHRpb24pIGFueSBsYXRlciB2ZXJzaW9uIgogCiBfX21haW50YWluZXJfXyA9
ICJTdGVmYW4gSGFqbm9jemkiCi1fX2VtYWlsX18gICAgICA9ICJzdGVmYW5oYUBsaW51eC52bmV0
LmlibS5jb20iCitfX2VtYWlsX18gICAgICA9ICJzdGVmYW5oYUByZWRoYXQuY29tIgogCiAKIGZy
b20gdHJhY2V0b29sIGltcG9ydCBvdXQKZGlmZiAtLWdpdCBhL3NjcmlwdHMvdHJhY2V0b29sL2Jh
Y2tlbmQvdXN0LnB5IGIvc2NyaXB0cy90cmFjZXRvb2wvYmFja2VuZC91c3QucHkKaW5kZXggYTc3
MmEzYjUzYi4uNmMwYTVmOGQ2OCAxMDA2NDQKLS0tIGEvc2NyaXB0cy90cmFjZXRvb2wvYmFja2Vu
ZC91c3QucHkKKysrIGIvc2NyaXB0cy90cmFjZXRvb2wvYmFja2VuZC91c3QucHkKQEAgLTksNyAr
OSw3IEBAIF9fY29weXJpZ2h0X18gID0gIkNvcHlyaWdodCAyMDEyLTIwMTcsIExsdcOtcyBWaWxh
bm92YSA8dmlsYW5vdmFAYWMudXBjLmVkdT4iCiBfX2xpY2Vuc2VfXyAgICA9ICJHUEwgdmVyc2lv
biAyIG9yIChhdCB5b3VyIG9wdGlvbikgYW55IGxhdGVyIHZlcnNpb24iCiAKIF9fbWFpbnRhaW5l
cl9fID0gIlN0ZWZhbiBIYWpub2N6aSIKLV9fZW1haWxfXyAgICAgID0gInN0ZWZhbmhhQGxpbnV4
LnZuZXQuaWJtLmNvbSIKK19fZW1haWxfXyAgICAgID0gInN0ZWZhbmhhQHJlZGhhdC5jb20iCiAK
IAogZnJvbSB0cmFjZXRvb2wgaW1wb3J0IG91dApkaWZmIC0tZ2l0IGEvc2NyaXB0cy90cmFjZXRv
b2wvZm9ybWF0L19faW5pdF9fLnB5IGIvc2NyaXB0cy90cmFjZXRvb2wvZm9ybWF0L19faW5pdF9f
LnB5CmluZGV4IGFiYTJmN2E0NDEuLjJkYzQ2ZjNkZDkgMTAwNjQ0Ci0tLSBhL3NjcmlwdHMvdHJh
Y2V0b29sL2Zvcm1hdC9fX2luaXRfXy5weQorKysgYi9zY3JpcHRzL3RyYWNldG9vbC9mb3JtYXQv
X19pbml0X18ucHkKQEAgLTMyLDcgKzMyLDcgQEAgX19jb3B5cmlnaHRfXyAgPSAiQ29weXJpZ2h0
IDIwMTItMjAxNCwgTGx1w61zIFZpbGFub3ZhIDx2aWxhbm92YUBhYy51cGMuZWR1PiIKIF9fbGlj
ZW5zZV9fICAgID0gIkdQTCB2ZXJzaW9uIDIgb3IgKGF0IHlvdXIgb3B0aW9uKSBhbnkgbGF0ZXIg
dmVyc2lvbiIKIAogX19tYWludGFpbmVyX18gPSAiU3RlZmFuIEhham5vY3ppIgotX19lbWFpbF9f
ICAgICAgPSAic3RlZmFuaGFAbGludXgudm5ldC5pYm0uY29tIgorX19lbWFpbF9fICAgICAgPSAi
c3RlZmFuaGFAcmVkaGF0LmNvbSIKIAogCiBpbXBvcnQgb3MKZGlmZiAtLWdpdCBhL3NjcmlwdHMv
dHJhY2V0b29sL2Zvcm1hdC9jLnB5IGIvc2NyaXB0cy90cmFjZXRvb2wvZm9ybWF0L2MucHkKaW5k
ZXggNzhhZjhhZmY3Mi4uMjNkODJlYTg2MSAxMDA2NDQKLS0tIGEvc2NyaXB0cy90cmFjZXRvb2wv
Zm9ybWF0L2MucHkKKysrIGIvc2NyaXB0cy90cmFjZXRvb2wvZm9ybWF0L2MucHkKQEAgLTksNyAr
OSw3IEBAIF9fY29weXJpZ2h0X18gID0gIkNvcHlyaWdodCAyMDEyLTIwMTQsIExsdcOtcyBWaWxh
bm92YSA8dmlsYW5vdmFAYWMudXBjLmVkdT4iCiBfX2xpY2Vuc2VfXyAgICA9ICJHUEwgdmVyc2lv
biAyIG9yIChhdCB5b3VyIG9wdGlvbikgYW55IGxhdGVyIHZlcnNpb24iCiAKIF9fbWFpbnRhaW5l
cl9fID0gIlN0ZWZhbiBIYWpub2N6aSIKLV9fZW1haWxfXyAgICAgID0gInN0ZWZhbmhhQGxpbnV4
LnZuZXQuaWJtLmNvbSIKK19fZW1haWxfXyAgICAgID0gInN0ZWZhbmhhQHJlZGhhdC5jb20iCiAK
IAogZnJvbSB0cmFjZXRvb2wgaW1wb3J0IG91dApkaWZmIC0tZ2l0IGEvc2NyaXB0cy90cmFjZXRv
b2wvZm9ybWF0L2QucHkgYi9zY3JpcHRzL3RyYWNldG9vbC9mb3JtYXQvZC5weQppbmRleCBkMzk4
MGI5MTRiLi4wYWZiNWYzZjQ3IDEwMDY0NAotLS0gYS9zY3JpcHRzL3RyYWNldG9vbC9mb3JtYXQv
ZC5weQorKysgYi9zY3JpcHRzL3RyYWNldG9vbC9mb3JtYXQvZC5weQpAQCAtOSw3ICs5LDcgQEAg
X19jb3B5cmlnaHRfXyAgPSAiQ29weXJpZ2h0IDIwMTItMjAxNCwgTGx1w61zIFZpbGFub3ZhIDx2
aWxhbm92YUBhYy51cGMuZWR1PiIKIF9fbGljZW5zZV9fICAgID0gIkdQTCB2ZXJzaW9uIDIgb3Ig
KGF0IHlvdXIgb3B0aW9uKSBhbnkgbGF0ZXIgdmVyc2lvbiIKIAogX19tYWludGFpbmVyX18gPSAi
U3RlZmFuIEhham5vY3ppIgotX19lbWFpbF9fICAgICAgPSAic3RlZmFuaGFAbGludXgudm5ldC5p
Ym0uY29tIgorX19lbWFpbF9fICAgICAgPSAic3RlZmFuaGFAcmVkaGF0LmNvbSIKIAogCiBmcm9t
IHRyYWNldG9vbCBpbXBvcnQgb3V0CmRpZmYgLS1naXQgYS9zY3JpcHRzL3RyYWNldG9vbC9mb3Jt
YXQvaC5weSBiL3NjcmlwdHMvdHJhY2V0b29sL2Zvcm1hdC9oLnB5CmluZGV4IDgzZTFhMmYzNTUu
LmU5NGYwYmU3ZGEgMTAwNjQ0Ci0tLSBhL3NjcmlwdHMvdHJhY2V0b29sL2Zvcm1hdC9oLnB5Cisr
KyBiL3NjcmlwdHMvdHJhY2V0b29sL2Zvcm1hdC9oLnB5CkBAIC05LDcgKzksNyBAQCBfX2NvcHly
aWdodF9fICA9ICJDb3B5cmlnaHQgMjAxMi0yMDE3LCBMbHXDrXMgVmlsYW5vdmEgPHZpbGFub3Zh
QGFjLnVwYy5lZHU+IgogX19saWNlbnNlX18gICAgPSAiR1BMIHZlcnNpb24gMiBvciAoYXQgeW91
ciBvcHRpb24pIGFueSBsYXRlciB2ZXJzaW9uIgogCiBfX21haW50YWluZXJfXyA9ICJTdGVmYW4g
SGFqbm9jemkiCi1fX2VtYWlsX18gICAgICA9ICJzdGVmYW5oYUBsaW51eC52bmV0LmlibS5jb20i
CitfX2VtYWlsX18gICAgICA9ICJzdGVmYW5oYUByZWRoYXQuY29tIgogCiAKIGZyb20gdHJhY2V0
b29sIGltcG9ydCBvdXQKZGlmZiAtLWdpdCBhL3NjcmlwdHMvdHJhY2V0b29sL2Zvcm1hdC9zdGFw
LnB5IGIvc2NyaXB0cy90cmFjZXRvb2wvZm9ybWF0L3N0YXAucHkKaW5kZXggOGZjODA4ZjJlZi4u
YTIxOGIwNDQ1YyAxMDA2NDQKLS0tIGEvc2NyaXB0cy90cmFjZXRvb2wvZm9ybWF0L3N0YXAucHkK
KysrIGIvc2NyaXB0cy90cmFjZXRvb2wvZm9ybWF0L3N0YXAucHkKQEAgLTksNyArOSw3IEBAIF9f
Y29weXJpZ2h0X18gID0gIkNvcHlyaWdodCAyMDEyLTIwMTQsIExsdcOtcyBWaWxhbm92YSA8dmls
YW5vdmFAYWMudXBjLmVkdT4iCiBfX2xpY2Vuc2VfXyAgICA9ICJHUEwgdmVyc2lvbiAyIG9yIChh
dCB5b3VyIG9wdGlvbikgYW55IGxhdGVyIHZlcnNpb24iCiAKIF9fbWFpbnRhaW5lcl9fID0gIlN0
ZWZhbiBIYWpub2N6aSIKLV9fZW1haWxfXyAgICAgID0gInN0ZWZhbmhhQGxpbnV4LnZuZXQuaWJt
LmNvbSIKK19fZW1haWxfXyAgICAgID0gInN0ZWZhbmhhQHJlZGhhdC5jb20iCiAKIAogZnJvbSB0
cmFjZXRvb2wgaW1wb3J0IG91dApkaWZmIC0tZ2l0IGEvc2NyaXB0cy90cmFjZXRvb2wvZm9ybWF0
L3RjZ19oLnB5IGIvc2NyaXB0cy90cmFjZXRvb2wvZm9ybWF0L3RjZ19oLnB5CmluZGV4IDAxODBl
M2Q3NmMuLjMzY2Y2YTMxYjMgMTAwNjQ0Ci0tLSBhL3NjcmlwdHMvdHJhY2V0b29sL2Zvcm1hdC90
Y2dfaC5weQorKysgYi9zY3JpcHRzL3RyYWNldG9vbC9mb3JtYXQvdGNnX2gucHkKQEAgLTksNyAr
OSw3IEBAIF9fY29weXJpZ2h0X18gID0gIkNvcHlyaWdodCAyMDEyLTIwMTcsIExsdcOtcyBWaWxh
bm92YSA8dmlsYW5vdmFAYWMudXBjLmVkdT4iCiBfX2xpY2Vuc2VfXyAgICA9ICJHUEwgdmVyc2lv
biAyIG9yIChhdCB5b3VyIG9wdGlvbikgYW55IGxhdGVyIHZlcnNpb24iCiAKIF9fbWFpbnRhaW5l
cl9fID0gIlN0ZWZhbiBIYWpub2N6aSIKLV9fZW1haWxfXyAgICAgID0gInN0ZWZhbmhhQGxpbnV4
LnZuZXQuaWJtLmNvbSIKK19fZW1haWxfXyAgICAgID0gInN0ZWZhbmhhQHJlZGhhdC5jb20iCiAK
IAogZnJvbSB0cmFjZXRvb2wgaW1wb3J0IG91dCwgQXJndW1lbnRzCmRpZmYgLS1naXQgYS9zY3Jp
cHRzL3RyYWNldG9vbC9mb3JtYXQvdGNnX2hlbHBlcl9jLnB5IGIvc2NyaXB0cy90cmFjZXRvb2wv
Zm9ybWF0L3RjZ19oZWxwZXJfYy5weQppbmRleCA2NTI3YjY5YWZkLi4yZGI2MzE3ZjNjIDEwMDY0
NAotLS0gYS9zY3JpcHRzL3RyYWNldG9vbC9mb3JtYXQvdGNnX2hlbHBlcl9jLnB5CisrKyBiL3Nj
cmlwdHMvdHJhY2V0b29sL2Zvcm1hdC90Y2dfaGVscGVyX2MucHkKQEAgLTksNyArOSw3IEBAIF9f
Y29weXJpZ2h0X18gID0gIkNvcHlyaWdodCAyMDEyLTIwMTcsIExsdcOtcyBWaWxhbm92YSA8dmls
YW5vdmFAYWMudXBjLmVkdT4iCiBfX2xpY2Vuc2VfXyAgICA9ICJHUEwgdmVyc2lvbiAyIG9yIChh
dCB5b3VyIG9wdGlvbikgYW55IGxhdGVyIHZlcnNpb24iCiAKIF9fbWFpbnRhaW5lcl9fID0gIlN0
ZWZhbiBIYWpub2N6aSIKLV9fZW1haWxfXyAgICAgID0gInN0ZWZhbmhhQGxpbnV4LnZuZXQuaWJt
LmNvbSIKK19fZW1haWxfXyAgICAgID0gInN0ZWZhbmhhQHJlZGhhdC5jb20iCiAKIAogZnJvbSB0
cmFjZXRvb2wgaW1wb3J0IEFyZ3VtZW50cywgb3V0CmRpZmYgLS1naXQgYS9zY3JpcHRzL3RyYWNl
dG9vbC9mb3JtYXQvdGNnX2hlbHBlcl9oLnB5IGIvc2NyaXB0cy90cmFjZXRvb2wvZm9ybWF0L3Rj
Z19oZWxwZXJfaC5weQppbmRleCA5OGViZTUyZjE4Li4wODU1NGZiYzg1IDEwMDY0NAotLS0gYS9z
Y3JpcHRzL3RyYWNldG9vbC9mb3JtYXQvdGNnX2hlbHBlcl9oLnB5CisrKyBiL3NjcmlwdHMvdHJh
Y2V0b29sL2Zvcm1hdC90Y2dfaGVscGVyX2gucHkKQEAgLTksNyArOSw3IEBAIF9fY29weXJpZ2h0
X18gID0gIkNvcHlyaWdodCAyMDEyLTIwMTYsIExsdcOtcyBWaWxhbm92YSA8dmlsYW5vdmFAYWMu
dXBjLmVkdT4iCiBfX2xpY2Vuc2VfXyAgICA9ICJHUEwgdmVyc2lvbiAyIG9yIChhdCB5b3VyIG9w
dGlvbikgYW55IGxhdGVyIHZlcnNpb24iCiAKIF9fbWFpbnRhaW5lcl9fID0gIlN0ZWZhbiBIYWpu
b2N6aSIKLV9fZW1haWxfXyAgICAgID0gInN0ZWZhbmhhQGxpbnV4LnZuZXQuaWJtLmNvbSIKK19f
ZW1haWxfXyAgICAgID0gInN0ZWZhbmhhQHJlZGhhdC5jb20iCiAKIAogZnJvbSB0cmFjZXRvb2wg
aW1wb3J0IG91dApkaWZmIC0tZ2l0IGEvc2NyaXB0cy90cmFjZXRvb2wvZm9ybWF0L3RjZ19oZWxw
ZXJfd3JhcHBlcl9oLnB5IGIvc2NyaXB0cy90cmFjZXRvb2wvZm9ybWF0L3RjZ19oZWxwZXJfd3Jh
cHBlcl9oLnB5CmluZGV4IDZhZGVhYjc0ZGYuLjBjNWE5Nzk3ZDEgMTAwNjQ0Ci0tLSBhL3Njcmlw
dHMvdHJhY2V0b29sL2Zvcm1hdC90Y2dfaGVscGVyX3dyYXBwZXJfaC5weQorKysgYi9zY3JpcHRz
L3RyYWNldG9vbC9mb3JtYXQvdGNnX2hlbHBlcl93cmFwcGVyX2gucHkKQEAgLTksNyArOSw3IEBA
IF9fY29weXJpZ2h0X18gID0gIkNvcHlyaWdodCAyMDEyLTIwMTYsIExsdcOtcyBWaWxhbm92YSA8
dmlsYW5vdmFAYWMudXBjLmVkdT4iCiBfX2xpY2Vuc2VfXyAgICA9ICJHUEwgdmVyc2lvbiAyIG9y
IChhdCB5b3VyIG9wdGlvbikgYW55IGxhdGVyIHZlcnNpb24iCiAKIF9fbWFpbnRhaW5lcl9fID0g
IlN0ZWZhbiBIYWpub2N6aSIKLV9fZW1haWxfXyAgICAgID0gInN0ZWZhbmhhQGxpbnV4LnZuZXQu
aWJtLmNvbSIKK19fZW1haWxfXyAgICAgID0gInN0ZWZhbmhhQHJlZGhhdC5jb20iCiAKIAogZnJv
bSB0cmFjZXRvb2wgaW1wb3J0IG91dApkaWZmIC0tZ2l0IGEvc2NyaXB0cy90cmFjZXRvb2wvdHJh
bnNmb3JtLnB5IGIvc2NyaXB0cy90cmFjZXRvb2wvdHJhbnNmb3JtLnB5CmluZGV4IDhmZDRkY2Yy
MGQuLmVhOGIyNzc5OWQgMTAwNjQ0Ci0tLSBhL3NjcmlwdHMvdHJhY2V0b29sL3RyYW5zZm9ybS5w
eQorKysgYi9zY3JpcHRzL3RyYWNldG9vbC90cmFuc2Zvcm0ucHkKQEAgLTksNyArOSw3IEBAIF9f
Y29weXJpZ2h0X18gID0gIkNvcHlyaWdodCAyMDEyLTIwMTYsIExsdcOtcyBWaWxhbm92YSA8dmls
YW5vdmFAYWMudXBjLmVkdT4iCiBfX2xpY2Vuc2VfXyAgICA9ICJHUEwgdmVyc2lvbiAyIG9yIChh
dCB5b3VyIG9wdGlvbikgYW55IGxhdGVyIHZlcnNpb24iCiAKIF9fbWFpbnRhaW5lcl9fID0gIlN0
ZWZhbiBIYWpub2N6aSIKLV9fZW1haWxfXyAgICAgID0gInN0ZWZhbmhhQGxpbnV4LnZuZXQuaWJt
LmNvbSIKK19fZW1haWxfXyAgICAgID0gInN0ZWZhbmhhQHJlZGhhdC5jb20iCiAKIAogZGVmIF90
cmFuc2Zvcm1fdHlwZSh0eXBlXywgdHJhbnMpOgpkaWZmIC0tZ2l0IGEvc2NyaXB0cy90cmFjZXRv
b2wvdmNwdS5weSBiL3NjcmlwdHMvdHJhY2V0b29sL3ZjcHUucHkKaW5kZXggMGIxMDRlNGYxNS4u
YjU0ZTRmNGU3YSAxMDA2NDQKLS0tIGEvc2NyaXB0cy90cmFjZXRvb2wvdmNwdS5weQorKysgYi9z
Y3JpcHRzL3RyYWNldG9vbC92Y3B1LnB5CkBAIC0xMCw3ICsxMCw3IEBAIF9fY29weXJpZ2h0X18g
ID0gIkNvcHlyaWdodCAyMDE2LCBMbHXDrXMgVmlsYW5vdmEgPHZpbGFub3ZhQGFjLnVwYy5lZHU+
IgogX19saWNlbnNlX18gICAgPSAiR1BMIHZlcnNpb24gMiBvciAoYXQgeW91ciBvcHRpb24pIGFu
eSBsYXRlciB2ZXJzaW9uIgogCiBfX21haW50YWluZXJfXyA9ICJTdGVmYW4gSGFqbm9jemkiCi1f
X2VtYWlsX18gICAgICA9ICJzdGVmYW5oYUBsaW51eC52bmV0LmlibS5jb20iCitfX2VtYWlsX18g
ICAgICA9ICJzdGVmYW5oYUByZWRoYXQuY29tIgogCiAKIGZyb20gdHJhY2V0b29sIGltcG9ydCBB
cmd1bWVudHMsIHRyeV9pbXBvcnQKLS0gCjIuMjYuMgoK


