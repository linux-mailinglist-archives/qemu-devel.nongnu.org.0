Return-Path: <qemu-devel-bounces+lists+qemu-devel=lfdr.de@nongnu.org>
X-Original-To: lists+qemu-devel@lfdr.de
Delivered-To: lists+qemu-devel@lfdr.de
Received: from lists.gnu.org (lists.gnu.org [209.51.188.17])
	by mail.lfdr.de (Postfix) with ESMTPS id 41B5C3330FD
	for <lists+qemu-devel@lfdr.de>; Tue,  9 Mar 2021 22:37:16 +0100 (CET)
Received: from localhost ([::1]:36734 helo=lists1p.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.90_1)
	(envelope-from <qemu-devel-bounces+lists+qemu-devel=lfdr.de@nongnu.org>)
	id 1lJk2V-00067j-8q
	for lists+qemu-devel@lfdr.de; Tue, 09 Mar 2021 16:37:15 -0500
Received: from eggs.gnu.org ([2001:470:142:3::10]:35256)
 by lists.gnu.org with esmtps (TLS1.2:ECDHE_RSA_AES_256_GCM_SHA384:256)
 (Exim 4.90_1) (envelope-from <maz@kernel.org>)
 id 1lJk0v-0004VD-G0; Tue, 09 Mar 2021 16:35:37 -0500
Received: from mail.kernel.org ([198.145.29.99]:45012)
 by eggs.gnu.org with esmtps (TLS1.2:ECDHE_RSA_AES_256_GCM_SHA384:256)
 (Exim 4.90_1) (envelope-from <maz@kernel.org>)
 id 1lJk0h-0005cm-C7; Tue, 09 Mar 2021 16:35:34 -0500
Received: from disco-boy.misterjones.org (disco-boy.misterjones.org
 [51.254.78.96])
 (using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
 (No client certificate requested)
 by mail.kernel.org (Postfix) with ESMTPSA id 915AC64F78;
 Tue,  9 Mar 2021 21:35:17 +0000 (UTC)
Received: from 78.163-31-62.static.virginmediabusiness.co.uk ([62.31.163.78]
 helo=wait-a-minute.misterjones.org)
 by disco-boy.misterjones.org with esmtpsa (TLS1.3) tls
 TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384 (Exim 4.94)
 (envelope-from <maz@kernel.org>)
 id 1lJk0Z-000dZe-IM; Tue, 09 Mar 2021 21:35:15 +0000
Date: Tue, 09 Mar 2021 21:35:14 +0000
Message-ID: <87y2ewqact.wl-maz@kernel.org>
From: Marc Zyngier <maz@kernel.org>
To: Andrew Jones <drjones@redhat.com>
Subject: Re: [PATCH] hw/arm/virt: KVM: The IPA lower bound is 32
In-Reply-To: <20210309200606.kjjbxyyzijv2qsd4@kamzik.brq.redhat.com>
References: <20210309185939.188431-1-drjones@redhat.com>
 <87eegoxhd5.wl-maz@kernel.org>
 <20210309200606.kjjbxyyzijv2qsd4@kamzik.brq.redhat.com>
User-Agent: Wanderlust/2.15.9 (Almost Unreal) SEMI-EPG/1.14.7 (Harue)
 FLIM-LB/1.14.9 (=?UTF-8?B?R29qxY0=?=) APEL-LB/10.8 EasyPG/1.0.0 Emacs/27.1
 (x86_64-pc-linux-gnu) MULE/6.0 (HANACHIRUSATO)
MIME-Version: 1.0 (generated by SEMI-EPG 1.14.7 - "Harue")
Content-Type: text/plain; charset=US-ASCII
X-SA-Exim-Connect-IP: 62.31.163.78
X-SA-Exim-Rcpt-To: drjones@redhat.com, qemu-devel@nongnu.org,
 qemu-arm@nongnu.org, peter.maydell@linaro.org, eric.auger@redhat.com
X-SA-Exim-Mail-From: maz@kernel.org
X-SA-Exim-Scanned: No (on disco-boy.misterjones.org);
 SAEximRunCond expanded to false
Received-SPF: pass client-ip=198.145.29.99; envelope-from=maz@kernel.org;
 helo=mail.kernel.org
X-Spam_score_int: -68
X-Spam_score: -6.9
X-Spam_bar: ------
X-Spam_report: (-6.9 / 5.0 requ) BAYES_00=-1.9, RCVD_IN_DNSWL_HI=-5,
 SPF_HELO_NONE=0.001, SPF_PASS=-0.001 autolearn=ham autolearn_force=no
X-Spam_action: no action
X-BeenThere: qemu-devel@nongnu.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: <qemu-devel.nongnu.org>
List-Unsubscribe: <https://lists.nongnu.org/mailman/options/qemu-devel>,
 <mailto:qemu-devel-request@nongnu.org?subject=unsubscribe>
List-Archive: <https://lists.nongnu.org/archive/html/qemu-devel>
List-Post: <mailto:qemu-devel@nongnu.org>
List-Help: <mailto:qemu-devel-request@nongnu.org?subject=help>
List-Subscribe: <https://lists.nongnu.org/mailman/listinfo/qemu-devel>,
 <mailto:qemu-devel-request@nongnu.org?subject=subscribe>
Cc: peter.maydell@linaro.org, qemu-arm@nongnu.org, qemu-devel@nongnu.org,
 eric.auger@redhat.com
Errors-To: qemu-devel-bounces+lists+qemu-devel=lfdr.de@nongnu.org
Sender: "Qemu-devel" <qemu-devel-bounces+lists+qemu-devel=lfdr.de@nongnu.org>

On Tue, 09 Mar 2021 20:06:06 +0000,
Andrew Jones <drjones@redhat.com> wrote:
> 
> On Tue, Mar 09, 2021 at 07:21:58PM +0000, Marc Zyngier wrote:
> > Hi Andrew,
> > 
> > On Tue, 09 Mar 2021 18:59:39 +0000,
> > Andrew Jones <drjones@redhat.com> wrote:
> > > 
> > > The virt machine already checks KVM_CAP_ARM_VM_IPA_SIZE to get the
> > > upper bound of the IPA size. If that bound is lower than the highest
> > > possible GPA for the machine, then QEMU will error out. However, the
> > > IPA is set to 40 when the highest GPA is less than or equal to 40,
> > > even when KVM may only support an IPA limit as low as 32. This means
> > > KVM may fail the VM creation unnecessarily. Additionally, 40 is
> > > selected with the value 0, which means use the default, and that gets
> > > around a check in some versions of KVM, causing a difficult to debug
> > > fail. Always use the IPA size that corresponds to the highest possible
> > > GPA, unless it's lower than 32, in which case use 32.
> > > 
> > > Signed-off-by: Andrew Jones <drjones@redhat.com>
> > > ---
> > >  hw/arm/virt.c | 9 ++++-----
> > >  1 file changed, 4 insertions(+), 5 deletions(-)
> > > 
> > > diff --git a/hw/arm/virt.c b/hw/arm/virt.c
> > > index 371147f3ae9c..7bf563715b4e 100644
> > > --- a/hw/arm/virt.c
> > > +++ b/hw/arm/virt.c
> > > @@ -2547,14 +2547,13 @@ static int virt_kvm_type(MachineState *ms, const char *type_str)
> > >                       "require an IPA range (%d bits) larger than "
> > >                       "the one supported by the host (%d bits)",
> > >                       requested_pa_size, max_vm_pa_size);
> > > -       exit(1);
> > > +        exit(1);
> > >      }
> > > +
> > >      /*
> > > -     * By default we return 0 which corresponds to an implicit legacy
> > > -     * 40b IPA setting. Otherwise we return the actual requested PA
> > > -     * logsize
> > > +     * KVM requires the IPA size to be at least 32 bits.
> > >       */
> > > -    return requested_pa_size > 40 ? requested_pa_size : 0;
> > > +    return requested_pa_size < 32 ? 32 : requested_pa_size;
> > 
> > Doesn't this break on older kernels (pre 233a7cb23531, which is
> > anything up 4.19), where the 'type' parameter passed at VM creation
> > time was expected to be 0 and nothing else?
> 
> Doh, of course!
> 
> > 
> > I had a quick go at qemu a couple of weeks back and came up with the
> > following hack, but never actually tested it (there is no way qemu can
> > fit in the initramfs I am feeding to this damn machine...).
> > 
> > Thanks,
> > 
> > 	M.
> > 
> > diff --git a/hw/arm/virt.c b/hw/arm/virt.c
> > index 371147f3ae..3301bb8dba 100644
> > --- a/hw/arm/virt.c
> > +++ b/hw/arm/virt.c
> > @@ -2534,8 +2534,11 @@ static HotplugHandler *virt_machine_get_hotplug_handler(MachineState *machine,
> >  static int virt_kvm_type(MachineState *ms, const char *type_str)
> >  {
> >      VirtMachineState *vms = VIRT_MACHINE(ms);
> > -    int max_vm_pa_size = kvm_arm_get_max_vm_ipa_size(ms);
> > +    int max_vm_pa_size;
> >      int requested_pa_size;
> > +    bool fixed_ipa;
> > +
> > +    max_vm_pa_size = kvm_arm_get_max_vm_ipa_size(ms, &fixed_ipa);
> >  
> >      /* we freeze the memory map to compute the highest gpa */
> >      virt_set_memmap(vms);
> > @@ -2550,11 +2553,12 @@ static int virt_kvm_type(MachineState *ms, const char *type_str)
> >         exit(1);
> >      }
> >      /*
> > -     * By default we return 0 which corresponds to an implicit legacy
> > -     * 40b IPA setting. Otherwise we return the actual requested PA
> > -     * logsize
> > +     * We return the requested PA log size, unless KVM only supports
> > +     * the implicit legacy 40b IPA setting, in which case we return 0.
> >       */
> > -    return requested_pa_size > 40 ? requested_pa_size : 0;
> > +    if (fixed_ipa)
> > +        return 0;
> > +    return requested_pa_size;
> 
> Looks good to me. I think we should still ensure requested_pa_size is at
> least 32 though.

Yes, absolutely.

> I can add that and test this tomorrow. Should I post it with your
> authorship?

No, please keep it with yours (add a Suggested-by: tag if you really
want to). If you can give it a good shake, that'd be great. I'll try
and repost the kernel fixes tomorrow.

Thanks,

	M.

-- 
Without deviation from the norm, progress is not possible.

