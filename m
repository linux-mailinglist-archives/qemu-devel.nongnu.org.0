Return-Path: <qemu-devel-bounces+lists+qemu-devel=lfdr.de@nongnu.org>
X-Original-To: lists+qemu-devel@lfdr.de
Delivered-To: lists+qemu-devel@lfdr.de
Received: from lists.gnu.org (lists.gnu.org [209.51.188.17])
	by mail.lfdr.de (Postfix) with ESMTPS id C58F9326121
	for <lists+qemu-devel@lfdr.de>; Fri, 26 Feb 2021 11:17:56 +0100 (CET)
Received: from localhost ([::1]:48866 helo=lists1p.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.90_1)
	(envelope-from <qemu-devel-bounces+lists+qemu-devel=lfdr.de@nongnu.org>)
	id 1lFaC3-0007gQ-RU
	for lists+qemu-devel@lfdr.de; Fri, 26 Feb 2021 05:17:55 -0500
Received: from eggs.gnu.org ([2001:470:142:3::10]:44432)
 by lists.gnu.org with esmtps (TLS1.2:ECDHE_RSA_AES_256_GCM_SHA384:256)
 (Exim 4.90_1) (envelope-from <no-reply@patchew.org>)
 id 1lFa4h-0003cz-W8
 for qemu-devel@nongnu.org; Fri, 26 Feb 2021 05:10:20 -0500
Resent-Date: Fri, 26 Feb 2021 05:10:19 -0500
Resent-Message-Id: <E1lFa4h-0003cz-W8@lists.gnu.org>
Received: from sender4-of-o53.zoho.com ([136.143.188.53]:21398)
 by eggs.gnu.org with esmtps (TLS1.2:ECDHE_RSA_AES_256_GCM_SHA384:256)
 (Exim 4.90_1) (envelope-from <no-reply@patchew.org>)
 id 1lFa4e-0006GP-2P
 for qemu-devel@nongnu.org; Fri, 26 Feb 2021 05:10:19 -0500
ARC-Seal: i=1; a=rsa-sha256; t=1614334195; cv=none; 
 d=zohomail.com; s=zohoarc; 
 b=KFZw/BAegmvFBLzswhzjJudWg6XeVOFQKIU/Cgmp7K9p14xw1wGJB2wnwYk4vGjiLUdbH8KvtbQQ1Nef9wkrnJoR48Yi5HH7PRP/OqWfdNSxFd7JNIHy1LQHBBCPHEO7Puf1DIw9WNMYI2qdMrhQ692qIcCTleorIoSg4nn88tI=
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=zohomail.com;
 s=zohoarc; t=1614334195;
 h=Content-Type:Content-Transfer-Encoding:Cc:Date:From:In-Reply-To:MIME-Version:Message-ID:Reply-To:Subject:To;
 bh=rVrzvtFTKyVG6jemj9aW8UTxlOKU8Kt0ais3psSR+r0=; 
 b=KP6hq4Rn3Mf5Cm0wpptAdavmVGb7bGWM1xC4KOR4XLlPnXbZfFNh46JBdX8Xofowk1ZSBwIew9+jbBu8yp38gZzMkfPUKqzdesBXOWbAvkeO03PjPHTQaVOa58cL725F1ElCqRkyrlWF7CAp2PqissPrSJkuhvA/QMlwEseZHD4=
ARC-Authentication-Results: i=1; mx.zohomail.com;
 spf=pass  smtp.mailfrom=no-reply@patchew.org;
 dmarc=pass header.from=<no-reply@patchew.org>
 header.from=<no-reply@patchew.org>
Received: from [172.17.0.3] (23.253.156.214 [23.253.156.214]) by
 mx.zohomail.com with SMTPS id 1614334194508565.3811477932661;
 Fri, 26 Feb 2021 02:09:54 -0800 (PST)
In-Reply-To: <20210226094939.11087-1-cfontana@suse.de>
Subject: Re: [PATCH v24 00/18] i386 cleanup PART 2
Message-ID: <161433419255.1906.17371566787939224373@c667a6b167f6>
MIME-Version: 1.0
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Resent-From: 
From: no-reply@patchew.org
To: cfontana@suse.de
Date: Fri, 26 Feb 2021 02:09:54 -0800 (PST)
X-ZohoMailClient: External
Received-SPF: pass client-ip=136.143.188.53; envelope-from=no-reply@patchew.org;
 helo=sender4-of-o53.zoho.com
X-Spam_score_int: -18
X-Spam_score: -1.9
X-Spam_bar: -
X-Spam_report: (-1.9 / 5.0 requ) BAYES_00=-1.9, RCVD_IN_DNSWL_NONE=-0.0001,
 RCVD_IN_MSPIKE_H4=0.001, RCVD_IN_MSPIKE_WL=0.001, SPF_HELO_NONE=0.001,
 SPF_PASS=-0.001 autolearn=ham autolearn_force=no
X-Spam_action: no action
X-BeenThere: qemu-devel@nongnu.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: <qemu-devel.nongnu.org>
List-Unsubscribe: <https://lists.nongnu.org/mailman/options/qemu-devel>,
 <mailto:qemu-devel-request@nongnu.org?subject=unsubscribe>
List-Archive: <https://lists.nongnu.org/archive/html/qemu-devel>
List-Post: <mailto:qemu-devel@nongnu.org>
List-Help: <mailto:qemu-devel-request@nongnu.org?subject=help>
List-Subscribe: <https://lists.nongnu.org/mailman/listinfo/qemu-devel>,
 <mailto:qemu-devel-request@nongnu.org?subject=subscribe>
Reply-To: qemu-devel@nongnu.org
Cc: lvivier@redhat.com, peter.maydell@linaro.org, thuth@redhat.com,
 ehabkost@redhat.com, philmd@redhat.com, richard.henderson@linaro.org,
 qemu-devel@nongnu.org, r.bolshakov@yadro.com, cfontana@suse.de,
 pbonzini@redhat.com, alex.bennee@linaro.org
Errors-To: qemu-devel-bounces+lists+qemu-devel=lfdr.de@nongnu.org
Sender: "Qemu-devel" <qemu-devel-bounces+lists+qemu-devel=lfdr.de@nongnu.org>

UGF0Y2hldyBVUkw6IGh0dHBzOi8vcGF0Y2hldy5vcmcvUUVNVS8yMDIxMDIyNjA5NDkzOS4xMTA4
Ny0xLWNmb250YW5hQHN1c2UuZGUvCgoKCkhpLAoKVGhpcyBzZXJpZXMgc2VlbXMgdG8gaGF2ZSBz
b21lIGNvZGluZyBzdHlsZSBwcm9ibGVtcy4gU2VlIG91dHB1dCBiZWxvdyBmb3IKbW9yZSBpbmZv
cm1hdGlvbjoKClR5cGU6IHNlcmllcwpNZXNzYWdlLWlkOiAyMDIxMDIyNjA5NDkzOS4xMTA4Ny0x
LWNmb250YW5hQHN1c2UuZGUKU3ViamVjdDogW1BBVENIIHYyNCAwMC8xOF0gaTM4NiBjbGVhbnVw
IFBBUlQgMgoKPT09IFRFU1QgU0NSSVBUIEJFR0lOID09PQojIS9iaW4vYmFzaApnaXQgcmV2LXBh
cnNlIGJhc2UgPiAvZGV2L251bGwgfHwgZXhpdCAwCmdpdCBjb25maWcgLS1sb2NhbCBkaWZmLnJl
bmFtZWxpbWl0IDAKZ2l0IGNvbmZpZyAtLWxvY2FsIGRpZmYucmVuYW1lcyBUcnVlCmdpdCBjb25m
aWcgLS1sb2NhbCBkaWZmLmFsZ29yaXRobSBoaXN0b2dyYW0KLi9zY3JpcHRzL2NoZWNrcGF0Y2gu
cGwgLS1tYWlsYmFjayBiYXNlLi4KPT09IFRFU1QgU0NSSVBUIEVORCA9PT0KClVwZGF0aW5nIDNj
OGNmNWE5YzIxZmY4NzgyMTY0ZDFkZWY3ZjQ0YmQ4ODg3MTMzODQKRnJvbSBodHRwczovL2dpdGh1
Yi5jb20vcGF0Y2hldy1wcm9qZWN0L3FlbXUKICogW25ldyB0YWddICAgICAgICAgcGF0Y2hldy8y
MDIxMDIyNjA5NDkzOS4xMTA4Ny0xLWNmb250YW5hQHN1c2UuZGUgLT4gcGF0Y2hldy8yMDIxMDIy
NjA5NDkzOS4xMTA4Ny0xLWNmb250YW5hQHN1c2UuZGUKU3dpdGNoZWQgdG8gYSBuZXcgYnJhbmNo
ICd0ZXN0Jwo3MDJjMmVhIGkzODY6IG1ha2UgY3B1X2xvYWRfZWZlciBzeXNlbXUtb25seQpiNTQ1
MmE2IHRhcmdldC9pMzg2OiBnZGJzdHViOiBvbmx5IHdyaXRlIENSMC9DUjIvQ1IzL0VGRVIgZm9y
IHN5c2VtdQowZDgwZDFmIHRhcmdldC9pMzg2OiBnZGJzdHViOiBpbnRyb2R1Y2UgYXV4IGZ1bmN0
aW9ucyB0byByZWFkL3dyaXRlIENTNjQgcmVncwozYzdhOGRmIGkzODY6IHNwbGl0IG9mZiBzeXNl
bXUgcGFydCBvZiBjcHUuYwo0N2JhOTFmIGkzODY6IHNwbGl0IHNlZ19oZWxwZXIgaW50byB1c2Vy
LW9ubHkgYW5kIHN5c2VtdSBwYXJ0cwpjOWM4Mzg4IGkzODY6IHNwbGl0IHN2bV9oZWxwZXIgaW50
byBzeXNlbXUgYW5kIHN0dWItb25seSB1c2VyCjc1YzhkMjAgaTM4Njogc2VwYXJhdGUgZnB1X2hl
bHBlciBpbnRvIHVzZXIgYW5kIHN5c2VtdSBwYXJ0cwo4YTA1M2UwIGkzODY6IHNwbGl0IG1pc2Mg
aGVscGVyIHVzZXIgc3R1YnMgYW5kIHN5c2VtdSBwYXJ0CjIxYjM5YzYgaTM4NjogbW92ZSBUQ0cg
YnRwX2hlbHBlciBpbnRvIHN5c2VtdS8KYzNlYjA5YiBpMzg2OiBzcGxpdCB0Y2cgZXhjcF9oZWxw
ZXIgaW50byBzeXNlbXUgYW5kIHVzZXIgcGFydHMKMjBjZDE2OCBpMzg2OiBzcGxpdCBzbW0gaGVs
cGVyIChzeXNlbXUpCjQ2ZjYyZTYgaTM4Njogc3BsaXQgb2ZmIHN5c2VtdS1vbmx5IGZ1bmN0aW9u
YWxpdHkgaW4gdGNnLWNwdQoxN2Y5MGI3IG1lc29uOiBhZGQgdGFyZ2V0X3VzZXJfYXJjaAowMWIz
ZDY3IGFjY2VsLWNwdTogbWFrZSBjcHVfcmVhbGl6ZWZuIHJldHVybiBhIGJvb2wKOTdjMDc2ZCB0
YXJnZXQvaTM4NjogZml4IGhvc3RfY3B1X2FkanVzdF9waHlzX2JpdHMgZXJyb3IgaGFuZGxpbmcK
ZGZmNjljZSBhY2NlbDogaW50cm9kdWNlIG5ldyBhY2Nlc3NvciBmdW5jdGlvbnMKZjdhYTQ2ZiBj
cHU6IGNhbGwgQWNjZWxDUFVDbGFzczo6Y3B1X3JlYWxpemVmbiBpbiBjcHVfZXhlY19yZWFsaXpl
Zm4KZTc4MmE1MyBpMzg2OiBzcGxpdCBjcHUgYWNjZWxlcmF0b3JzIGZyb20gY3B1LmMsIHVzaW5n
IEFjY2VsQ1BVQ2xhc3MKCj09PSBPVVRQVVQgQkVHSU4gPT09CjEvMTggQ2hlY2tpbmcgY29tbWl0
IGU3ODJhNTMxZDE5OCAoaTM4Njogc3BsaXQgY3B1IGFjY2VsZXJhdG9ycyBmcm9tIGNwdS5jLCB1
c2luZyBBY2NlbENQVUNsYXNzKQpXQVJOSU5HOiBsaW5lIG92ZXIgODAgY2hhcmFjdGVycwojMTMz
NzogRklMRTogdGFyZ2V0L2kzODYvdGNnL3RjZy1jcHUuYzoxMjU6CisgICAgbWVtb3J5X3JlZ2lv
bl9hZGRfc3VicmVnaW9uX292ZXJsYXAoY3B1LT5jcHVfYXNfcm9vdCwgMCwgY3B1LT5jcHVfYXNf
bWVtLCAwKTsKCnRvdGFsOiAwIGVycm9ycywgMSB3YXJuaW5ncywgMTI1NiBsaW5lcyBjaGVja2Vk
CgpQYXRjaCAxLzE4IGhhcyBzdHlsZSBwcm9ibGVtcywgcGxlYXNlIHJldmlldy4gIElmIGFueSBv
ZiB0aGVzZSBlcnJvcnMKYXJlIGZhbHNlIHBvc2l0aXZlcyByZXBvcnQgdGhlbSB0byB0aGUgbWFp
bnRhaW5lciwgc2VlCkNIRUNLUEFUQ0ggaW4gTUFJTlRBSU5FUlMuCjIvMTggQ2hlY2tpbmcgY29t
bWl0IGY3YWE0NmY3N2NhMyAoY3B1OiBjYWxsIEFjY2VsQ1BVQ2xhc3M6OmNwdV9yZWFsaXplZm4g
aW4gY3B1X2V4ZWNfcmVhbGl6ZWZuKQozLzE4IENoZWNraW5nIGNvbW1pdCBkZmY2OWNlY2E2ZWQg
KGFjY2VsOiBpbnRyb2R1Y2UgbmV3IGFjY2Vzc29yIGZ1bmN0aW9ucykKNC8xOCBDaGVja2luZyBj
b21taXQgOTdjMDc2ZDM5N2JjICh0YXJnZXQvaTM4NjogZml4IGhvc3RfY3B1X2FkanVzdF9waHlz
X2JpdHMgZXJyb3IgaGFuZGxpbmcpCjUvMTggQ2hlY2tpbmcgY29tbWl0IDAxYjNkNjc1MWE1MSAo
YWNjZWwtY3B1OiBtYWtlIGNwdV9yZWFsaXplZm4gcmV0dXJuIGEgYm9vbCkKNi8xOCBDaGVja2lu
ZyBjb21taXQgMTdmOTBiNzY0YWQwIChtZXNvbjogYWRkIHRhcmdldF91c2VyX2FyY2gpCjcvMTgg
Q2hlY2tpbmcgY29tbWl0IDQ2ZjYyZTZlYmM0MCAoaTM4Njogc3BsaXQgb2ZmIHN5c2VtdS1vbmx5
IGZ1bmN0aW9uYWxpdHkgaW4gdGNnLWNwdSkKVXNlIG9mIHVuaW5pdGlhbGl6ZWQgdmFsdWUgJGFj
cGlfdGVzdGV4cGVjdGVkIGluIHN0cmluZyBlcSBhdCAuL3NjcmlwdHMvY2hlY2twYXRjaC5wbCBs
aW5lIDE1MjkuCldBUk5JTkc6IGFkZGVkLCBtb3ZlZCBvciBkZWxldGVkIGZpbGUocyksIGRvZXMg
TUFJTlRBSU5FUlMgbmVlZCB1cGRhdGluZz8KIzMxOiAKbmV3IGZpbGUgbW9kZSAxMDA2NDQKCldB
Uk5JTkc6IGxpbmUgb3ZlciA4MCBjaGFyYWN0ZXJzCiMxMTY6IEZJTEU6IHRhcmdldC9pMzg2L3Rj
Zy9zeXNlbXUvdGNnLWNwdS5jOjcyOgorICAgIG1lbW9yeV9yZWdpb25fYWRkX3N1YnJlZ2lvbl9v
dmVybGFwKGNwdS0+Y3B1X2FzX3Jvb3QsIDAsIGNwdS0+Y3B1X2FzX21lbSwgMCk7Cgp0b3RhbDog
MCBlcnJvcnMsIDIgd2FybmluZ3MsIDIxMiBsaW5lcyBjaGVja2VkCgpQYXRjaCA3LzE4IGhhcyBz
dHlsZSBwcm9ibGVtcywgcGxlYXNlIHJldmlldy4gIElmIGFueSBvZiB0aGVzZSBlcnJvcnMKYXJl
IGZhbHNlIHBvc2l0aXZlcyByZXBvcnQgdGhlbSB0byB0aGUgbWFpbnRhaW5lciwgc2VlCkNIRUNL
UEFUQ0ggaW4gTUFJTlRBSU5FUlMuCjgvMTggQ2hlY2tpbmcgY29tbWl0IDIwY2QxNjgzYzhhZCAo
aTM4Njogc3BsaXQgc21tIGhlbHBlciAoc3lzZW11KSkKV0FSTklORzogYWRkZWQsIG1vdmVkIG9y
IGRlbGV0ZWQgZmlsZShzKSwgZG9lcyBNQUlOVEFJTkVSUyBuZWVkIHVwZGF0aW5nPwojMjQ6IAog
dGFyZ2V0L2kzODYvdGNnL3sgPT4gc3lzZW11fS9zbW1faGVscGVyLmMgfCAxOSArKy0tLS0tLS0t
LS0tLS0tLS0tCgp0b3RhbDogMCBlcnJvcnMsIDEgd2FybmluZ3MsIDg0IGxpbmVzIGNoZWNrZWQK
ClBhdGNoIDgvMTggaGFzIHN0eWxlIHByb2JsZW1zLCBwbGVhc2UgcmV2aWV3LiAgSWYgYW55IG9m
IHRoZXNlIGVycm9ycwphcmUgZmFsc2UgcG9zaXRpdmVzIHJlcG9ydCB0aGVtIHRvIHRoZSBtYWlu
dGFpbmVyLCBzZWUKQ0hFQ0tQQVRDSCBpbiBNQUlOVEFJTkVSUy4KOS8xOCBDaGVja2luZyBjb21t
aXQgYzNlYjA5YmMwZDM0IChpMzg2OiBzcGxpdCB0Y2cgZXhjcF9oZWxwZXIgaW50byBzeXNlbXUg
YW5kIHVzZXIgcGFydHMpClVzZSBvZiB1bmluaXRpYWxpemVkIHZhbHVlICRhY3BpX3Rlc3RleHBl
Y3RlZCBpbiBzdHJpbmcgZXEgYXQgLi9zY3JpcHRzL2NoZWNrcGF0Y2gucGwgbGluZSAxNTI5LgpX
QVJOSU5HOiBhZGRlZCwgbW92ZWQgb3IgZGVsZXRlZCBmaWxlKHMpLCBkb2VzIE1BSU5UQUlORVJT
IG5lZWQgdXBkYXRpbmc/CiM1OTk6IApuZXcgZmlsZSBtb2RlIDEwMDY0NAoKV0FSTklORzogQmxv
Y2sgY29tbWVudHMgdXNlIGEgbGVhZGluZyAvKiBvbiBhIHNlcGFyYXRlIGxpbmUKIzc1NjogRklM
RTogdGFyZ2V0L2kzODYvdGNnL3N5c2VtdS9leGNwX2hlbHBlci5jOjE1MzoKKyAgICAgICAgICAg
IC8qIEJpdHMgMjAtMTMgcHJvdmlkZSBiaXRzIDM5LTMyIG9mIHRoZSBhZGRyZXNzLCBiaXQgMjEg
aXMgcmVzZXJ2ZWQuCgpXQVJOSU5HOiBCbG9jayBjb21tZW50cyB1c2UgYSBsZWFkaW5nIC8qIG9u
IGEgc2VwYXJhdGUgbGluZQojODMwOiBGSUxFOiB0YXJnZXQvaTM4Ni90Y2cvc3lzZW11L2V4Y3Bf
aGVscGVyLmM6MjI3OgorLyogcmV0dXJuIHZhbHVlOgoKV0FSTklORzogbGluZSBvdmVyIDgwIGNo
YXJhY3RlcnMKIzkzMTogRklMRTogdGFyZ2V0L2kzODYvdGNnL3N5c2VtdS9leGNwX2hlbHBlci5j
OjMyODoKKyAgICAgICAgICAgIHBkcGVfYWRkciA9ICgocG1sNGUgJiBQR19BRERSRVNTX01BU0sp
ICsgKCgoYWRkciA+PiAzMCkgJiAweDFmZikgPDwgMykpICYKCldBUk5JTkc6IEJsb2NrIGNvbW1l
bnRzIHVzZSBhIGxlYWRpbmcgLyogb24gYSBzZXBhcmF0ZSBsaW5lCiMxMDI1OiBGSUxFOiB0YXJn
ZXQvaTM4Ni90Y2cvc3lzZW11L2V4Y3BfaGVscGVyLmM6NDIyOgorICAgICAgICAgICAgLyogQml0
cyAyMC0xMyBwcm92aWRlIGJpdHMgMzktMzIgb2YgdGhlIGFkZHJlc3MsIGJpdCAyMSBpcyByZXNl
cnZlZC4KCldBUk5JTkc6IEJsb2NrIGNvbW1lbnRzIHVzZSBhIGxlYWRpbmcgLyogb24gYSBzZXBh
cmF0ZSBsaW5lCiMxMTIwOiBGSUxFOiB0YXJnZXQvaTM4Ni90Y2cvc3lzZW11L2V4Y3BfaGVscGVy
LmM6NTE3OgorICAgICAgICAvKiBvbmx5IHNldCB3cml0ZSBhY2Nlc3MgaWYgYWxyZWFkeSBkaXJ0
eS4uLiBvdGhlcndpc2Ugd2FpdAoKV0FSTklORzogQmxvY2sgY29tbWVudHMgdXNlICogb24gc3Vi
c2VxdWVudCBsaW5lcwojMTEyMTogRklMRTogdGFyZ2V0L2kzODYvdGNnL3N5c2VtdS9leGNwX2hl
bHBlci5jOjUxODoKKyAgICAgICAgLyogb25seSBzZXQgd3JpdGUgYWNjZXNzIGlmIGFscmVhZHkg
ZGlydHkuLi4gb3RoZXJ3aXNlIHdhaXQKKyAgICAgICAgICAgZm9yIGRpcnR5IGFjY2VzcyAqLwoK
V0FSTklORzogQmxvY2sgY29tbWVudHMgdXNlIGEgdHJhaWxpbmcgKi8gb24gYSBzZXBhcmF0ZSBs
aW5lCiMxMTIxOiBGSUxFOiB0YXJnZXQvaTM4Ni90Y2cvc3lzZW11L2V4Y3BfaGVscGVyLmM6NTE4
OgorICAgICAgICAgICBmb3IgZGlydHkgYWNjZXNzICovCgpXQVJOSU5HOiBCbG9jayBjb21tZW50
cyB1c2UgYSBsZWFkaW5nIC8qIG9uIGEgc2VwYXJhdGUgbGluZQojMTEzNDogRklMRTogdGFyZ2V0
L2kzODYvdGNnL3N5c2VtdS9leGNwX2hlbHBlci5jOjUzMToKKyAgICAvKiBFdmVuIGlmIDRNQiBw
YWdlcywgd2UgbWFwIG9ubHkgb25lIDRLQiBwYWdlIGluIHRoZSBjYWNoZSB0bwoKV0FSTklORzog
QmxvY2sgY29tbWVudHMgdXNlICogb24gc3Vic2VxdWVudCBsaW5lcwojMTEzNTogRklMRTogdGFy
Z2V0L2kzODYvdGNnL3N5c2VtdS9leGNwX2hlbHBlci5jOjUzMjoKKyAgICAvKiBFdmVuIGlmIDRN
QiBwYWdlcywgd2UgbWFwIG9ubHkgb25lIDRLQiBwYWdlIGluIHRoZSBjYWNoZSB0bworICAgICAg
IGF2b2lkIGZpbGxpbmcgaXQgdG9vIGZhc3QgKi8KCldBUk5JTkc6IEJsb2NrIGNvbW1lbnRzIHVz
ZSBhIHRyYWlsaW5nICovIG9uIGEgc2VwYXJhdGUgbGluZQojMTEzNTogRklMRTogdGFyZ2V0L2kz
ODYvdGNnL3N5c2VtdS9leGNwX2hlbHBlci5jOjUzMjoKKyAgICAgICBhdm9pZCBmaWxsaW5nIGl0
IHRvbyBmYXN0ICovCgpFUlJPUjogYnJhY2VzIHt9IGFyZSBuZWNlc3NhcnkgZm9yIGFsbCBhcm1z
IG9mIHRoaXMgc3RhdGVtZW50CiMxMTQ5OiBGSUxFOiB0YXJnZXQvaTM4Ni90Y2cvc3lzZW11L2V4
Y3BfaGVscGVyLmM6NTQ2OgorICAgIGlmIChpc191c2VyKQpbLi4uXQoKdG90YWw6IDEgZXJyb3Jz
LCAxMSB3YXJuaW5ncywgNjMxIGxpbmVzIGNoZWNrZWQKClBhdGNoIDkvMTggaGFzIHN0eWxlIHBy
b2JsZW1zLCBwbGVhc2UgcmV2aWV3LiAgSWYgYW55IG9mIHRoZXNlIGVycm9ycwphcmUgZmFsc2Ug
cG9zaXRpdmVzIHJlcG9ydCB0aGVtIHRvIHRoZSBtYWludGFpbmVyLCBzZWUKQ0hFQ0tQQVRDSCBp
biBNQUlOVEFJTkVSUy4KCjEwLzE4IENoZWNraW5nIGNvbW1pdCAyMWIzOWM2ZWJhZGIgKGkzODY6
IG1vdmUgVENHIGJ0cF9oZWxwZXIgaW50byBzeXNlbXUvKQpVc2Ugb2YgdW5pbml0aWFsaXplZCB2
YWx1ZSAkYWNwaV90ZXN0ZXhwZWN0ZWQgaW4gc3RyaW5nIGVxIGF0IC4vc2NyaXB0cy9jaGVja3Bh
dGNoLnBsIGxpbmUgMTUyOS4KV0FSTklORzogYWRkZWQsIG1vdmVkIG9yIGRlbGV0ZWQgZmlsZShz
KSwgZG9lcyBNQUlOVEFJTkVSUyBuZWVkIHVwZGF0aW5nPwojMzY0OiAKbmV3IGZpbGUgbW9kZSAx
MDA2NDQKCldBUk5JTkc6IEJsb2NrIGNvbW1lbnRzIHVzZSBhIGxlYWRpbmcgLyogb24gYSBzZXBh
cmF0ZSBsaW5lCiM1MDA6IEZJTEU6IHRhcmdldC9pMzg2L3RjZy9zeXNlbXUvYnB0X2hlbHBlci5j
OjEzMjoKKyAgICAvKiBJZiBub3RoaW5nIGlzIGNoYW5naW5nIGV4Y2VwdCB0aGUgZ2xvYmFsL2xv
Y2FsIGVuYWJsZSBiaXRzLAoKV0FSTklORzogQmxvY2sgY29tbWVudHMgdXNlICogb24gc3Vic2Vx
dWVudCBsaW5lcwojNTAxOiBGSUxFOiB0YXJnZXQvaTM4Ni90Y2cvc3lzZW11L2JwdF9oZWxwZXIu
YzoxMzM6CisgICAgLyogSWYgbm90aGluZyBpcyBjaGFuZ2luZyBleGNlcHQgdGhlIGdsb2JhbC9s
b2NhbCBlbmFibGUgYml0cywKKyAgICAgICB0aGVuIHdlIGNhbiBtYWtlIHRoZSBjaGFuZ2UgbW9y
ZSBlZmZpY2llbnQuICAqLwoKV0FSTklORzogQmxvY2sgY29tbWVudHMgdXNlIGEgdHJhaWxpbmcg
Ki8gb24gYSBzZXBhcmF0ZSBsaW5lCiM1MDE6IEZJTEU6IHRhcmdldC9pMzg2L3RjZy9zeXNlbXUv
YnB0X2hlbHBlci5jOjEzMzoKKyAgICAgICB0aGVuIHdlIGNhbiBtYWtlIHRoZSBjaGFuZ2UgbW9y
ZSBlZmZpY2llbnQuICAqLwoKV0FSTklORzogQmxvY2sgY29tbWVudHMgdXNlIGEgbGVhZGluZyAv
KiBvbiBhIHNlcGFyYXRlIGxpbmUKIzUwMzogRklMRTogdGFyZ2V0L2kzODYvdGNnL3N5c2VtdS9i
cHRfaGVscGVyLmM6MTM1OgorICAgICAgICAvKiBGb2xkIHRoZSBnbG9iYWwgYW5kIGxvY2FsIGVu
YWJsZSBiaXRzIHRvZ2V0aGVyIGludG8gdGhlCgpXQVJOSU5HOiBCbG9jayBjb21tZW50cyB1c2Ug
KiBvbiBzdWJzZXF1ZW50IGxpbmVzCiM1MDQ6IEZJTEU6IHRhcmdldC9pMzg2L3RjZy9zeXNlbXUv
YnB0X2hlbHBlci5jOjEzNjoKKyAgICAgICAgLyogRm9sZCB0aGUgZ2xvYmFsIGFuZCBsb2NhbCBl
bmFibGUgYml0cyB0b2dldGhlciBpbnRvIHRoZQorICAgICAgICAgICBnbG9iYWwgZmllbGRzLCB0
aGVuIHhvciB0byBzaG93IHdoaWNoIHJlZ2lzdGVycyBoYXZlCgpXQVJOSU5HOiBCbG9jayBjb21t
ZW50cyB1c2UgYSB0cmFpbGluZyAqLyBvbiBhIHNlcGFyYXRlIGxpbmUKIzUwNTogRklMRTogdGFy
Z2V0L2kzODYvdGNnL3N5c2VtdS9icHRfaGVscGVyLmM6MTM3OgorICAgICAgICAgICBjaGFuZ2Vk
IGNvbGxlY3RpdmUgZW5hYmxlIHN0YXRlLiAgKi8KCnRvdGFsOiAwIGVycm9ycywgNyB3YXJuaW5n
cywgNjI4IGxpbmVzIGNoZWNrZWQKClBhdGNoIDEwLzE4IGhhcyBzdHlsZSBwcm9ibGVtcywgcGxl
YXNlIHJldmlldy4gIElmIGFueSBvZiB0aGVzZSBlcnJvcnMKYXJlIGZhbHNlIHBvc2l0aXZlcyBy
ZXBvcnQgdGhlbSB0byB0aGUgbWFpbnRhaW5lciwgc2VlCkNIRUNLUEFUQ0ggaW4gTUFJTlRBSU5F
UlMuCjExLzE4IENoZWNraW5nIGNvbW1pdCA4YTA1M2UwODU3MTEgKGkzODY6IHNwbGl0IG1pc2Mg
aGVscGVyIHVzZXIgc3R1YnMgYW5kIHN5c2VtdSBwYXJ0KQpVc2Ugb2YgdW5pbml0aWFsaXplZCB2
YWx1ZSAkYWNwaV90ZXN0ZXhwZWN0ZWQgaW4gc3RyaW5nIGVxIGF0IC4vc2NyaXB0cy9jaGVja3Bh
dGNoLnBsIGxpbmUgMTUyOS4KV0FSTklORzogYWRkZWQsIG1vdmVkIG9yIGRlbGV0ZWQgZmlsZShz
KSwgZG9lcyBNQUlOVEFJTkVSUyBuZWVkIHVwZGF0aW5nPwojNTI2OiAKbmV3IGZpbGUgbW9kZSAx
MDA2NDQKCkVSUk9SOiBzd2l0Y2ggYW5kIGNhc2Ugc2hvdWxkIGJlIGF0IHRoZSBzYW1lIGluZGVu
dAojODE5OiBGSUxFOiB0YXJnZXQvaTM4Ni90Y2cvc3lzZW11L21pc2NfaGVscGVyLmM6Mjg5Ogor
ICAgIHN3aXRjaCAoKHVpbnQzMl90KWVudi0+cmVnc1tSX0VDWF0pIHsKWy4uLl0KKyAgICAgY2Fz
ZSBNU1JfSUEzMl9VQ09ERV9SRVY6Cgp0b3RhbDogMSBlcnJvcnMsIDEgd2FybmluZ3MsIDEwMTIg
bGluZXMgY2hlY2tlZAoKUGF0Y2ggMTEvMTggaGFzIHN0eWxlIHByb2JsZW1zLCBwbGVhc2UgcmV2
aWV3LiAgSWYgYW55IG9mIHRoZXNlIGVycm9ycwphcmUgZmFsc2UgcG9zaXRpdmVzIHJlcG9ydCB0
aGVtIHRvIHRoZSBtYWludGFpbmVyLCBzZWUKQ0hFQ0tQQVRDSCBpbiBNQUlOVEFJTkVSUy4KCjEy
LzE4IENoZWNraW5nIGNvbW1pdCA3NWM4ZDIwMjNiZTYgKGkzODY6IHNlcGFyYXRlIGZwdV9oZWxw
ZXIgaW50byB1c2VyIGFuZCBzeXNlbXUgcGFydHMpClVzZSBvZiB1bmluaXRpYWxpemVkIHZhbHVl
ICRhY3BpX3Rlc3RleHBlY3RlZCBpbiBzdHJpbmcgZXEgYXQgLi9zY3JpcHRzL2NoZWNrcGF0Y2gu
cGwgbGluZSAxNTI5LgpXQVJOSU5HOiBhZGRlZCwgbW92ZWQgb3IgZGVsZXRlZCBmaWxlKHMpLCBk
b2VzIE1BSU5UQUlORVJTIG5lZWQgdXBkYXRpbmc/CiMxNDY6IApuZXcgZmlsZSBtb2RlIDEwMDY0
NAoKdG90YWw6IDAgZXJyb3JzLCAxIHdhcm5pbmdzLCAyMzQgbGluZXMgY2hlY2tlZAoKUGF0Y2gg
MTIvMTggaGFzIHN0eWxlIHByb2JsZW1zLCBwbGVhc2UgcmV2aWV3LiAgSWYgYW55IG9mIHRoZXNl
IGVycm9ycwphcmUgZmFsc2UgcG9zaXRpdmVzIHJlcG9ydCB0aGVtIHRvIHRoZSBtYWludGFpbmVy
LCBzZWUKQ0hFQ0tQQVRDSCBpbiBNQUlOVEFJTkVSUy4KMTMvMTggQ2hlY2tpbmcgY29tbWl0IGM5
YzgzODg3NDQ5ZCAoaTM4Njogc3BsaXQgc3ZtX2hlbHBlciBpbnRvIHN5c2VtdSBhbmQgc3R1Yi1v
bmx5IHVzZXIpCldBUk5JTkc6IGFkZGVkLCBtb3ZlZCBvciBkZWxldGVkIGZpbGUocyksIGRvZXMg
TUFJTlRBSU5FUlMgbmVlZCB1cGRhdGluZz8KIzM0OiAKIHRhcmdldC9pMzg2L3RjZy97ID0+IHN5
c2VtdX0vc3ZtX2hlbHBlci5jIHwgNjIgKy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQoKdG90YWw6
IDAgZXJyb3JzLCAxIHdhcm5pbmdzLCAxNjkgbGluZXMgY2hlY2tlZAoKUGF0Y2ggMTMvMTggaGFz
IHN0eWxlIHByb2JsZW1zLCBwbGVhc2UgcmV2aWV3LiAgSWYgYW55IG9mIHRoZXNlIGVycm9ycwph
cmUgZmFsc2UgcG9zaXRpdmVzIHJlcG9ydCB0aGVtIHRvIHRoZSBtYWludGFpbmVyLCBzZWUKQ0hF
Q0tQQVRDSCBpbiBNQUlOVEFJTkVSUy4KMTQvMTggQ2hlY2tpbmcgY29tbWl0IDQ3YmE5MWYwNGQ0
ZCAoaTM4Njogc3BsaXQgc2VnX2hlbHBlciBpbnRvIHVzZXItb25seSBhbmQgc3lzZW11IHBhcnRz
KQpVc2Ugb2YgdW5pbml0aWFsaXplZCB2YWx1ZSAkYWNwaV90ZXN0ZXhwZWN0ZWQgaW4gc3RyaW5n
IGVxIGF0IC4vc2NyaXB0cy9jaGVja3BhdGNoLnBsIGxpbmUgMTUyOS4KV0FSTklORzogYWRkZWQs
IG1vdmVkIG9yIGRlbGV0ZWQgZmlsZShzKSwgZG9lcyBNQUlOVEFJTkVSUyBuZWVkIHVwZGF0aW5n
PwojMzIxOiAKbmV3IGZpbGUgbW9kZSAxMDA2NDQKCkVSUk9SOiBkbyBub3QgdXNlIEM5OSAvLyBj
b21tZW50cwojMzQ4OiBGSUxFOiB0YXJnZXQvaTM4Ni90Y2cvc2VnX2hlbHBlci5oOjIzOgorLy8j
ZGVmaW5lIERFQlVHX1BDQUxMCgpXQVJOSU5HOiBCbG9jayBjb21tZW50cyB1c2UgYSBsZWFkaW5n
IC8qIG9uIGEgc2VwYXJhdGUgbGluZQojNjIxOiBGSUxFOiB0YXJnZXQvaTM4Ni90Y2cvdXNlci9z
ZWdfaGVscGVyLmM6NzM6CisgICAgLyogU2luY2Ugd2UgZW11bGF0ZSBvbmx5IHVzZXIgc3BhY2Us
IHdlIGNhbm5vdCBkbyBtb3JlIHRoYW4KCldBUk5JTkc6IEJsb2NrIGNvbW1lbnRzIHVzZSAqIG9u
IHN1YnNlcXVlbnQgbGluZXMKIzYyMjogRklMRTogdGFyZ2V0L2kzODYvdGNnL3VzZXIvc2VnX2hl
bHBlci5jOjc0OgorICAgIC8qIFNpbmNlIHdlIGVtdWxhdGUgb25seSB1c2VyIHNwYWNlLCB3ZSBj
YW5ub3QgZG8gbW9yZSB0aGFuCisgICAgICAgZXhpdGluZyB0aGUgZW11bGF0aW9uIHdpdGggdGhl
IHN1aXRhYmxlIGV4Y2VwdGlvbiBhbmQgZXJyb3IKCldBUk5JTkc6IEJsb2NrIGNvbW1lbnRzIHVz
ZSBhIHRyYWlsaW5nICovIG9uIGEgc2VwYXJhdGUgbGluZQojNjIzOiBGSUxFOiB0YXJnZXQvaTM4
Ni90Y2cvdXNlci9zZWdfaGVscGVyLmM6NzU6CisgICAgICAgY29kZS4gU28gdXBkYXRlIEVJUCBm
b3IgSU5UIDB4ODAgYW5kIEVYQ1BfU1lTQ0FMTC4gKi8KCldBUk5JTkc6IEJsb2NrIGNvbW1lbnRz
IHVzZSBhIGxlYWRpbmcgLyogb24gYSBzZXBhcmF0ZSBsaW5lCiM2MzQ6IEZJTEU6IHRhcmdldC9p
Mzg2L3RjZy91c2VyL3NlZ19oZWxwZXIuYzo4NjoKKyAgICAvKiBpZiB1c2VyIG1vZGUgb25seSwg
d2Ugc2ltdWxhdGUgYSBmYWtlIGV4Y2VwdGlvbgoKV0FSTklORzogQmxvY2sgY29tbWVudHMgdXNl
ICogb24gc3Vic2VxdWVudCBsaW5lcwojNjM1OiBGSUxFOiB0YXJnZXQvaTM4Ni90Y2cvdXNlci9z
ZWdfaGVscGVyLmM6ODc6CisgICAgLyogaWYgdXNlciBtb2RlIG9ubHksIHdlIHNpbXVsYXRlIGEg
ZmFrZSBleGNlcHRpb24KKyAgICAgICB3aGljaCB3aWxsIGJlIGhhbmRsZWQgb3V0c2lkZSB0aGUg
Y3B1IGV4ZWN1dGlvbgoKV0FSTklORzogQmxvY2sgY29tbWVudHMgdXNlIGEgdHJhaWxpbmcgKi8g
b24gYSBzZXBhcmF0ZSBsaW5lCiM2MzY6IEZJTEU6IHRhcmdldC9pMzg2L3RjZy91c2VyL3NlZ19o
ZWxwZXIuYzo4ODoKKyAgICAgICBsb29wICovCgp0b3RhbDogMSBlcnJvcnMsIDcgd2FybmluZ3Ms
IDU5NSBsaW5lcyBjaGVja2VkCgpQYXRjaCAxNC8xOCBoYXMgc3R5bGUgcHJvYmxlbXMsIHBsZWFz
ZSByZXZpZXcuICBJZiBhbnkgb2YgdGhlc2UgZXJyb3JzCmFyZSBmYWxzZSBwb3NpdGl2ZXMgcmVw
b3J0IHRoZW0gdG8gdGhlIG1haW50YWluZXIsIHNlZQpDSEVDS1BBVENIIGluIE1BSU5UQUlORVJT
LgoKMTUvMTggQ2hlY2tpbmcgY29tbWl0IDNjN2E4ZGYwOGQyNiAoaTM4Njogc3BsaXQgb2ZmIHN5
c2VtdSBwYXJ0IG9mIGNwdS5jKQpVc2Ugb2YgdW5pbml0aWFsaXplZCB2YWx1ZSAkYWNwaV90ZXN0
ZXhwZWN0ZWQgaW4gc3RyaW5nIGVxIGF0IC4vc2NyaXB0cy9jaGVja3BhdGNoLnBsIGxpbmUgMTUy
OS4KV0FSTklORzogYWRkZWQsIG1vdmVkIG9yIGRlbGV0ZWQgZmlsZShzKSwgZG9lcyBNQUlOVEFJ
TkVSUyBuZWVkIHVwZGF0aW5nPwojMTg6IApuZXcgZmlsZSBtb2RlIDEwMDY0NAoKV0FSTklORzog
QmxvY2sgY29tbWVudHMgdXNlIGEgbGVhZGluZyAvKiBvbiBhIHNlcGFyYXRlIGxpbmUKIzUyOiBG
SUxFOiB0YXJnZXQvaTM4Ni9jcHUtaW50ZXJuYWwuaDozMDoKKyAgICAvKiBmZWF0dXJlIGZsYWdz
IG5hbWVzIGFyZSB0YWtlbiBmcm9tICJJbnRlbCBQcm9jZXNzb3IgSWRlbnRpZmljYXRpb24gYW5k
CgpXQVJOSU5HOiBCbG9jayBjb21tZW50cyB1c2UgYSBsZWFkaW5nIC8qIG9uIGEgc2VwYXJhdGUg
bGluZQojMTM1OiBGSUxFOiB0YXJnZXQvaTM4Ni9jcHUtc3lzZW11LmM6Mzc6CisvKiBSZXR1cm4g
YSBRRGljdCBjb250YWluaW5nIGtleXMgZm9yIGFsbCBwcm9wZXJ0aWVzIHRoYXQgY2FuIGJlIGlu
Y2x1ZGVkCgpXQVJOSU5HOiBCbG9jayBjb21tZW50cyB1c2UgYSBsZWFkaW5nIC8qIG9uIGEgc2Vw
YXJhdGUgbGluZQojMTg4OiBGSUxFOiB0YXJnZXQvaTM4Ni9jcHUtc3lzZW11LmM6OTA6CisvKiBD
b252ZXJ0IENQVSBtb2RlbCBkYXRhIGZyb20gWDg2Q1BVIG9iamVjdCB0byBhIHByb3BlcnR5IGRp
Y3Rpb25hcnkKCldBUk5JTkc6IEJsb2NrIGNvbW1lbnRzIHVzZSBhIGxlYWRpbmcgLyogb24gYSBz
ZXBhcmF0ZSBsaW5lCiMyMDI6IEZJTEU6IHRhcmdldC9pMzg2L2NwdS1zeXNlbXUuYzoxMDQ6Cisv
KiBDb252ZXJ0IENQVSBtb2RlbCBkYXRhIGZyb20gWDg2Q1BVIG9iamVjdCB0byBhIHByb3BlcnR5
IGRpY3Rpb25hcnkKCldBUk5JTkc6IEJsb2NrIGNvbW1lbnRzIHVzZSBhIGxlYWRpbmcgLyogb24g
YSBzZXBhcmF0ZSBsaW5lCiMyMTg6IEZJTEU6IHRhcmdldC9pMzg2L2NwdS1zeXNlbXUuYzoxMjA6
CisgICAgICAgIC8qICJob3RwbHVnZ2VkIiBpcyB0aGUgb25seSBwcm9wZXJ0eSB0aGF0IGlzIGNv
bmZpZ3VyYWJsZQoKV0FSTklORzogQmxvY2sgY29tbWVudHMgdXNlIGEgbGVhZGluZyAvKiBvbiBh
IHNlcGFyYXRlIGxpbmUKIzMwODogRklMRTogdGFyZ2V0L2kzODYvY3B1LXN5c2VtdS5jOjIxMDoK
KyAgICAgICAgLyogQXMgd2UgZG9uJ3QgcmV0dXJuIGV2ZXJ5IHNpbmdsZSBwcm9wZXJ0eSwgZnVs
bCBleHBhbnNpb24gbmVlZHMKCnRvdGFsOiAwIGVycm9ycywgNyB3YXJuaW5ncywgOTAxIGxpbmVz
IGNoZWNrZWQKClBhdGNoIDE1LzE4IGhhcyBzdHlsZSBwcm9ibGVtcywgcGxlYXNlIHJldmlldy4g
IElmIGFueSBvZiB0aGVzZSBlcnJvcnMKYXJlIGZhbHNlIHBvc2l0aXZlcyByZXBvcnQgdGhlbSB0
byB0aGUgbWFpbnRhaW5lciwgc2VlCkNIRUNLUEFUQ0ggaW4gTUFJTlRBSU5FUlMuCjE2LzE4IENo
ZWNraW5nIGNvbW1pdCAwZDgwZDFmMDBiYzcgKHRhcmdldC9pMzg2OiBnZGJzdHViOiBpbnRyb2R1
Y2UgYXV4IGZ1bmN0aW9ucyB0byByZWFkL3dyaXRlIENTNjQgcmVncykKV0FSTklORzogbGluZSBv
dmVyIDgwIGNoYXJhY3RlcnMKIzYxOiBGSUxFOiB0YXJnZXQvaTM4Ni9nZGJzdHViLmM6MTYzOgor
ICAgICAgICAgICAgcmV0dXJuIGdkYl9yZWFkX3JlZ19jczY0KGVudi0+aGZsYWdzLCBtZW1fYnVm
LCBlbnYtPnNlZ3NbUl9GU10uYmFzZSk7CgpXQVJOSU5HOiBsaW5lIG92ZXIgODAgY2hhcmFjdGVy
cwojNjc6IEZJTEU6IHRhcmdldC9pMzg2L2dkYnN0dWIuYzoxNjU6CisgICAgICAgICAgICByZXR1
cm4gZ2RiX3JlYWRfcmVnX2NzNjQoZW52LT5oZmxhZ3MsIG1lbV9idWYsIGVudi0+c2Vnc1tSX0dT
XS5iYXNlKTsKCldBUk5JTkc6IGxpbmUgb3ZlciA4MCBjaGFyYWN0ZXJzCiMxNTU6IEZJTEU6IHRh
cmdldC9pMzg2L2dkYnN0dWIuYzozMTg6CisgICAgICAgICAgICByZXR1cm4gZ2RiX3dyaXRlX3Jl
Z19jczY0KGVudi0+aGZsYWdzLCBtZW1fYnVmLCAmZW52LT5zZWdzW1JfRlNdLmJhc2UpOwoKV0FS
TklORzogbGluZSBvdmVyIDgwIGNoYXJhY3RlcnMKIzE2NDogRklMRTogdGFyZ2V0L2kzODYvZ2Ri
c3R1Yi5jOjMyMDoKKyAgICAgICAgICAgIHJldHVybiBnZGJfd3JpdGVfcmVnX2NzNjQoZW52LT5o
ZmxhZ3MsIG1lbV9idWYsICZlbnYtPnNlZ3NbUl9HU10uYmFzZSk7Cgp0b3RhbDogMCBlcnJvcnMs
IDQgd2FybmluZ3MsIDIyMSBsaW5lcyBjaGVja2VkCgpQYXRjaCAxNi8xOCBoYXMgc3R5bGUgcHJv
YmxlbXMsIHBsZWFzZSByZXZpZXcuICBJZiBhbnkgb2YgdGhlc2UgZXJyb3JzCmFyZSBmYWxzZSBw
b3NpdGl2ZXMgcmVwb3J0IHRoZW0gdG8gdGhlIG1haW50YWluZXIsIHNlZQpDSEVDS1BBVENIIGlu
IE1BSU5UQUlORVJTLgoxNy8xOCBDaGVja2luZyBjb21taXQgYjU0NTJhNjM3ZTIxICh0YXJnZXQv
aTM4NjogZ2Ric3R1Yjogb25seSB3cml0ZSBDUjAvQ1IyL0NSMy9FRkVSIGZvciBzeXNlbXUpCjE4
LzE4IENoZWNraW5nIGNvbW1pdCA3MDJjMmVhYzUxNDkgKGkzODY6IG1ha2UgY3B1X2xvYWRfZWZl
ciBzeXNlbXUtb25seSkKPT09IE9VVFBVVCBFTkQgPT09CgpUZXN0IGNvbW1hbmQgZXhpdGVkIHdp
dGggY29kZTogMQoKClRoZSBmdWxsIGxvZyBpcyBhdmFpbGFibGUgYXQKaHR0cDovL3BhdGNoZXcu
b3JnL2xvZ3MvMjAyMTAyMjYwOTQ5MzkuMTEwODctMS1jZm9udGFuYUBzdXNlLmRlL3Rlc3Rpbmcu
Y2hlY2twYXRjaC8/dHlwZT1tZXNzYWdlLgotLS0KRW1haWwgZ2VuZXJhdGVkIGF1dG9tYXRpY2Fs
bHkgYnkgUGF0Y2hldyBbaHR0cHM6Ly9wYXRjaGV3Lm9yZy9dLgpQbGVhc2Ugc2VuZCB5b3VyIGZl
ZWRiYWNrIHRvIHBhdGNoZXctZGV2ZWxAcmVkaGF0LmNvbQ==

