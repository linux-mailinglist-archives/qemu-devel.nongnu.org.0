Return-Path: <qemu-devel-bounces+lists+qemu-devel=lfdr.de@nongnu.org>
X-Original-To: lists+qemu-devel@lfdr.de
Delivered-To: lists+qemu-devel@lfdr.de
Received: from lists.gnu.org (lists.gnu.org [209.51.188.17])
	by mail.lfdr.de (Postfix) with ESMTPS id BB7BA168DF1
	for <lists+qemu-devel@lfdr.de>; Sat, 22 Feb 2020 10:02:56 +0100 (CET)
Received: from localhost ([::1]:40600 helo=lists1p.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.90_1)
	(envelope-from <qemu-devel-bounces+lists+qemu-devel=lfdr.de@nongnu.org>)
	id 1j5QgY-0000xV-Nu
	for lists+qemu-devel@lfdr.de; Sat, 22 Feb 2020 04:02:54 -0500
Received: from eggs.gnu.org ([2001:470:142:3::10]:38895)
 by lists.gnu.org with esmtp (Exim 4.90_1)
 (envelope-from <stefanha@redhat.com>) id 1j5QYU-0002kJ-4N
 for qemu-devel@nongnu.org; Sat, 22 Feb 2020 03:54:36 -0500
Received: from Debian-exim by eggs.gnu.org with spam-scanned (Exim 4.71)
 (envelope-from <stefanha@redhat.com>) id 1j5QYR-00020g-Sg
 for qemu-devel@nongnu.org; Sat, 22 Feb 2020 03:54:34 -0500
Received: from us-smtp-delivery-1.mimecast.com ([205.139.110.120]:31566
 helo=us-smtp-1.mimecast.com)
 by eggs.gnu.org with esmtps (TLS1.0:DHE_RSA_AES_256_CBC_SHA1:32)
 (Exim 4.71) (envelope-from <stefanha@redhat.com>) id 1j5QYR-00020V-Mf
 for qemu-devel@nongnu.org; Sat, 22 Feb 2020 03:54:31 -0500
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=redhat.com;
 s=mimecast20190719; t=1582361671;
 h=from:from:reply-to:subject:subject:date:date:message-id:message-id:
 to:to:cc:cc:mime-version:mime-version:content-type:content-type:
 content-transfer-encoding:content-transfer-encoding:
 in-reply-to:in-reply-to:references:references;
 bh=fojS3wKYWeEMhefLYVqmTkt5i5oVpNp4o8LKLtCbU3g=;
 b=PgErTIpZc/oC/OimeHQ/popgYuGEH2+n49vVHxB4h16z9y+urNokkAxPOEearpMd36VQ/Q
 yF7bwU84S0RsQ9i4NmgkNc8jnCx+t5HY7MlEijw2N7MARkK+J23DgztsGMFH0T7wirCaK3
 ezOT/RbDToaudlyZ7SBVIwBlolYxVzI=
Received: from mimecast-mx01.redhat.com (mimecast-mx01.redhat.com
 [209.132.183.4]) (Using TLS) by relay.mimecast.com with ESMTP id
 us-mta-24-E83ZgVcePL-neFJQwBwHow-1; Sat, 22 Feb 2020 03:54:25 -0500
X-MC-Unique: E83ZgVcePL-neFJQwBwHow-1
Received: from smtp.corp.redhat.com (int-mx08.intmail.prod.int.phx2.redhat.com
 [10.5.11.23])
 (using TLSv1.2 with cipher AECDH-AES256-SHA (256/256 bits))
 (No client certificate requested)
 by mimecast-mx01.redhat.com (Postfix) with ESMTPS id 53839184B134;
 Sat, 22 Feb 2020 08:54:24 +0000 (UTC)
Received: from localhost (ovpn-116-74.ams2.redhat.com [10.36.116.74])
 by smtp.corp.redhat.com (Postfix) with ESMTP id 6499927090;
 Sat, 22 Feb 2020 08:54:12 +0000 (UTC)
From: Stefan Hajnoczi <stefanha@redhat.com>
To: qemu-devel@nongnu.org
Subject: [PULL 20/31] libqos: move useful qos-test funcs to qos_external
Date: Sat, 22 Feb 2020 08:50:19 +0000
Message-Id: <20200222085030.1760640-21-stefanha@redhat.com>
In-Reply-To: <20200222085030.1760640-1-stefanha@redhat.com>
References: <20200222085030.1760640-1-stefanha@redhat.com>
MIME-Version: 1.0
X-Scanned-By: MIMEDefang 2.84 on 10.5.11.23
X-Mimecast-Spam-Score: 0
X-Mimecast-Originator: redhat.com
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: base64
X-detected-operating-system: by eggs.gnu.org: GNU/Linux 2.2.x-3.x [generic]
X-Received-From: 205.139.110.120
X-BeenThere: qemu-devel@nongnu.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: <qemu-devel.nongnu.org>
List-Unsubscribe: <https://lists.nongnu.org/mailman/options/qemu-devel>,
 <mailto:qemu-devel-request@nongnu.org?subject=unsubscribe>
List-Archive: <https://lists.nongnu.org/archive/html/qemu-devel>
List-Post: <mailto:qemu-devel@nongnu.org>
List-Help: <mailto:qemu-devel-request@nongnu.org?subject=help>
List-Subscribe: <https://lists.nongnu.org/mailman/listinfo/qemu-devel>,
 <mailto:qemu-devel-request@nongnu.org?subject=subscribe>
Cc: Kevin Wolf <kwolf@redhat.com>, Peter Maydell <peter.maydell@linaro.org>,
 Thomas Huth <thuth@redhat.com>, Eduardo Habkost <ehabkost@redhat.com>,
 qemu-block@nongnu.org, "Michael S. Tsirkin" <mst@redhat.com>,
 Laurent Vivier <lvivier@redhat.com>, Darren Kenny <darren.kenny@oracle.com>,
 Max Reitz <mreitz@redhat.com>, Alexander Bulekov <alxndr@bu.edu>,
 Bandan Das <bsd@redhat.com>, Stefan Hajnoczi <stefanha@redhat.com>,
 =?UTF-8?q?Marc-Andr=C3=A9=20Lureau?= <marcandre.lureau@redhat.com>,
 Paolo Bonzini <pbonzini@redhat.com>, Fam Zheng <fam@euphon.net>,
 =?UTF-8?q?Philippe=20Mathieu-Daud=C3=A9?= <philmd@redhat.com>,
 Richard Henderson <rth@twiddle.net>
Errors-To: qemu-devel-bounces+lists+qemu-devel=lfdr.de@nongnu.org
Sender: "Qemu-devel" <qemu-devel-bounces+lists+qemu-devel=lfdr.de@nongnu.org>

RnJvbTogQWxleGFuZGVyIEJ1bGVrb3YgPGFseG5kckBidS5lZHU+CgpUaGUgbW92ZWQgZnVuY3Rp
b25zIGFyZSBub3Qgc3BlY2lmaWMgdG8gcW9zLXRlc3QgYW5kIG1pZ2h0IGJlIHVzZWZ1bAplbHNl
d2hlcmUuIEZvciBleGFtcGxlIHRoZSB2aXJ0dWFsLWRldmljZSBmdXp6ZXIgbWFrZXMgdXNlIG9m
IHRoZW0gZm9yCnFvcy1hc3Npc3RlZCBmdXp6LXRhcmdldHMuCgpTaWduZWQtb2ZmLWJ5OiBBbGV4
YW5kZXIgQnVsZWtvdiA8YWx4bmRyQGJ1LmVkdT4KUmV2aWV3ZWQtYnk6IFN0ZWZhbiBIYWpub2N6
aSA8c3RlZmFuaGFAcmVkaGF0LmNvbT4KUmV2aWV3ZWQtYnk6IFBoaWxpcHBlIE1hdGhpZXUtRGF1
ZMOpIDxwaGlsbWRAcmVkaGF0LmNvbT4KUmV2aWV3ZWQtYnk6IERhcnJlbiBLZW5ueSA8ZGFycmVu
Lmtlbm55QG9yYWNsZS5jb20+Ck1lc3NhZ2UtaWQ6IDIwMjAwMjIwMDQxMTE4LjIzMjY0LTEyLWFs
eG5kckBidS5lZHUKU2lnbmVkLW9mZi1ieTogU3RlZmFuIEhham5vY3ppIDxzdGVmYW5oYUByZWRo
YXQuY29tPgotLS0KIHRlc3RzL3F0ZXN0L01ha2VmaWxlLmluY2x1ZGUgICAgICB8ICAgMSArCiB0
ZXN0cy9xdGVzdC9saWJxb3MvcW9zX2V4dGVybmFsLmMgfCAxNjggKysrKysrKysrKysrKysrKysr
KysrKysrKysrKysrCiB0ZXN0cy9xdGVzdC9saWJxb3MvcW9zX2V4dGVybmFsLmggfCAgMjggKysr
KysKIHRlc3RzL3F0ZXN0L3Fvcy10ZXN0LmMgICAgICAgICAgICB8IDEzMiArLS0tLS0tLS0tLS0t
LS0tLS0tLS0tLQogNCBmaWxlcyBjaGFuZ2VkLCAxOTggaW5zZXJ0aW9ucygrKSwgMTMxIGRlbGV0
aW9ucygtKQogY3JlYXRlIG1vZGUgMTAwNjQ0IHRlc3RzL3F0ZXN0L2xpYnFvcy9xb3NfZXh0ZXJu
YWwuYwogY3JlYXRlIG1vZGUgMTAwNjQ0IHRlc3RzL3F0ZXN0L2xpYnFvcy9xb3NfZXh0ZXJuYWwu
aAoKZGlmZiAtLWdpdCBhL3Rlc3RzL3F0ZXN0L01ha2VmaWxlLmluY2x1ZGUgYi90ZXN0cy9xdGVz
dC9NYWtlZmlsZS5pbmNsdWRlCmluZGV4IDgzODYxOGU2ZjkuLmU3NjljMWFkNzAgMTAwNjQ0Ci0t
LSBhL3Rlc3RzL3F0ZXN0L01ha2VmaWxlLmluY2x1ZGUKKysrIGIvdGVzdHMvcXRlc3QvTWFrZWZp
bGUuaW5jbHVkZQpAQCAtMTcyLDYgKzE3Miw3IEBAIGxpYnFvcy11c2Itb2JqLXkgPSAkKGxpYnFv
cy1zcGFwci1vYmoteSkgJChsaWJxb3MtcGMtb2JqLXkpIHRlc3RzL3F0ZXN0L2xpYnFvcy91CiAj
IHFvcyBkZXZpY2VzOgogbGlicW9zLW9iai15ID0gICQobGlicWdyYXBoLW9iai15KQogbGlicW9z
LW9iai15ICs9ICQobGlicW9zLXBjLW9iai15KSAkKGxpYnFvcy1zcGFwci1vYmoteSkKK2xpYnFv
cy1vYmoteSArPSB0ZXN0cy9xdGVzdC9saWJxb3MvcW9zX2V4dGVybmFsLm8KIGxpYnFvcy1vYmot
eSArPSB0ZXN0cy9xdGVzdC9saWJxb3MvZTEwMDBlLm8KIGxpYnFvcy1vYmoteSArPSB0ZXN0cy9x
dGVzdC9saWJxb3MvaTJjLm8KIGxpYnFvcy1vYmoteSArPSB0ZXN0cy9xdGVzdC9saWJxb3MvaTJj
LWlteC5vCmRpZmYgLS1naXQgYS90ZXN0cy9xdGVzdC9saWJxb3MvcW9zX2V4dGVybmFsLmMgYi90
ZXN0cy9xdGVzdC9saWJxb3MvcW9zX2V4dGVybmFsLmMKbmV3IGZpbGUgbW9kZSAxMDA2NDQKaW5k
ZXggMDAwMDAwMDAwMC4uMzk4NTU2ZGRlMAotLS0gL2Rldi9udWxsCisrKyBiL3Rlc3RzL3F0ZXN0
L2xpYnFvcy9xb3NfZXh0ZXJuYWwuYwpAQCAtMCwwICsxLDE2OCBAQAorLyoKKyAqIGxpYnFvcyBk
cml2ZXIgZnJhbWV3b3JrCisgKgorICogQ29weXJpZ2h0IChjKSAyMDE4IEVtYW51ZWxlIEdpdXNl
cHBlIEVzcG9zaXRvIDxlLmVtYW51ZWxlZ2l1c2VwcGVAZ21haWwuY29tPgorICoKKyAqIFRoaXMg
bGlicmFyeSBpcyBmcmVlIHNvZnR3YXJlOyB5b3UgY2FuIHJlZGlzdHJpYnV0ZSBpdCBhbmQvb3IK
KyAqIG1vZGlmeSBpdCB1bmRlciB0aGUgdGVybXMgb2YgdGhlIEdOVSBMZXNzZXIgR2VuZXJhbCBQ
dWJsaWMKKyAqIExpY2Vuc2UgdmVyc2lvbiAyIGFzIHB1Ymxpc2hlZCBieSB0aGUgRnJlZSBTb2Z0
d2FyZSBGb3VuZGF0aW9uLgorICoKKyAqIFRoaXMgbGlicmFyeSBpcyBkaXN0cmlidXRlZCBpbiB0
aGUgaG9wZSB0aGF0IGl0IHdpbGwgYmUgdXNlZnVsLAorICogYnV0IFdJVEhPVVQgQU5ZIFdBUlJB
TlRZOyB3aXRob3V0IGV2ZW4gdGhlIGltcGxpZWQgd2FycmFudHkgb2YKKyAqIE1FUkNIQU5UQUJJ
TElUWSBvciBGSVRORVNTIEZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRS4gIFNlZSB0aGUgR05VCisg
KiBMZXNzZXIgR2VuZXJhbCBQdWJsaWMgTGljZW5zZSBmb3IgbW9yZSBkZXRhaWxzLgorICoKKyAq
IFlvdSBzaG91bGQgaGF2ZSByZWNlaXZlZCBhIGNvcHkgb2YgdGhlIEdOVSBMZXNzZXIgR2VuZXJh
bCBQdWJsaWMKKyAqIExpY2Vuc2UgYWxvbmcgd2l0aCB0aGlzIGxpYnJhcnk7IGlmIG5vdCwgc2Vl
IDxodHRwOi8vd3d3LmdudS5vcmcvbGljZW5zZXMvPgorICovCisKKyNpbmNsdWRlICJxZW11L29z
ZGVwLmgiCisjaW5jbHVkZSA8Z2V0b3B0Lmg+CisjaW5jbHVkZSAibGlicXRlc3QuaCIKKyNpbmNs
dWRlICJxYXBpL3FtcC9xZGljdC5oIgorI2luY2x1ZGUgInFhcGkvcW1wL3Fib29sLmgiCisjaW5j
bHVkZSAicWFwaS9xbXAvcXN0cmluZy5oIgorI2luY2x1ZGUgInFlbXUvbW9kdWxlLmgiCisjaW5j
bHVkZSAicWFwaS9xbXAvcWxpc3QuaCIKKyNpbmNsdWRlICJsaWJxb3MvbWFsbG9jLmgiCisjaW5j
bHVkZSAibGlicW9zL3FncmFwaC5oIgorI2luY2x1ZGUgImxpYnFvcy9xZ3JhcGhfaW50ZXJuYWwu
aCIKKyNpbmNsdWRlICJsaWJxb3MvcW9zX2V4dGVybmFsLmgiCisKKworCit2b2lkIGFwcGx5X3Rv
X25vZGUoY29uc3QgY2hhciAqbmFtZSwgYm9vbCBpc19tYWNoaW5lLCBib29sIGlzX2Fic3RyYWN0
KQoreworICAgIGNoYXIgKm1hY2hpbmVfbmFtZSA9IE5VTEw7CisgICAgaWYgKGlzX21hY2hpbmUp
IHsKKyAgICAgICAgY29uc3QgY2hhciAqYXJjaCA9IHF0ZXN0X2dldF9hcmNoKCk7CisgICAgICAg
IG1hY2hpbmVfbmFtZSA9IGdfc3RyY29uY2F0KGFyY2gsICIvIiwgbmFtZSwgTlVMTCk7CisgICAg
ICAgIG5hbWUgPSBtYWNoaW5lX25hbWU7CisgICAgfQorICAgIHFvc19ncmFwaF9ub2RlX3NldF9h
dmFpbGFiaWxpdHkobmFtZSwgdHJ1ZSk7CisgICAgaWYgKGlzX2Fic3RyYWN0KSB7CisgICAgICAg
IHFvc19kZWxldGVfY21kX2xpbmUobmFtZSk7CisgICAgfQorICAgIGdfZnJlZShtYWNoaW5lX25h
bWUpOworfQorCisvKioKKyAqIGFwcGx5X3RvX3FsaXN0KCk6IHVzaW5nIFFNUCBxdWVyaWVzIFFF
TVUgZm9yIGEgbGlzdCBvZgorICogbWFjaGluZXMgYW5kIGRldmljZXMgYXZhaWxhYmxlLCBhbmQg
c2V0cyB0aGUgcmVzcGVjdGl2ZSBub2RlCisgKiBhcyB0cnVlLiBJZiBhIG5vZGUgaXMgZm91bmQs
IGFsc28gYWxsIGl0cyBwcm9kdWNlZCBhbmQgY29udGFpbmVkCisgKiBjaGlsZCBhcmUgbWFya2Vk
IGF2YWlsYWJsZS4KKyAqCisgKiBTZWUgcW9zX2dyYXBoX25vZGVfc2V0X2F2YWlsYWJpbGl0eSgp
IGZvciBtb3JlIGluZm8KKyAqLwordm9pZCBhcHBseV90b19xbGlzdChRTGlzdCAqbGlzdCwgYm9v
bCBpc19tYWNoaW5lKQoreworICAgIGNvbnN0IFFMaXN0RW50cnkgKnA7CisgICAgY29uc3QgY2hh
ciAqbmFtZTsKKyAgICBib29sIGFic3RyYWN0OworICAgIFFEaWN0ICptaW5mbzsKKyAgICBRT2Jq
ZWN0ICpxb2JqOworICAgIFFTdHJpbmcgKnFzdHI7CisgICAgUUJvb2wgKnFib29sOworCisgICAg
Zm9yIChwID0gcWxpc3RfZmlyc3QobGlzdCk7IHA7IHAgPSBxbGlzdF9uZXh0KHApKSB7CisgICAg
ICAgIG1pbmZvID0gcW9iamVjdF90byhRRGljdCwgcWxpc3RfZW50cnlfb2JqKHApKTsKKyAgICAg
ICAgcW9iaiA9IHFkaWN0X2dldChtaW5mbywgIm5hbWUiKTsKKyAgICAgICAgcXN0ciA9IHFvYmpl
Y3RfdG8oUVN0cmluZywgcW9iaik7CisgICAgICAgIG5hbWUgPSBxc3RyaW5nX2dldF9zdHIocXN0
cik7CisKKyAgICAgICAgcW9iaiA9IHFkaWN0X2dldChtaW5mbywgImFic3RyYWN0Iik7CisgICAg
ICAgIGlmIChxb2JqKSB7CisgICAgICAgICAgICBxYm9vbCA9IHFvYmplY3RfdG8oUUJvb2wsIHFv
YmopOworICAgICAgICAgICAgYWJzdHJhY3QgPSBxYm9vbF9nZXRfYm9vbChxYm9vbCk7CisgICAg
ICAgIH0gZWxzZSB7CisgICAgICAgICAgICBhYnN0cmFjdCA9IGZhbHNlOworICAgICAgICB9CisK
KyAgICAgICAgYXBwbHlfdG9fbm9kZShuYW1lLCBpc19tYWNoaW5lLCBhYnN0cmFjdCk7CisgICAg
ICAgIHFvYmogPSBxZGljdF9nZXQobWluZm8sICJhbGlhcyIpOworICAgICAgICBpZiAocW9iaikg
eworICAgICAgICAgICAgcXN0ciA9IHFvYmplY3RfdG8oUVN0cmluZywgcW9iaik7CisgICAgICAg
ICAgICBuYW1lID0gcXN0cmluZ19nZXRfc3RyKHFzdHIpOworICAgICAgICAgICAgYXBwbHlfdG9f
bm9kZShuYW1lLCBpc19tYWNoaW5lLCBhYnN0cmFjdCk7CisgICAgICAgIH0KKyAgICB9Cit9CisK
K1FHdWVzdEFsbG9jYXRvciAqZ2V0X21hY2hpbmVfYWxsb2NhdG9yKFFPU0dyYXBoT2JqZWN0ICpv
YmopCit7CisgICAgcmV0dXJuIG9iai0+Z2V0X2RyaXZlcihvYmosICJtZW1vcnkiKTsKK30KKwor
LyoqCisgKiBhbGxvY2F0ZV9vYmplY3RzKCk6IGdpdmVuIGFuIGFycmF5IG9mIG5vZGVzIEBhcmcs
CisgKiB3YWxrcyB0aGUgcGF0aCBpbnZva2luZyBhbGwgY29uc3RydWN0b3JzIGFuZAorICogcGFz
c2luZyB0aGUgY29ycmVzcG9uZGluZyBwYXJhbWV0ZXIgaW4gb3JkZXIgdG8KKyAqIGNvbnRpbnVl
IHRoZSBvYmplY3RzIGFsbG9jYXRpb24uCisgKiBPbmNlIHRoZSB0ZXN0IGlzIHJlYWNoZWQsIHJl
dHVybiB0aGUgb2JqZWN0IGl0IGNvbnN1bWVzLgorICoKKyAqIFNpbmNlIHRoZSBtYWNoaW5lIGFu
ZCBRRURHRV9DT05TVU1FRF9CWSBub2RlcyBhbGxvY2F0ZQorICogbWVtb3J5IGluIHRoZSBjb25z
dHJ1Y3RvciwgZ190ZXN0X3F1ZXVlX2Rlc3Ryb3kgaXMgdXNlZCBzbworICogdGhhdCBhZnRlciBl
eGVjdXRpb24gdGhleSBjYW4gYmUgc2FmZWx5IGZyZWUnZC4gIChUaGUgdGVzdCdzCisgKiAtPmJl
Zm9yZSBjYWxsYmFjayBpcyBhbHNvIHdlbGNvbWUgdG8gdXNlIGdfdGVzdF9xdWV1ZV9kZXN0cm95
KS4KKyAqCisgKiBOb3RlOiBhcyBzcGVjaWZpZWQgaW4gd2Fsa19wYXRoKCkgdG9vLCBAYXJnIGlz
IGFuIGFycmF5IG9mCisgKiBjaGFyICosIHdoZXJlIGFyZ1swXSBpcyBhIHBvaW50ZXIgdG8gdGhl
IGNvbW1hbmQgbGluZQorICogc3RyaW5nIHRoYXQgd2lsbCBiZSB1c2VkIHRvIHByb3Blcmx5IHN0
YXJ0IFFFTVUgd2hlbiBleGVjdXRpbmcKKyAqIHRoZSB0ZXN0LCBhbmQgdGhlIHJlbWFpbmluZyBl
bGVtZW50cyByZXByZXNlbnQgdGhlIGFjdHVhbCBvYmplY3RzCisgKiB0aGF0IHdpbGwgYmUgYWxs
b2NhdGVkLgorICovCit2b2lkICphbGxvY2F0ZV9vYmplY3RzKFFUZXN0U3RhdGUgKnF0cywgY2hh
ciAqKnBhdGgsIFFHdWVzdEFsbG9jYXRvciAqKnBfYWxsb2MpCit7CisgICAgaW50IGN1cnJlbnQg
PSAwOworICAgIFFHdWVzdEFsbG9jYXRvciAqYWxsb2M7CisgICAgUU9TR3JhcGhPYmplY3QgKnBh
cmVudCA9IE5VTEw7CisgICAgUU9TR3JhcGhFZGdlICplZGdlOworICAgIFFPU0dyYXBoTm9kZSAq
bm9kZTsKKyAgICB2b2lkICplZGdlX2FyZzsKKyAgICB2b2lkICpvYmo7CisKKyAgICBub2RlID0g
cW9zX2dyYXBoX2dldF9ub2RlKHBhdGhbY3VycmVudF0pOworICAgIGdfYXNzZXJ0KG5vZGUtPnR5
cGUgPT0gUU5PREVfTUFDSElORSk7CisKKyAgICBvYmogPSBxb3NfbWFjaGluZV9uZXcobm9kZSwg
cXRzKTsKKyAgICBxb3Nfb2JqZWN0X3F1ZXVlX2Rlc3Ryb3kob2JqKTsKKworICAgIGFsbG9jID0g
Z2V0X21hY2hpbmVfYWxsb2NhdG9yKG9iaik7CisgICAgaWYgKHBfYWxsb2MpIHsKKyAgICAgICAg
KnBfYWxsb2MgPSBhbGxvYzsKKyAgICB9CisKKyAgICBmb3IgKDs7KSB7CisgICAgICAgIGlmIChu
b2RlLT50eXBlICE9IFFOT0RFX0lOVEVSRkFDRSkgeworICAgICAgICAgICAgcW9zX29iamVjdF9z
dGFydF9odyhvYmopOworICAgICAgICAgICAgcGFyZW50ID0gb2JqOworICAgICAgICB9CisKKyAg
ICAgICAgLyogZm9sbG93IGVkZ2UgYW5kIGdldCBvYmplY3QgZm9yIG5leHQgbm9kZSBjb25zdHJ1
Y3RvciAqLworICAgICAgICBjdXJyZW50Kys7CisgICAgICAgIGVkZ2UgPSBxb3NfZ3JhcGhfZ2V0
X2VkZ2UocGF0aFtjdXJyZW50IC0gMV0sIHBhdGhbY3VycmVudF0pOworICAgICAgICBub2RlID0g
cW9zX2dyYXBoX2dldF9ub2RlKHBhdGhbY3VycmVudF0pOworCisgICAgICAgIGlmIChub2RlLT50
eXBlID09IFFOT0RFX1RFU1QpIHsKKyAgICAgICAgICAgIGdfYXNzZXJ0KHFvc19ncmFwaF9lZGdl
X2dldF90eXBlKGVkZ2UpID09IFFFREdFX0NPTlNVTUVEX0JZKTsKKyAgICAgICAgICAgIHJldHVy
biBvYmo7CisgICAgICAgIH0KKworICAgICAgICBzd2l0Y2ggKHFvc19ncmFwaF9lZGdlX2dldF90
eXBlKGVkZ2UpKSB7CisgICAgICAgIGNhc2UgUUVER0VfUFJPRFVDRVM6CisgICAgICAgICAgICBv
YmogPSBwYXJlbnQtPmdldF9kcml2ZXIocGFyZW50LCBwYXRoW2N1cnJlbnRdKTsKKyAgICAgICAg
ICAgIGJyZWFrOworCisgICAgICAgIGNhc2UgUUVER0VfQ09OU1VNRURfQlk6CisgICAgICAgICAg
ICBlZGdlX2FyZyA9IHFvc19ncmFwaF9lZGdlX2dldF9hcmcoZWRnZSk7CisgICAgICAgICAgICBv
YmogPSBxb3NfZHJpdmVyX25ldyhub2RlLCBvYmosIGFsbG9jLCBlZGdlX2FyZyk7CisgICAgICAg
ICAgICBxb3Nfb2JqZWN0X3F1ZXVlX2Rlc3Ryb3kob2JqKTsKKyAgICAgICAgICAgIGJyZWFrOwor
CisgICAgICAgIGNhc2UgUUVER0VfQ09OVEFJTlM6CisgICAgICAgICAgICBvYmogPSBwYXJlbnQt
PmdldF9kZXZpY2UocGFyZW50LCBwYXRoW2N1cnJlbnRdKTsKKyAgICAgICAgICAgIGJyZWFrOwor
ICAgICAgICB9CisgICAgfQorfQorCmRpZmYgLS1naXQgYS90ZXN0cy9xdGVzdC9saWJxb3MvcW9z
X2V4dGVybmFsLmggYi90ZXN0cy9xdGVzdC9saWJxb3MvcW9zX2V4dGVybmFsLmgKbmV3IGZpbGUg
bW9kZSAxMDA2NDQKaW5kZXggMDAwMDAwMDAwMC4uN2I0NDkzMGM1NQotLS0gL2Rldi9udWxsCisr
KyBiL3Rlc3RzL3F0ZXN0L2xpYnFvcy9xb3NfZXh0ZXJuYWwuaApAQCAtMCwwICsxLDI4IEBACisv
KgorICogbGlicW9zIGRyaXZlciBmcmFtZXdvcmsKKyAqCisgKiBDb3B5cmlnaHQgKGMpIDIwMTgg
RW1hbnVlbGUgR2l1c2VwcGUgRXNwb3NpdG8gPGUuZW1hbnVlbGVnaXVzZXBwZUBnbWFpbC5jb20+
CisgKgorICogVGhpcyBsaWJyYXJ5IGlzIGZyZWUgc29mdHdhcmU7IHlvdSBjYW4gcmVkaXN0cmli
dXRlIGl0IGFuZC9vcgorICogbW9kaWZ5IGl0IHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgR05VIExl
c3NlciBHZW5lcmFsIFB1YmxpYworICogTGljZW5zZSB2ZXJzaW9uIDIgYXMgcHVibGlzaGVkIGJ5
IHRoZSBGcmVlIFNvZnR3YXJlIEZvdW5kYXRpb24uCisgKgorICogVGhpcyBsaWJyYXJ5IGlzIGRp
c3RyaWJ1dGVkIGluIHRoZSBob3BlIHRoYXQgaXQgd2lsbCBiZSB1c2VmdWwsCisgKiBidXQgV0lU
SE9VVCBBTlkgV0FSUkFOVFk7IHdpdGhvdXQgZXZlbiB0aGUgaW1wbGllZCB3YXJyYW50eSBvZgor
ICogTUVSQ0hBTlRBQklMSVRZIG9yIEZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFLiAg
U2VlIHRoZSBHTlUKKyAqIExlc3NlciBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlIGZvciBtb3JlIGRl
dGFpbHMuCisgKgorICogWW91IHNob3VsZCBoYXZlIHJlY2VpdmVkIGEgY29weSBvZiB0aGUgR05V
IExlc3NlciBHZW5lcmFsIFB1YmxpYworICogTGljZW5zZSBhbG9uZyB3aXRoIHRoaXMgbGlicmFy
eTsgaWYgbm90LCBzZWUgPGh0dHA6Ly93d3cuZ251Lm9yZy9saWNlbnNlcy8+CisgKi8KKworI2lm
bmRlZiBRT1NfRVhURVJOQUxfSAorI2RlZmluZSBRT1NfRVhURVJOQUxfSAorI2luY2x1ZGUgImxp
YnFvcy9xZ3JhcGguaCIKKwordm9pZCBhcHBseV90b19ub2RlKGNvbnN0IGNoYXIgKm5hbWUsIGJv
b2wgaXNfbWFjaGluZSwgYm9vbCBpc19hYnN0cmFjdCk7Cit2b2lkIGFwcGx5X3RvX3FsaXN0KFFM
aXN0ICpsaXN0LCBib29sIGlzX21hY2hpbmUpOworUUd1ZXN0QWxsb2NhdG9yICpnZXRfbWFjaGlu
ZV9hbGxvY2F0b3IoUU9TR3JhcGhPYmplY3QgKm9iaik7Cit2b2lkICphbGxvY2F0ZV9vYmplY3Rz
KFFUZXN0U3RhdGUgKnF0cywgY2hhciAqKnBhdGgsIFFHdWVzdEFsbG9jYXRvciAqKnBfYWxsb2Mp
OworCisjZW5kaWYKZGlmZiAtLWdpdCBhL3Rlc3RzL3F0ZXN0L3Fvcy10ZXN0LmMgYi90ZXN0cy9x
dGVzdC9xb3MtdGVzdC5jCmluZGV4IGZkNzBkNzNlYTUuLmFkMTkzZjQzYTUgMTAwNjQ0Ci0tLSBh
L3Rlc3RzL3F0ZXN0L3Fvcy10ZXN0LmMKKysrIGIvdGVzdHMvcXRlc3QvcW9zLXRlc3QuYwpAQCAt
MjcsNjUgKzI3LDExIEBACiAjaW5jbHVkZSAibGlicW9zL21hbGxvYy5oIgogI2luY2x1ZGUgImxp
YnFvcy9xZ3JhcGguaCIKICNpbmNsdWRlICJsaWJxb3MvcWdyYXBoX2ludGVybmFsLmgiCisjaW5j
bHVkZSAibGlicW9zL3Fvc19leHRlcm5hbC5oIgogCiBzdGF0aWMgY2hhciAqb2xkX3BhdGg7CiAK
LXN0YXRpYyB2b2lkIGFwcGx5X3RvX25vZGUoY29uc3QgY2hhciAqbmFtZSwgYm9vbCBpc19tYWNo
aW5lLCBib29sIGlzX2Fic3RyYWN0KQotewotICAgIGNoYXIgKm1hY2hpbmVfbmFtZSA9IE5VTEw7
Ci0gICAgaWYgKGlzX21hY2hpbmUpIHsKLSAgICAgICAgY29uc3QgY2hhciAqYXJjaCA9IHF0ZXN0
X2dldF9hcmNoKCk7Ci0gICAgICAgIG1hY2hpbmVfbmFtZSA9IGdfc3RyY29uY2F0KGFyY2gsICIv
IiwgbmFtZSwgTlVMTCk7Ci0gICAgICAgIG5hbWUgPSBtYWNoaW5lX25hbWU7Ci0gICAgfQotICAg
IHFvc19ncmFwaF9ub2RlX3NldF9hdmFpbGFiaWxpdHkobmFtZSwgdHJ1ZSk7Ci0gICAgaWYgKGlz
X2Fic3RyYWN0KSB7Ci0gICAgICAgIHFvc19kZWxldGVfY21kX2xpbmUobmFtZSk7Ci0gICAgfQot
ICAgIGdfZnJlZShtYWNoaW5lX25hbWUpOwotfQogCi0vKioKLSAqIGFwcGx5X3RvX3FsaXN0KCk6
IHVzaW5nIFFNUCBxdWVyaWVzIFFFTVUgZm9yIGEgbGlzdCBvZgotICogbWFjaGluZXMgYW5kIGRl
dmljZXMgYXZhaWxhYmxlLCBhbmQgc2V0cyB0aGUgcmVzcGVjdGl2ZSBub2RlCi0gKiBhcyB0cnVl
LiBJZiBhIG5vZGUgaXMgZm91bmQsIGFsc28gYWxsIGl0cyBwcm9kdWNlZCBhbmQgY29udGFpbmVk
Ci0gKiBjaGlsZCBhcmUgbWFya2VkIGF2YWlsYWJsZS4KLSAqCi0gKiBTZWUgcW9zX2dyYXBoX25v
ZGVfc2V0X2F2YWlsYWJpbGl0eSgpIGZvciBtb3JlIGluZm8KLSAqLwotc3RhdGljIHZvaWQgYXBw
bHlfdG9fcWxpc3QoUUxpc3QgKmxpc3QsIGJvb2wgaXNfbWFjaGluZSkKLXsKLSAgICBjb25zdCBR
TGlzdEVudHJ5ICpwOwotICAgIGNvbnN0IGNoYXIgKm5hbWU7Ci0gICAgYm9vbCBhYnN0cmFjdDsK
LSAgICBRRGljdCAqbWluZm87Ci0gICAgUU9iamVjdCAqcW9iajsKLSAgICBRU3RyaW5nICpxc3Ry
OwotICAgIFFCb29sICpxYm9vbDsKLQotICAgIGZvciAocCA9IHFsaXN0X2ZpcnN0KGxpc3QpOyBw
OyBwID0gcWxpc3RfbmV4dChwKSkgewotICAgICAgICBtaW5mbyA9IHFvYmplY3RfdG8oUURpY3Qs
IHFsaXN0X2VudHJ5X29iaihwKSk7Ci0gICAgICAgIHFvYmogPSBxZGljdF9nZXQobWluZm8sICJu
YW1lIik7Ci0gICAgICAgIHFzdHIgPSBxb2JqZWN0X3RvKFFTdHJpbmcsIHFvYmopOwotICAgICAg
ICBuYW1lID0gcXN0cmluZ19nZXRfc3RyKHFzdHIpOwotCi0gICAgICAgIHFvYmogPSBxZGljdF9n
ZXQobWluZm8sICJhYnN0cmFjdCIpOwotICAgICAgICBpZiAocW9iaikgewotICAgICAgICAgICAg
cWJvb2wgPSBxb2JqZWN0X3RvKFFCb29sLCBxb2JqKTsKLSAgICAgICAgICAgIGFic3RyYWN0ID0g
cWJvb2xfZ2V0X2Jvb2wocWJvb2wpOwotICAgICAgICB9IGVsc2UgewotICAgICAgICAgICAgYWJz
dHJhY3QgPSBmYWxzZTsKLSAgICAgICAgfQotCi0gICAgICAgIGFwcGx5X3RvX25vZGUobmFtZSwg
aXNfbWFjaGluZSwgYWJzdHJhY3QpOwotICAgICAgICBxb2JqID0gcWRpY3RfZ2V0KG1pbmZvLCAi
YWxpYXMiKTsKLSAgICAgICAgaWYgKHFvYmopIHsKLSAgICAgICAgICAgIHFzdHIgPSBxb2JqZWN0
X3RvKFFTdHJpbmcsIHFvYmopOwotICAgICAgICAgICAgbmFtZSA9IHFzdHJpbmdfZ2V0X3N0cihx
c3RyKTsKLSAgICAgICAgICAgIGFwcGx5X3RvX25vZGUobmFtZSwgaXNfbWFjaGluZSwgYWJzdHJh
Y3QpOwotICAgICAgICB9Ci0gICAgfQotfQogCiAvKioKICAqIHFvc19zZXRfbWFjaGluZXNfZGV2
aWNlc19hdmFpbGFibGUoKTogc2V0cyBhdmFpbGFiaWxpdHkgb2YgcWdyYXBoCkBAIC0xMjksMTAg
Kzc1LDYgQEAgc3RhdGljIHZvaWQgcW9zX3NldF9tYWNoaW5lc19kZXZpY2VzX2F2YWlsYWJsZSh2
b2lkKQogICAgIHFvYmplY3RfdW5yZWYocmVzcG9uc2UpOwogfQogCi1zdGF0aWMgUUd1ZXN0QWxs
b2NhdG9yICpnZXRfbWFjaGluZV9hbGxvY2F0b3IoUU9TR3JhcGhPYmplY3QgKm9iaikKLXsKLSAg
ICByZXR1cm4gb2JqLT5nZXRfZHJpdmVyKG9iaiwgIm1lbW9yeSIpOwotfQogCiBzdGF0aWMgdm9p
ZCByZXN0YXJ0X3FlbXVfb3JfY29udGludWUoY2hhciAqcGF0aCkKIHsKQEAgLTE1OSw3OCArMTAx
LDYgQEAgdm9pZCBxb3NfaW52YWxpZGF0ZV9jb21tYW5kX2xpbmUodm9pZCkKICAgICBvbGRfcGF0
aCA9IE5VTEw7CiB9CiAKLS8qKgotICogYWxsb2NhdGVfb2JqZWN0cygpOiBnaXZlbiBhbiBhcnJh
eSBvZiBub2RlcyBAYXJnLAotICogd2Fsa3MgdGhlIHBhdGggaW52b2tpbmcgYWxsIGNvbnN0cnVj
dG9ycyBhbmQKLSAqIHBhc3NpbmcgdGhlIGNvcnJlc3BvbmRpbmcgcGFyYW1ldGVyIGluIG9yZGVy
IHRvCi0gKiBjb250aW51ZSB0aGUgb2JqZWN0cyBhbGxvY2F0aW9uLgotICogT25jZSB0aGUgdGVz
dCBpcyByZWFjaGVkLCByZXR1cm4gdGhlIG9iamVjdCBpdCBjb25zdW1lcy4KLSAqCi0gKiBTaW5j
ZSB0aGUgbWFjaGluZSBhbmQgUUVER0VfQ09OU1VNRURfQlkgbm9kZXMgYWxsb2NhdGUKLSAqIG1l
bW9yeSBpbiB0aGUgY29uc3RydWN0b3IsIGdfdGVzdF9xdWV1ZV9kZXN0cm95IGlzIHVzZWQgc28K
LSAqIHRoYXQgYWZ0ZXIgZXhlY3V0aW9uIHRoZXkgY2FuIGJlIHNhZmVseSBmcmVlJ2QuICAoVGhl
IHRlc3QncwotICogLT5iZWZvcmUgY2FsbGJhY2sgaXMgYWxzbyB3ZWxjb21lIHRvIHVzZSBnX3Rl
c3RfcXVldWVfZGVzdHJveSkuCi0gKgotICogTm90ZTogYXMgc3BlY2lmaWVkIGluIHdhbGtfcGF0
aCgpIHRvbywgQGFyZyBpcyBhbiBhcnJheSBvZgotICogY2hhciAqLCB3aGVyZSBhcmdbMF0gaXMg
YSBwb2ludGVyIHRvIHRoZSBjb21tYW5kIGxpbmUKLSAqIHN0cmluZyB0aGF0IHdpbGwgYmUgdXNl
ZCB0byBwcm9wZXJseSBzdGFydCBRRU1VIHdoZW4gZXhlY3V0aW5nCi0gKiB0aGUgdGVzdCwgYW5k
IHRoZSByZW1haW5pbmcgZWxlbWVudHMgcmVwcmVzZW50IHRoZSBhY3R1YWwgb2JqZWN0cwotICog
dGhhdCB3aWxsIGJlIGFsbG9jYXRlZC4KLSAqLwotc3RhdGljIHZvaWQgKmFsbG9jYXRlX29iamVj
dHMoUVRlc3RTdGF0ZSAqcXRzLCBjaGFyICoqcGF0aCwgUUd1ZXN0QWxsb2NhdG9yICoqcF9hbGxv
YykKLXsKLSAgICBpbnQgY3VycmVudCA9IDA7Ci0gICAgUUd1ZXN0QWxsb2NhdG9yICphbGxvYzsK
LSAgICBRT1NHcmFwaE9iamVjdCAqcGFyZW50ID0gTlVMTDsKLSAgICBRT1NHcmFwaEVkZ2UgKmVk
Z2U7Ci0gICAgUU9TR3JhcGhOb2RlICpub2RlOwotICAgIHZvaWQgKmVkZ2VfYXJnOwotICAgIHZv
aWQgKm9iajsKLQotICAgIG5vZGUgPSBxb3NfZ3JhcGhfZ2V0X25vZGUocGF0aFtjdXJyZW50XSk7
Ci0gICAgZ19hc3NlcnQobm9kZS0+dHlwZSA9PSBRTk9ERV9NQUNISU5FKTsKLQotICAgIG9iaiA9
IHFvc19tYWNoaW5lX25ldyhub2RlLCBxdHMpOwotICAgIHFvc19vYmplY3RfcXVldWVfZGVzdHJv
eShvYmopOwotCi0gICAgYWxsb2MgPSBnZXRfbWFjaGluZV9hbGxvY2F0b3Iob2JqKTsKLSAgICBp
ZiAocF9hbGxvYykgewotICAgICAgICAqcF9hbGxvYyA9IGFsbG9jOwotICAgIH0KLQotICAgIGZv
ciAoOzspIHsKLSAgICAgICAgaWYgKG5vZGUtPnR5cGUgIT0gUU5PREVfSU5URVJGQUNFKSB7Ci0g
ICAgICAgICAgICBxb3Nfb2JqZWN0X3N0YXJ0X2h3KG9iaik7Ci0gICAgICAgICAgICBwYXJlbnQg
PSBvYmo7Ci0gICAgICAgIH0KLQotICAgICAgICAvKiBmb2xsb3cgZWRnZSBhbmQgZ2V0IG9iamVj
dCBmb3IgbmV4dCBub2RlIGNvbnN0cnVjdG9yICovCi0gICAgICAgIGN1cnJlbnQrKzsKLSAgICAg
ICAgZWRnZSA9IHFvc19ncmFwaF9nZXRfZWRnZShwYXRoW2N1cnJlbnQgLSAxXSwgcGF0aFtjdXJy
ZW50XSk7Ci0gICAgICAgIG5vZGUgPSBxb3NfZ3JhcGhfZ2V0X25vZGUocGF0aFtjdXJyZW50XSk7
Ci0KLSAgICAgICAgaWYgKG5vZGUtPnR5cGUgPT0gUU5PREVfVEVTVCkgewotICAgICAgICAgICAg
Z19hc3NlcnQocW9zX2dyYXBoX2VkZ2VfZ2V0X3R5cGUoZWRnZSkgPT0gUUVER0VfQ09OU1VNRURf
QlkpOwotICAgICAgICAgICAgcmV0dXJuIG9iajsKLSAgICAgICAgfQotCi0gICAgICAgIHN3aXRj
aCAocW9zX2dyYXBoX2VkZ2VfZ2V0X3R5cGUoZWRnZSkpIHsKLSAgICAgICAgY2FzZSBRRURHRV9Q
Uk9EVUNFUzoKLSAgICAgICAgICAgIG9iaiA9IHBhcmVudC0+Z2V0X2RyaXZlcihwYXJlbnQsIHBh
dGhbY3VycmVudF0pOwotICAgICAgICAgICAgYnJlYWs7Ci0KLSAgICAgICAgY2FzZSBRRURHRV9D
T05TVU1FRF9CWToKLSAgICAgICAgICAgIGVkZ2VfYXJnID0gcW9zX2dyYXBoX2VkZ2VfZ2V0X2Fy
ZyhlZGdlKTsKLSAgICAgICAgICAgIG9iaiA9IHFvc19kcml2ZXJfbmV3KG5vZGUsIG9iaiwgYWxs
b2MsIGVkZ2VfYXJnKTsKLSAgICAgICAgICAgIHFvc19vYmplY3RfcXVldWVfZGVzdHJveShvYmop
OwotICAgICAgICAgICAgYnJlYWs7Ci0KLSAgICAgICAgY2FzZSBRRURHRV9DT05UQUlOUzoKLSAg
ICAgICAgICAgIG9iaiA9IHBhcmVudC0+Z2V0X2RldmljZShwYXJlbnQsIHBhdGhbY3VycmVudF0p
OwotICAgICAgICAgICAgYnJlYWs7Ci0gICAgICAgIH0KLSAgICB9Ci19CiAKIC8qIFRoZSBhcmd1
bWVudCB0byBydW5fb25lX3Rlc3QsIHdoaWNoIGlzIHRoZSB0ZXN0IGZ1bmN0aW9uIHRoYXQgaXMg
cmVnaXN0ZXJlZAogICogd2l0aCBHVGVzdCwgaXMgYSB2ZWN0b3Igb2Ygc3RyaW5ncy4gIFRoZSBm
aXJzdCBpdGVtIGlzIHRoZSBpbml0aWFsIGNvbW1hbmQKLS0gCjIuMjQuMQoK


