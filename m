Return-Path: <qemu-devel-bounces+lists+qemu-devel=lfdr.de@nongnu.org>
X-Original-To: lists+qemu-devel@lfdr.de
Delivered-To: lists+qemu-devel@lfdr.de
Received: from lists.gnu.org (lists.gnu.org [209.51.188.17])
	by mail.lfdr.de (Postfix) with ESMTPS id B5AB02F5091
	for <lists+qemu-devel@lfdr.de>; Wed, 13 Jan 2021 18:03:31 +0100 (CET)
Received: from localhost ([::1]:39270 helo=lists1p.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.90_1)
	(envelope-from <qemu-devel-bounces+lists+qemu-devel=lfdr.de@nongnu.org>)
	id 1kzjYQ-0000CA-PP
	for lists+qemu-devel@lfdr.de; Wed, 13 Jan 2021 12:03:30 -0500
Received: from eggs.gnu.org ([2001:470:142:3::10]:35288)
 by lists.gnu.org with esmtps (TLS1.2:ECDHE_RSA_AES_256_GCM_SHA384:256)
 (Exim 4.90_1) (envelope-from <alistair23@gmail.com>)
 id 1kzjQa-0001Vi-1Q; Wed, 13 Jan 2021 11:55:24 -0500
Received: from mail-io1-xd33.google.com ([2607:f8b0:4864:20::d33]:44751)
 by eggs.gnu.org with esmtps (TLS1.2:ECDHE_RSA_AES_128_GCM_SHA256:128)
 (Exim 4.90_1) (envelope-from <alistair23@gmail.com>)
 id 1kzjQS-0003VS-Cp; Wed, 13 Jan 2021 11:55:21 -0500
Received: by mail-io1-xd33.google.com with SMTP id z5so5428330iob.11;
 Wed, 13 Jan 2021 08:55:14 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=gmail.com; s=20161025;
 h=mime-version:references:in-reply-to:from:date:message-id:subject:to
 :cc; bh=B3c+OkbpE7ApZcVMn8sR142NACKXfJ9j/DuphwKqs70=;
 b=YUCIP+/MefIxLV9fkeAcCneDu6XA6duXdLoN9kT2/xSkH92JVyedHDPZHUCWhUnkDX
 NaELYuu5Z5LdlPqry+WwOBppH343OR5t++Y0p2bAQZoVJaUYA3gyBT92VnhdhkUhE7gs
 u+B3esMUoWwwfdAzTL9zbaRVxlsXDdGNmc6RbS49ytvWdpyjewkwgKGUf+lqrQ3lbN6U
 72yBZXcNSNrnVf6WAlSMkmdbKMt0v3n4i2Tha31IEKCohypgcP0+UtMRePlpYZJDQxNV
 EjYVyzBP7xvV5URJJxoacMMftNULfZjXay66KUZuwJsMonGIP2H6TK7/Zo4oULJCLMyR
 KAcw==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
 d=1e100.net; s=20161025;
 h=x-gm-message-state:mime-version:references:in-reply-to:from:date
 :message-id:subject:to:cc;
 bh=B3c+OkbpE7ApZcVMn8sR142NACKXfJ9j/DuphwKqs70=;
 b=GpurrXKASJy9lW8VtgpnLaDocoXLW/L+s2RZAzAg9qJNN3UKGgSVl8wI5HU6PkOua2
 duaAwNs1zJpPhNqxn8P6qouUt+8gsNx+g7LieXRWAQkG+VHiUFy53nA8wyrTXya9dlhx
 RIZVDXNzILhFaAfYfFXR5+BmwDD3FhTl+iHd0ykh94bJLNhQL/9QBnXy/o0loxaylN/1
 vEVc1oEdPvPc7721jSJo8VGg4i4hfc9DUGx35GH2k2ahMk06fOqSRUyYJ3YoqktLBVjU
 yO/R21RqyhH2CWob+YRAQt9EdwGds/kWZkRsKfcUBrDmbkG8+zu9lIA4U7eLaqnjlWNn
 F53Q==
X-Gm-Message-State: AOAM533kaacY6iUjDuXn/qBW7IRoCaOC/CXuTgrpPVHCMZ+rPiRiRj9O
 f8W6A6stZjSZ2f0+jL27m6yH8V3J7cdLCLfaVAo=
X-Google-Smtp-Source: ABdhPJxAfl+fZa87erSzwe2KWazVXAVJT55WswuWSxA1c+sJbTboRjvN9pD2kZOqvt69dT7iakHbV4rWSYw6t4UaChc=
X-Received: by 2002:a02:ca09:: with SMTP id i9mr3204961jak.135.1610556913246; 
 Wed, 13 Jan 2021 08:55:13 -0800 (PST)
MIME-Version: 1.0
References: <20201231113010.27108-1-bmeng.cn@gmail.com>
 <20201231113010.27108-8-bmeng.cn@gmail.com>
In-Reply-To: <20201231113010.27108-8-bmeng.cn@gmail.com>
From: Alistair Francis <alistair23@gmail.com>
Date: Wed, 13 Jan 2021 08:54:47 -0800
Message-ID: <CAKmqyKPFUuHN602DNLx5U9onvsDe1svqoWd-vphNPD3s7TaELg@mail.gmail.com>
Subject: Re: [PATCH 07/22] hw/sd: ssi-sd: Suffix a data block with CRC16
To: Bin Meng <bmeng.cn@gmail.com>
Content-Type: text/plain; charset="UTF-8"
Received-SPF: pass client-ip=2607:f8b0:4864:20::d33;
 envelope-from=alistair23@gmail.com; helo=mail-io1-xd33.google.com
X-Spam_score_int: -17
X-Spam_score: -1.8
X-Spam_bar: -
X-Spam_report: (-1.8 / 5.0 requ) BAYES_00=-1.9, DKIM_SIGNED=0.1,
 DKIM_VALID=-0.1, DKIM_VALID_AU=-0.1, DKIM_VALID_EF=-0.1,
 FREEMAIL_ENVFROM_END_DIGIT=0.25, FREEMAIL_FROM=0.001,
 RCVD_IN_DNSWL_NONE=-0.0001, SPF_HELO_NONE=0.001,
 SPF_PASS=-0.001 autolearn=ham autolearn_force=no
X-Spam_action: no action
X-BeenThere: qemu-devel@nongnu.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: <qemu-devel.nongnu.org>
List-Unsubscribe: <https://lists.nongnu.org/mailman/options/qemu-devel>,
 <mailto:qemu-devel-request@nongnu.org?subject=unsubscribe>
List-Archive: <https://lists.nongnu.org/archive/html/qemu-devel>
List-Post: <mailto:qemu-devel@nongnu.org>
List-Help: <mailto:qemu-devel-request@nongnu.org?subject=help>
List-Subscribe: <https://lists.nongnu.org/mailman/listinfo/qemu-devel>,
 <mailto:qemu-devel-request@nongnu.org?subject=subscribe>
Cc: "open list:RISC-V" <qemu-riscv@nongnu.org>,
 Qemu-block <qemu-block@nongnu.org>, Bin Meng <bin.meng@windriver.com>,
 =?UTF-8?Q?Philippe_Mathieu=2DDaud=C3=A9?= <f4bug@amsat.org>,
 "qemu-devel@nongnu.org Developers" <qemu-devel@nongnu.org>,
 Alistair Francis <alistair.francis@wdc.com>
Errors-To: qemu-devel-bounces+lists+qemu-devel=lfdr.de@nongnu.org
Sender: "Qemu-devel" <qemu-devel-bounces+lists+qemu-devel=lfdr.de@nongnu.org>

On Thu, Dec 31, 2020 at 3:38 AM Bin Meng <bmeng.cn@gmail.com> wrote:
>
> From: Bin Meng <bin.meng@windriver.com>
>
> Per the SD spec, a valid data block is suffixed with a 16-bit CRC
> generated by the standard CCITT polynomial x16+x12+x5+1. This part
> is currently missing in the ssi-sd state machine. Without it, all
> data block transfer fails in guest software because the expected
> CRC16 is missing on the data out line.
>
> Fixes: 775616c3ae8c ("Partial SD card SPI mode support")
> Signed-off-by: Bin Meng <bin.meng@windriver.com>

Acked-by: Alistair Francis <alistair.francis@wdc.com>

Alistair

> ---
>
>  hw/sd/ssi-sd.c | 17 +++++++++++++++++
>  1 file changed, 17 insertions(+)
>
> diff --git a/hw/sd/ssi-sd.c b/hw/sd/ssi-sd.c
> index 228ce4ddc7..10b0ac2eaf 100644
> --- a/hw/sd/ssi-sd.c
> +++ b/hw/sd/ssi-sd.c
> @@ -17,6 +17,7 @@
>  #include "hw/qdev-properties.h"
>  #include "hw/sd/sd.h"
>  #include "qapi/error.h"
> +#include "qemu/crc-ccitt.h"
>  #include "qemu/module.h"
>  #include "qom/object.h"
>
> @@ -40,6 +41,7 @@ typedef enum {
>      SSI_SD_RESPONSE,
>      SSI_SD_DATA_START,
>      SSI_SD_DATA_READ,
> +    SSI_SD_DATA_CRC16,
>  } ssi_sd_mode;
>
>  struct ssi_sd_state {
> @@ -48,6 +50,7 @@ struct ssi_sd_state {
>      int cmd;
>      uint8_t cmdarg[4];
>      uint8_t response[5];
> +    uint16_t crc16;
>      int32_t arglen;
>      int32_t response_pos;
>      int32_t stopping;
> @@ -193,12 +196,24 @@ static uint32_t ssi_sd_transfer(SSIPeripheral *dev, uint32_t val)
>      case SSI_SD_DATA_START:
>          DPRINTF("Start read block\n");
>          s->mode = SSI_SD_DATA_READ;
> +        s->response_pos = 0;
>          return 0xfe;
>      case SSI_SD_DATA_READ:
>          val = sdbus_read_byte(&s->sdbus);
> +        s->crc16 = crc_ccitt_false(s->crc16, (uint8_t *)&val, 1);
>          if (!sdbus_data_ready(&s->sdbus)) {
>              DPRINTF("Data read end\n");
> +            s->mode = SSI_SD_DATA_CRC16;
> +        }
> +        return val;
> +    case SSI_SD_DATA_CRC16:
> +        val = (s->crc16 & 0xff00) >> 8;
> +        s->crc16 <<= 8;
> +        s->response_pos++;
> +        if (s->response_pos == 2) {
> +            DPRINTF("CRC16 read end\n");
>              s->mode = SSI_SD_CMD;
> +            s->response_pos = 0;
>          }
>          return val;
>      }
> @@ -236,6 +251,7 @@ static const VMStateDescription vmstate_ssi_sd = {
>          VMSTATE_INT32(cmd, ssi_sd_state),
>          VMSTATE_UINT8_ARRAY(cmdarg, ssi_sd_state, 4),
>          VMSTATE_UINT8_ARRAY(response, ssi_sd_state, 5),
> +        VMSTATE_UINT16(crc16, ssi_sd_state),
>          VMSTATE_INT32(arglen, ssi_sd_state),
>          VMSTATE_INT32(response_pos, ssi_sd_state),
>          VMSTATE_INT32(stopping, ssi_sd_state),
> @@ -287,6 +303,7 @@ static void ssi_sd_reset(DeviceState *dev)
>      s->cmd = 0;
>      memset(s->cmdarg, 0, sizeof(s->cmdarg));
>      memset(s->response, 0, sizeof(s->response));
> +    s->crc16 = 0;
>      s->arglen = 0;
>      s->response_pos = 0;
>      s->stopping = 0;
> --
> 2.25.1
>
>

