Return-Path: <qemu-devel-bounces+lists+qemu-devel=lfdr.de@nongnu.org>
X-Original-To: lists+qemu-devel@lfdr.de
Delivered-To: lists+qemu-devel@lfdr.de
Received: from lists.gnu.org (lists.gnu.org [209.51.188.17])
	by mail.lfdr.de (Postfix) with ESMTPS id 4C20C2FC9CA
	for <lists+qemu-devel@lfdr.de>; Wed, 20 Jan 2021 05:15:55 +0100 (CET)
Received: from localhost ([::1]:51670 helo=lists1p.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.90_1)
	(envelope-from <qemu-devel-bounces+lists+qemu-devel=lfdr.de@nongnu.org>)
	id 1l24uP-00078Z-Rh
	for lists+qemu-devel@lfdr.de; Tue, 19 Jan 2021 23:15:53 -0500
Received: from eggs.gnu.org ([2001:470:142:3::10]:53776)
 by lists.gnu.org with esmtps (TLS1.2:ECDHE_RSA_AES_256_GCM_SHA384:256)
 (Exim 4.90_1) (envelope-from <no-reply@patchew.org>)
 id 1l24sA-0006is-Hv
 for qemu-devel@nongnu.org; Tue, 19 Jan 2021 23:13:34 -0500
Resent-Date: Tue, 19 Jan 2021 23:13:34 -0500
Resent-Message-Id: <E1l24sA-0006is-Hv@lists.gnu.org>
Received: from sender4-of-o53.zoho.com ([136.143.188.53]:21369)
 by eggs.gnu.org with esmtps (TLS1.2:ECDHE_RSA_AES_256_GCM_SHA384:256)
 (Exim 4.90_1) (envelope-from <no-reply@patchew.org>)
 id 1l24s7-0003it-5B
 for qemu-devel@nongnu.org; Tue, 19 Jan 2021 23:13:34 -0500
ARC-Seal: i=1; a=rsa-sha256; t=1611115995; cv=none; 
 d=zohomail.com; s=zohoarc; 
 b=iBoqPDIi3TSrhf04dPANw/3jMs+pYuOmIXKWnljRvmEY0GYBSYsGorqJ18ORfTL5Ih+rODVDest7xyWjkCSg6yoxIRGe1u6m5K1YbmcBNndN6dLfM69KJzRXCww1j5DGEVfubq7QRCtpxbXh09RAJbLl6FBktCtZV/AdZJFvu6s=
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=zohomail.com;
 s=zohoarc; t=1611115995;
 h=Content-Type:Content-Transfer-Encoding:Cc:Date:From:In-Reply-To:MIME-Version:Message-ID:Reply-To:Subject:To;
 bh=Zl5CZ0j9nP2mrMzyuOktYhiNSoK5dpwWoVqik18h/wU=; 
 b=N13rSkAIzShGjhb/+9om2VwzntQXzyCCb6tjEGd6PUJL26hDPhEgIV4X6KCYXWblN5SSNLcn2hXmlp5kLrdSQW13zZYIZ7RD3irwZwRuhD3f0fN59oL/RmgA+IAWCFgnArko2euQt6c6pQZZ7muesmXqym5xmeCReOJNEUBXIxQ=
ARC-Authentication-Results: i=1; mx.zohomail.com;
 spf=pass  smtp.mailfrom=no-reply@patchew.org;
 dmarc=pass header.from=<no-reply@patchew.org>
 header.from=<no-reply@patchew.org>
Received: from [172.17.0.3] (23.253.156.214 [23.253.156.214]) by
 mx.zohomail.com with SMTPS id 1611115994479298.8612419727132;
 Tue, 19 Jan 2021 20:13:14 -0800 (PST)
In-Reply-To: <1611113349-24906-1-git-send-email-tsimpson@quicinc.com>
Subject: Re: [PATCH v7 00/35] Hexagon patch series
Message-ID: <161111599273.30081.16871277422794058214@73fb1a5943b8>
MIME-Version: 1.0
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Resent-From: 
From: no-reply@patchew.org
To: tsimpson@quicinc.com
Date: Tue, 19 Jan 2021 20:13:14 -0800 (PST)
X-ZohoMailClient: External
Received-SPF: pass client-ip=136.143.188.53; envelope-from=no-reply@patchew.org;
 helo=sender4-of-o53.zoho.com
X-Spam_score_int: -18
X-Spam_score: -1.9
X-Spam_bar: -
X-Spam_report: (-1.9 / 5.0 requ) BAYES_00=-1.9, RCVD_IN_DNSWL_NONE=-0.0001,
 RCVD_IN_MSPIKE_H4=0.001, RCVD_IN_MSPIKE_WL=0.001, SPF_HELO_NONE=0.001,
 SPF_PASS=-0.001 autolearn=ham autolearn_force=no
X-Spam_action: no action
X-BeenThere: qemu-devel@nongnu.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: <qemu-devel.nongnu.org>
List-Unsubscribe: <https://lists.nongnu.org/mailman/options/qemu-devel>,
 <mailto:qemu-devel-request@nongnu.org?subject=unsubscribe>
List-Archive: <https://lists.nongnu.org/archive/html/qemu-devel>
List-Post: <mailto:qemu-devel@nongnu.org>
List-Help: <mailto:qemu-devel-request@nongnu.org?subject=help>
List-Subscribe: <https://lists.nongnu.org/mailman/listinfo/qemu-devel>,
 <mailto:qemu-devel-request@nongnu.org?subject=subscribe>
Reply-To: qemu-devel@nongnu.org
Cc: ale@rev.ng, bcain@quicinc.com, alex.bennee@linaro.org,
 richard.henderson@linaro.org, qemu-devel@nongnu.org, laurent@vivier.eu,
 tsimpson@quicinc.com, philmd@redhat.com
Errors-To: qemu-devel-bounces+lists+qemu-devel=lfdr.de@nongnu.org
Sender: "Qemu-devel" <qemu-devel-bounces+lists+qemu-devel=lfdr.de@nongnu.org>

UGF0Y2hldyBVUkw6IGh0dHBzOi8vcGF0Y2hldy5vcmcvUUVNVS8xNjExMTEzMzQ5LTI0OTA2LTEt
Z2l0LXNlbmQtZW1haWwtdHNpbXBzb25AcXVpY2luYy5jb20vCgoKCkhpLAoKVGhpcyBzZXJpZXMg
c2VlbXMgdG8gaGF2ZSBzb21lIGNvZGluZyBzdHlsZSBwcm9ibGVtcy4gU2VlIG91dHB1dCBiZWxv
dyBmb3IKbW9yZSBpbmZvcm1hdGlvbjoKClR5cGU6IHNlcmllcwpNZXNzYWdlLWlkOiAxNjExMTEz
MzQ5LTI0OTA2LTEtZ2l0LXNlbmQtZW1haWwtdHNpbXBzb25AcXVpY2luYy5jb20KU3ViamVjdDog
W1BBVENIIHY3IDAwLzM1XSBIZXhhZ29uIHBhdGNoIHNlcmllcwoKPT09IFRFU1QgU0NSSVBUIEJF
R0lOID09PQojIS9iaW4vYmFzaApnaXQgcmV2LXBhcnNlIGJhc2UgPiAvZGV2L251bGwgfHwgZXhp
dCAwCmdpdCBjb25maWcgLS1sb2NhbCBkaWZmLnJlbmFtZWxpbWl0IDAKZ2l0IGNvbmZpZyAtLWxv
Y2FsIGRpZmYucmVuYW1lcyBUcnVlCmdpdCBjb25maWcgLS1sb2NhbCBkaWZmLmFsZ29yaXRobSBo
aXN0b2dyYW0KLi9zY3JpcHRzL2NoZWNrcGF0Y2gucGwgLS1tYWlsYmFjayBiYXNlLi4KPT09IFRF
U1QgU0NSSVBUIEVORCA9PT0KClVwZGF0aW5nIDNjOGNmNWE5YzIxZmY4NzgyMTY0ZDFkZWY3ZjQ0
YmQ4ODg3MTMzODQKRnJvbSBodHRwczovL2dpdGh1Yi5jb20vcGF0Y2hldy1wcm9qZWN0L3FlbXUK
ICogW25ldyB0YWddICAgICAgICAgcGF0Y2hldy8xNjExMTEzMzQ5LTI0OTA2LTEtZ2l0LXNlbmQt
ZW1haWwtdHNpbXBzb25AcXVpY2luYy5jb20gLT4gcGF0Y2hldy8xNjExMTEzMzQ5LTI0OTA2LTEt
Z2l0LXNlbmQtZW1haWwtdHNpbXBzb25AcXVpY2luYy5jb20KU3dpdGNoZWQgdG8gYSBuZXcgYnJh
bmNoICd0ZXN0JwpjMzM1NzAyIEFkZCBEb2NrZXJmaWxlIGZvciBoZXhhZ29uCjg2NjFiMGIgSGV4
YWdvbiBidWlsZCBpbmZyYXN0cnVjdHVyZQpjY2I5Mjg5IEhleGFnb24gKHRlc3RzL3RjZy9oZXhh
Z29uKSBUQ0cgdGVzdHMgLSBmbG9hdGluZyBwb2ludAo1OWE0YWEyIEhleGFnb24gKHRlc3RzL3Rj
Zy9oZXhhZ29uKSBUQ0cgdGVzdHMgLSBhdG9taWNzL2xvYWQvc3RvcmUvbWlzYwpkZjQxYjUxIEhl
eGFnb24gKHRlc3RzL3RjZy9oZXhhZ29uKSBUQ0cgdGVzdHMgLSBtdWx0aWFyY2gKMjRlNGE5YiBI
ZXhhZ29uIChsaW51eC11c2VyL2hleGFnb24pIExpbnV4IHVzZXIgZW11bGF0aW9uCmJhNTNhZWYg
SGV4YWdvbiAodGFyZ2V0L2hleGFnb24pIHRyYW5zbGF0aW9uCmQ3MzkwM2IgSGV4YWdvbiAodGFy
Z2V0L2hleGFnb24pIFRDRyBmb3IgZmxvYXRpbmcgcG9pbnQgaW5zdHJ1Y3Rpb25zCmUxYjg3MWUg
SGV4YWdvbiAodGFyZ2V0L2hleGFnb24pIFRDRyBmb3IgaW5zdHJ1Y3Rpb25zIHdpdGggbXVsdGlw
bGUgZGVmaW5pdGlvbnMKNzg1YWIwNyBIZXhhZ29uICh0YXJnZXQvaGV4YWdvbikgVENHIGdlbmVy
YXRpb24KZTJhNmJkMyBIZXhhZ29uICh0YXJnZXQvaGV4YWdvbikgaW5zdHJ1Y3Rpb24gY2xhc3Nl
cwpmN2NhZWEzIEhleGFnb24gKHRhcmdldC9oZXhhZ29uKSBtYWNyb3MKMzYwMjg3NSBIZXhhZ29u
ICh0YXJnZXQvaGV4YWdvbikgb3Bjb2RlIGRhdGEgc3RydWN0dXJlcwowYWZmMGE1IEhleGFnb24g
KHRhcmdldC9oZXhhZ29uKSBnZW5lcmF0ZXIgcGhhc2UgNCAtIGRlY29kZSB0cmVlCjhjZTYxNTIg
SGV4YWdvbiAodGFyZ2V0L2hleGFnb24pIGdlbmVyYXRvciBwaGFzZSAzIC0gQyBwcmVwcm9jZXNz
b3IgZm9yIGRlY29kZSB0cmVlCjUyODI2MDIgSGV4YWdvbiAodGFyZ2V0L2hleGFnb24pIGdlbmVy
YXRvciBwaGFzZSAyIC0gZ2VuZXJhdGUgaGVhZGVyIGZpbGVzCmRkYjFhYjYgSGV4YWdvbiAodGFy
Z2V0L2hleGFnb24pIGdlbmVyYXRvciBwaGFzZSAxIC0gQyBwcmVwcm9jZXNzb3IgZm9yIHNlbWFu
dGljcwpjZWMwM2FlIEhleGFnb24gKHRhcmdldC9oZXhhZ29uL2ltcG9ydGVkKSBhcmNoIGltcG9y
dAowYTM5NGRhIEhleGFnb24gKHRhcmdldC9oZXhhZ29uL2ZtYV9lbXUuW2NoXSkgdXRpbGl0eSBm
dW5jdGlvbnMKYTUyYTExNSBIZXhhZ29uICh0YXJnZXQvaGV4YWdvbi9jb252X2VtdS5bY2hdKSB1
dGlsaXR5IGZ1bmN0aW9ucwplYTU2NjdkIEhleGFnb24gKHRhcmdldC9oZXhhZ29uL2FyY2guW2No
XSkgdXRpbGl0eSBmdW5jdGlvbnMKZDkwNzFjMiBIZXhhZ29uICh0YXJnZXQvaGV4YWdvbikgaW5z
dHJ1Y3Rpb24gcHJpbnRpbmcKZmVkYWE1MSBIZXhhZ29uICh0YXJnZXQvaGV4YWdvbikgaW5zdHJ1
Y3Rpb24vcGFja2V0IGRlY29kZQowZWViMjRhIEhleGFnb24gKHRhcmdldC9oZXhhZ29uKSBpbnN0
cnVjdGlvbiBhdHRyaWJ1dGVzCjEzMmFjMzYgSGV4YWdvbiAodGFyZ2V0L2hleGFnb24pIHJlZ2lz
dGVyIGZpZWxkcwpkNGRkMzZiIEhleGFnb24gKHRhcmdldC9oZXhhZ29uKSBpbnN0cnVjdGlvbiBh
bmQgcGFja2V0IHR5cGVzCjAzNDlmMjAgSGV4YWdvbiAodGFyZ2V0L2hleGFnb24pIGFyY2hpdGVj
dHVyZSB0eXBlcwowOWU1NjJlIEhleGFnb24gKHRhcmdldC9oZXhhZ29uKSBHREIgU3R1YgphNmM0
ZGE3IEhleGFnb24gKHRhcmdldC9oZXhhZ29uKSBzY2FsYXIgY29yZSBoZWxwZXJzCmFjZWE5M2Qg
SGV4YWdvbiAodGFyZ2V0L2hleGFnb24pIHJlZ2lzdGVyIG5hbWVzCmU3YWQ4MzMgSGV4YWdvbiAo
ZGlzYXMpIGRpc2Fzc2VtYmxlcgo0OTljMzIzIEhleGFnb24gKHRhcmdldC9oZXhhZ29uKSBzY2Fs
YXIgY29yZSBkZWZpbml0aW9uCjAzYTYwODAgSGV4YWdvbiAoaW5jbHVkZS9lbGYuaCkgRUxGIG1h
Y2hpbmUgZGVmaW5pdGlvbgoxMTliMTg0IEhleGFnb24gKHRhcmdldC9oZXhhZ29uKSBSRUFETUUK
NDFiMmNjNCBIZXhhZ29uIFVwZGF0ZSBNQUlOVEFJTkVSUyBmaWxlCgo9PT0gT1VUUFVUIEJFR0lO
ID09PQoxLzM1IENoZWNraW5nIGNvbW1pdCA0MWIyY2M0NmJkZGQgKEhleGFnb24gVXBkYXRlIE1B
SU5UQUlORVJTIGZpbGUpCjIvMzUgQ2hlY2tpbmcgY29tbWl0IDExOWIxODQ5MTliMCAoSGV4YWdv
biAodGFyZ2V0L2hleGFnb24pIFJFQURNRSkKV0FSTklORzogYWRkZWQsIG1vdmVkIG9yIGRlbGV0
ZWQgZmlsZShzKSwgZG9lcyBNQUlOVEFJTkVSUyBuZWVkIHVwZGF0aW5nPwojMTY6IApuZXcgZmls
ZSBtb2RlIDEwMDY0NAoKdG90YWw6IDAgZXJyb3JzLCAxIHdhcm5pbmdzLCAyMzUgbGluZXMgY2hl
Y2tlZAoKUGF0Y2ggMi8zNSBoYXMgc3R5bGUgcHJvYmxlbXMsIHBsZWFzZSByZXZpZXcuICBJZiBh
bnkgb2YgdGhlc2UgZXJyb3JzCmFyZSBmYWxzZSBwb3NpdGl2ZXMgcmVwb3J0IHRoZW0gdG8gdGhl
IG1haW50YWluZXIsIHNlZQpDSEVDS1BBVENIIGluIE1BSU5UQUlORVJTLgozLzM1IENoZWNraW5n
IGNvbW1pdCAwM2E2MDgwYTA4N2QgKEhleGFnb24gKGluY2x1ZGUvZWxmLmgpIEVMRiBtYWNoaW5l
IGRlZmluaXRpb24pCjQvMzUgQ2hlY2tpbmcgY29tbWl0IDQ5OWMzMjMzMDA0MyAoSGV4YWdvbiAo
dGFyZ2V0L2hleGFnb24pIHNjYWxhciBjb3JlIGRlZmluaXRpb24pCldBUk5JTkc6IGFkZGVkLCBt
b3ZlZCBvciBkZWxldGVkIGZpbGUocyksIGRvZXMgTUFJTlRBSU5FUlMgbmVlZCB1cGRhdGluZz8K
IzIwOiAKbmV3IGZpbGUgbW9kZSAxMDA2NDQKCnRvdGFsOiAwIGVycm9ycywgMSB3YXJuaW5ncywg
NTk1IGxpbmVzIGNoZWNrZWQKClBhdGNoIDQvMzUgaGFzIHN0eWxlIHByb2JsZW1zLCBwbGVhc2Ug
cmV2aWV3LiAgSWYgYW55IG9mIHRoZXNlIGVycm9ycwphcmUgZmFsc2UgcG9zaXRpdmVzIHJlcG9y
dCB0aGVtIHRvIHRoZSBtYWludGFpbmVyLCBzZWUKQ0hFQ0tQQVRDSCBpbiBNQUlOVEFJTkVSUy4K
NS8zNSBDaGVja2luZyBjb21taXQgZTdhZDgzM2UxYWUzIChIZXhhZ29uIChkaXNhcykgZGlzYXNz
ZW1ibGVyKQpXQVJOSU5HOiBhZGRlZCwgbW92ZWQgb3IgZGVsZXRlZCBmaWxlKHMpLCBkb2VzIE1B
SU5UQUlORVJTIG5lZWQgdXBkYXRpbmc/CiMyMjogCm5ldyBmaWxlIG1vZGUgMTAwNjQ0Cgp0b3Rh
bDogMCBlcnJvcnMsIDEgd2FybmluZ3MsIDc5IGxpbmVzIGNoZWNrZWQKClBhdGNoIDUvMzUgaGFz
IHN0eWxlIHByb2JsZW1zLCBwbGVhc2UgcmV2aWV3LiAgSWYgYW55IG9mIHRoZXNlIGVycm9ycwph
cmUgZmFsc2UgcG9zaXRpdmVzIHJlcG9ydCB0aGVtIHRvIHRoZSBtYWludGFpbmVyLCBzZWUKQ0hF
Q0tQQVRDSCBpbiBNQUlOVEFJTkVSUy4KNi8zNSBDaGVja2luZyBjb21taXQgYWNlYTkzZGU0Njcz
IChIZXhhZ29uICh0YXJnZXQvaGV4YWdvbikgcmVnaXN0ZXIgbmFtZXMpCldBUk5JTkc6IGFkZGVk
LCBtb3ZlZCBvciBkZWxldGVkIGZpbGUocyksIGRvZXMgTUFJTlRBSU5FUlMgbmVlZCB1cGRhdGlu
Zz8KIzE1OiAKbmV3IGZpbGUgbW9kZSAxMDA2NDQKCnRvdGFsOiAwIGVycm9ycywgMSB3YXJuaW5n
cywgODMgbGluZXMgY2hlY2tlZAoKUGF0Y2ggNi8zNSBoYXMgc3R5bGUgcHJvYmxlbXMsIHBsZWFz
ZSByZXZpZXcuICBJZiBhbnkgb2YgdGhlc2UgZXJyb3JzCmFyZSBmYWxzZSBwb3NpdGl2ZXMgcmVw
b3J0IHRoZW0gdG8gdGhlIG1haW50YWluZXIsIHNlZQpDSEVDS1BBVENIIGluIE1BSU5UQUlORVJT
Lgo3LzM1IENoZWNraW5nIGNvbW1pdCBhNmM0ZGE3NTg5NjYgKEhleGFnb24gKHRhcmdldC9oZXhh
Z29uKSBzY2FsYXIgY29yZSBoZWxwZXJzKQpXQVJOSU5HOiBhZGRlZCwgbW92ZWQgb3IgZGVsZXRl
ZCBmaWxlKHMpLCBkb2VzIE1BSU5UQUlORVJTIG5lZWQgdXBkYXRpbmc/CiMxODogCm5ldyBmaWxl
IG1vZGUgMTAwNjQ0Cgp0b3RhbDogMCBlcnJvcnMsIDEgd2FybmluZ3MsIDExNTEgbGluZXMgY2hl
Y2tlZAoKUGF0Y2ggNy8zNSBoYXMgc3R5bGUgcHJvYmxlbXMsIHBsZWFzZSByZXZpZXcuICBJZiBh
bnkgb2YgdGhlc2UgZXJyb3JzCmFyZSBmYWxzZSBwb3NpdGl2ZXMgcmVwb3J0IHRoZW0gdG8gdGhl
IG1haW50YWluZXIsIHNlZQpDSEVDS1BBVENIIGluIE1BSU5UQUlORVJTLgo4LzM1IENoZWNraW5n
IGNvbW1pdCAwOWU1NjJlNmVhM2YgKEhleGFnb24gKHRhcmdldC9oZXhhZ29uKSBHREIgU3R1YikK
V0FSTklORzogYWRkZWQsIG1vdmVkIG9yIGRlbGV0ZWQgZmlsZShzKSwgZG9lcyBNQUlOVEFJTkVS
UyBuZWVkIHVwZGF0aW5nPwojMzM6IApuZXcgZmlsZSBtb2RlIDEwMDY0NAoKdG90YWw6IDAgZXJy
b3JzLCAxIHdhcm5pbmdzLCA2NCBsaW5lcyBjaGVja2VkCgpQYXRjaCA4LzM1IGhhcyBzdHlsZSBw
cm9ibGVtcywgcGxlYXNlIHJldmlldy4gIElmIGFueSBvZiB0aGVzZSBlcnJvcnMKYXJlIGZhbHNl
IHBvc2l0aXZlcyByZXBvcnQgdGhlbSB0byB0aGUgbWFpbnRhaW5lciwgc2VlCkNIRUNLUEFUQ0gg
aW4gTUFJTlRBSU5FUlMuCjkvMzUgQ2hlY2tpbmcgY29tbWl0IDAzNDlmMjBhOGQ1NiAoSGV4YWdv
biAodGFyZ2V0L2hleGFnb24pIGFyY2hpdGVjdHVyZSB0eXBlcykKV0FSTklORzogYWRkZWQsIG1v
dmVkIG9yIGRlbGV0ZWQgZmlsZShzKSwgZG9lcyBNQUlOVEFJTkVSUyBuZWVkIHVwZGF0aW5nPwoj
MTY6IApuZXcgZmlsZSBtb2RlIDEwMDY0NAoKdG90YWw6IDAgZXJyb3JzLCAxIHdhcm5pbmdzLCAz
OCBsaW5lcyBjaGVja2VkCgpQYXRjaCA5LzM1IGhhcyBzdHlsZSBwcm9ibGVtcywgcGxlYXNlIHJl
dmlldy4gIElmIGFueSBvZiB0aGVzZSBlcnJvcnMKYXJlIGZhbHNlIHBvc2l0aXZlcyByZXBvcnQg
dGhlbSB0byB0aGUgbWFpbnRhaW5lciwgc2VlCkNIRUNLUEFUQ0ggaW4gTUFJTlRBSU5FUlMuCjEw
LzM1IENoZWNraW5nIGNvbW1pdCBkNGRkMzZiMzM3ODUgKEhleGFnb24gKHRhcmdldC9oZXhhZ29u
KSBpbnN0cnVjdGlvbiBhbmQgcGFja2V0IHR5cGVzKQpXQVJOSU5HOiBhZGRlZCwgbW92ZWQgb3Ig
ZGVsZXRlZCBmaWxlKHMpLCBkb2VzIE1BSU5UQUlORVJTIG5lZWQgdXBkYXRpbmc/CiMxNzogCm5l
dyBmaWxlIG1vZGUgMTAwNjQ0Cgp0b3RhbDogMCBlcnJvcnMsIDEgd2FybmluZ3MsIDc0IGxpbmVz
IGNoZWNrZWQKClBhdGNoIDEwLzM1IGhhcyBzdHlsZSBwcm9ibGVtcywgcGxlYXNlIHJldmlldy4g
IElmIGFueSBvZiB0aGVzZSBlcnJvcnMKYXJlIGZhbHNlIHBvc2l0aXZlcyByZXBvcnQgdGhlbSB0
byB0aGUgbWFpbnRhaW5lciwgc2VlCkNIRUNLUEFUQ0ggaW4gTUFJTlRBSU5FUlMuCjExLzM1IENo
ZWNraW5nIGNvbW1pdCAxMzJhYzM2Mjg4ZTMgKEhleGFnb24gKHRhcmdldC9oZXhhZ29uKSByZWdp
c3RlciBmaWVsZHMpCldBUk5JTkc6IGFkZGVkLCBtb3ZlZCBvciBkZWxldGVkIGZpbGUocyksIGRv
ZXMgTUFJTlRBSU5FUlMgbmVlZCB1cGRhdGluZz8KIzE4OiAKbmV3IGZpbGUgbW9kZSAxMDA2NDQK
CkVSUk9SOiBNYWNyb3Mgd2l0aCBjb21wbGV4IHZhbHVlcyBzaG91bGQgYmUgZW5jbG9zZWQgaW4g
cGFyZW50aGVzaXMKIzg0OiBGSUxFOiB0YXJnZXQvaGV4YWdvbi9yZWdfZmllbGRzLmg6Mjk6Cisj
ZGVmaW5lIERFRl9SRUdfRklFTEQoVEFHLCBTVEFSVCwgV0lEVEgpIFwKKyAgICBUQUcsCgp0b3Rh
bDogMSBlcnJvcnMsIDEgd2FybmluZ3MsIDEwNCBsaW5lcyBjaGVja2VkCgpQYXRjaCAxMS8zNSBo
YXMgc3R5bGUgcHJvYmxlbXMsIHBsZWFzZSByZXZpZXcuICBJZiBhbnkgb2YgdGhlc2UgZXJyb3Jz
CmFyZSBmYWxzZSBwb3NpdGl2ZXMgcmVwb3J0IHRoZW0gdG8gdGhlIG1haW50YWluZXIsIHNlZQpD
SEVDS1BBVENIIGluIE1BSU5UQUlORVJTLgoKMTIvMzUgQ2hlY2tpbmcgY29tbWl0IDBlZWIyNGE3
NjI5OSAoSGV4YWdvbiAodGFyZ2V0L2hleGFnb24pIGluc3RydWN0aW9uIGF0dHJpYnV0ZXMpCldB
Uk5JTkc6IGFkZGVkLCBtb3ZlZCBvciBkZWxldGVkIGZpbGUocyksIGRvZXMgTUFJTlRBSU5FUlMg
bmVlZCB1cGRhdGluZz8KIzE1OiAKbmV3IGZpbGUgbW9kZSAxMDA2NDQKCkVSUk9SOiBNYWNyb3Mg
d2l0aCBjb21wbGV4IHZhbHVlcyBzaG91bGQgYmUgZW5jbG9zZWQgaW4gcGFyZW50aGVzaXMKIzQx
OiBGSUxFOiB0YXJnZXQvaGV4YWdvbi9hdHRyaWJzLmg6MjI6CisjZGVmaW5lIERFRl9BVFRSSUIo
TkFNRSwgLi4uKSBBXyMjTkFNRSwKCnRvdGFsOiAxIGVycm9ycywgMSB3YXJuaW5ncywgMTI1IGxp
bmVzIGNoZWNrZWQKClBhdGNoIDEyLzM1IGhhcyBzdHlsZSBwcm9ibGVtcywgcGxlYXNlIHJldmll
dy4gIElmIGFueSBvZiB0aGVzZSBlcnJvcnMKYXJlIGZhbHNlIHBvc2l0aXZlcyByZXBvcnQgdGhl
bSB0byB0aGUgbWFpbnRhaW5lciwgc2VlCkNIRUNLUEFUQ0ggaW4gTUFJTlRBSU5FUlMuCgoxMy8z
NSBDaGVja2luZyBjb21taXQgZmVkYWE1MTg0YTY0IChIZXhhZ29uICh0YXJnZXQvaGV4YWdvbikg
aW5zdHJ1Y3Rpb24vcGFja2V0IGRlY29kZSkKV0FSTklORzogYWRkZWQsIG1vdmVkIG9yIGRlbGV0
ZWQgZmlsZShzKSwgZG9lcyBNQUlOVEFJTkVSUyBuZWVkIHVwZGF0aW5nPwojMjc6IApuZXcgZmls
ZSBtb2RlIDEwMDY0NAoKRVJST1I6IE1hY3JvcyB3aXRoIGNvbXBsZXggdmFsdWVzIHNob3VsZCBi
ZSBlbmNsb3NlZCBpbiBwYXJlbnRoZXNpcwojMTMyOiBGSUxFOiB0YXJnZXQvaGV4YWdvbi9kZWNv
ZGUuYzoxMDE6CisjZGVmaW5lIERFQ09ERV9TRVBBUkFUT1JfQklUUyhTVEFSVCwgV0lEVEgpIE5V
TEwsIFNUQVJULCBXSURUSAoKRVJST1I6IE1hY3JvcyB3aXRoIG11bHRpcGxlIHN0YXRlbWVudHMg
c2hvdWxkIGJlIGVuY2xvc2VkIGluIGEgZG8gLSB3aGlsZSBsb29wCiM3MTQ6IEZJTEU6IHRhcmdl
dC9oZXhhZ29uL3E2dl9kZWNvZGUuYzo1MToKKyNkZWZpbmUgREVDT0RFX09QSU5GTyhUQUcsIEJF
SCkgXAorICAgIGNhc2UgVEFHOiBcCisgICAgICAgIHsgQkVIICB9IFwKKyAgICAgICAgYnJlYWs7
IFwKKwoKdG90YWw6IDIgZXJyb3JzLCAxIHdhcm5pbmdzLCAxMDA1IGxpbmVzIGNoZWNrZWQKClBh
dGNoIDEzLzM1IGhhcyBzdHlsZSBwcm9ibGVtcywgcGxlYXNlIHJldmlldy4gIElmIGFueSBvZiB0
aGVzZSBlcnJvcnMKYXJlIGZhbHNlIHBvc2l0aXZlcyByZXBvcnQgdGhlbSB0byB0aGUgbWFpbnRh
aW5lciwgc2VlCkNIRUNLUEFUQ0ggaW4gTUFJTlRBSU5FUlMuCgoxNC8zNSBDaGVja2luZyBjb21t
aXQgZDkwNzFjMjMxOWNiIChIZXhhZ29uICh0YXJnZXQvaGV4YWdvbikgaW5zdHJ1Y3Rpb24gcHJp
bnRpbmcpCldBUk5JTkc6IGFkZGVkLCBtb3ZlZCBvciBkZWxldGVkIGZpbGUocyksIGRvZXMgTUFJ
TlRBSU5FUlMgbmVlZCB1cGRhdGluZz8KIzE2OiAKbmV3IGZpbGUgbW9kZSAxMDA2NDQKCkVSUk9S
OiBNYWNyb3Mgd2l0aCBtdWx0aXBsZSBzdGF0ZW1lbnRzIHNob3VsZCBiZSBlbmNsb3NlZCBpbiBh
IGRvIC0gd2hpbGUgbG9vcAojNjM6IEZJTEU6IHRhcmdldC9oZXhhZ29uL3ByaW50aW5zbi5jOjQz
OgorI2RlZmluZSBERUZfUFJJTlRJTkZPKFRBRywgRk1ULCAuLi4pIFwKKyAgICBjYXNlIFRBRzog
XAorICAgICAgICBnX3N0cmluZ19hcHBlbmRfcHJpbnRmKGJ1ZiwgRk1ULCBfX1ZBX0FSR1NfXyk7
IFwKKyAgICAgICAgYnJlYWs7Cgp0b3RhbDogMSBlcnJvcnMsIDEgd2FybmluZ3MsIDE3NCBsaW5l
cyBjaGVja2VkCgpQYXRjaCAxNC8zNSBoYXMgc3R5bGUgcHJvYmxlbXMsIHBsZWFzZSByZXZpZXcu
ICBJZiBhbnkgb2YgdGhlc2UgZXJyb3JzCmFyZSBmYWxzZSBwb3NpdGl2ZXMgcmVwb3J0IHRoZW0g
dG8gdGhlIG1haW50YWluZXIsIHNlZQpDSEVDS1BBVENIIGluIE1BSU5UQUlORVJTLgoKMTUvMzUg
Q2hlY2tpbmcgY29tbWl0IGVhNTY2N2RhNTcxMSAoSGV4YWdvbiAodGFyZ2V0L2hleGFnb24vYXJj
aC5bY2hdKSB1dGlsaXR5IGZ1bmN0aW9ucykKV0FSTklORzogYWRkZWQsIG1vdmVkIG9yIGRlbGV0
ZWQgZmlsZShzKSwgZG9lcyBNQUlOVEFJTkVSUyBuZWVkIHVwZGF0aW5nPwojMTU6IApuZXcgZmls
ZSBtb2RlIDEwMDY0NAoKdG90YWw6IDAgZXJyb3JzLCAxIHdhcm5pbmdzLCAzMjkgbGluZXMgY2hl
Y2tlZAoKUGF0Y2ggMTUvMzUgaGFzIHN0eWxlIHByb2JsZW1zLCBwbGVhc2UgcmV2aWV3LiAgSWYg
YW55IG9mIHRoZXNlIGVycm9ycwphcmUgZmFsc2UgcG9zaXRpdmVzIHJlcG9ydCB0aGVtIHRvIHRo
ZSBtYWludGFpbmVyLCBzZWUKQ0hFQ0tQQVRDSCBpbiBNQUlOVEFJTkVSUy4KMTYvMzUgQ2hlY2tp
bmcgY29tbWl0IGE1MmExMTU4YTc1NSAoSGV4YWdvbiAodGFyZ2V0L2hleGFnb24vY29udl9lbXUu
W2NoXSkgdXRpbGl0eSBmdW5jdGlvbnMpCldBUk5JTkc6IGFkZGVkLCBtb3ZlZCBvciBkZWxldGVk
IGZpbGUocyksIGRvZXMgTUFJTlRBSU5FUlMgbmVlZCB1cGRhdGluZz8KIzE1OiAKbmV3IGZpbGUg
bW9kZSAxMDA2NDQKCnRvdGFsOiAwIGVycm9ycywgMSB3YXJuaW5ncywgMjA4IGxpbmVzIGNoZWNr
ZWQKClBhdGNoIDE2LzM1IGhhcyBzdHlsZSBwcm9ibGVtcywgcGxlYXNlIHJldmlldy4gIElmIGFu
eSBvZiB0aGVzZSBlcnJvcnMKYXJlIGZhbHNlIHBvc2l0aXZlcyByZXBvcnQgdGhlbSB0byB0aGUg
bWFpbnRhaW5lciwgc2VlCkNIRUNLUEFUQ0ggaW4gTUFJTlRBSU5FUlMuCjE3LzM1IENoZWNraW5n
IGNvbW1pdCAwYTM5NGRhM2QwNmQgKEhleGFnb24gKHRhcmdldC9oZXhhZ29uL2ZtYV9lbXUuW2No
XSkgdXRpbGl0eSBmdW5jdGlvbnMpCldBUk5JTkc6IGFkZGVkLCBtb3ZlZCBvciBkZWxldGVkIGZp
bGUocyksIGRvZXMgTUFJTlRBSU5FUlMgbmVlZCB1cGRhdGluZz8KIzE1OiAKbmV3IGZpbGUgbW9k
ZSAxMDA2NDQKCkVSUk9SOiAiZm9vICogYmFyIiBzaG91bGQgYmUgImZvbyAqYmFyIgojNDExOiBG
SUxFOiB0YXJnZXQvaGV4YWdvbi9mbWFfZW11LmM6MzkyOgorc3RhdGljIGlubGluZSBTVUZGSVgg
YWNjdW1fcm91bmRfIyNTVUZGSVgoQWNjdW0gYSwgZmxvYXRfc3RhdHVzICogZnBfc3RhdHVzKSBc
CgpXQVJOSU5HOiBCbG9jayBjb21tZW50cyB1c2UgYSBsZWFkaW5nIC8qIG9uIGEgc2VwYXJhdGUg
bGluZQojNDE1OiBGSUxFOiB0YXJnZXQvaGV4YWdvbi9mbWFfZW11LmM6Mzk2OgorICAgICAgICAv
KiByZXN1bHQgemVybyAqLyBcCgpXQVJOSU5HOiBCbG9jayBjb21tZW50cyB1c2UgYSBsZWFkaW5n
IC8qIG9uIGEgc2VwYXJhdGUgbGluZQojNDIzOiBGSUxFOiB0YXJnZXQvaGV4YWdvbi9mbWFfZW11
LmM6NDA0OgorICAgIC8qIE5vcm1hbGl6ZSByaWdodCAqLyBcCgpXQVJOSU5HOiBCbG9jayBjb21t
ZW50cyB1c2UgYSBsZWFkaW5nIC8qIG9uIGEgc2VwYXJhdGUgbGluZQojNDI0OiBGSUxFOiB0YXJn
ZXQvaGV4YWdvbi9mbWFfZW11LmM6NDA1OgorICAgIC8qIFdlIHdhbnQgTUFOVEJJVFMgYml0cyBv
ZiBtYW50aXNzYSBwbHVzIHRoZSBsZWFkaW5nIG9uZS4gKi8gXAoKV0FSTklORzogQmxvY2sgY29t
bWVudHMgdXNlIGEgbGVhZGluZyAvKiBvbiBhIHNlcGFyYXRlIGxpbmUKIzQyNTogRklMRTogdGFy
Z2V0L2hleGFnb24vZm1hX2VtdS5jOjQwNjoKKyAgICAvKiBUaGF0IG1lYW5zIHRoYXQgd2Ugd2Fu
dCBNQU5UQklUUysxIGJpdHMsIG9yIDB4MDAwMDAwMDAwMDAwRkZfRkZGRiAqLyBcCgpXQVJOSU5H
OiBCbG9jayBjb21tZW50cyB1c2UgYSBsZWFkaW5nIC8qIG9uIGEgc2VwYXJhdGUgbGluZQojNDI2
OiBGSUxFOiB0YXJnZXQvaGV4YWdvbi9mbWFfZW11LmM6NDA3OgorICAgIC8qIFNvIHdlIG5lZWQg
dG8gbm9ybWFsaXplIHJpZ2h0IHdoaWxlIHRoZSBoaWdoIHdvcmQgaXMgbm9uLXplcm8gYW5kIFwK
CldBUk5JTkc6IEJsb2NrIGNvbW1lbnRzIHNob3VsZCBhbGlnbiB0aGUgKiBvbiBlYWNoIGxpbmUK
IzQyNzogRklMRTogdGFyZ2V0L2hleGFnb24vZm1hX2VtdS5jOjQwODoKKyAgICAvKiBTbyB3ZSBu
ZWVkIHRvIG5vcm1hbGl6ZSByaWdodCB3aGlsZSB0aGUgaGlnaCB3b3JkIGlzIG5vbi16ZXJvIGFu
ZCBcCisgICAgKiB3aGlsZSB0aGUgbG93IHdvcmQgaXMgbm9uemVybyB3aGVuIG1hc2tlZCB3aXRo
IDB4ZmZlMF8wMDAwXzAwMDBfMDAwMCAqLyBcCgpXQVJOSU5HOiBCbG9jayBjb21tZW50cyB1c2Ug
YSBsZWFkaW5nIC8qIG9uIGEgc2VwYXJhdGUgbGluZQojNDMyOiBGSUxFOiB0YXJnZXQvaGV4YWdv
bi9mbWFfZW11LmM6NDEzOgorICAgIC8qIFwKCldBUk5JTkc6IEJsb2NrIGNvbW1lbnRzIHVzZSBh
IGxlYWRpbmcgLyogb24gYSBzZXBhcmF0ZSBsaW5lCiM0NDI6IEZJTEU6IHRhcmdldC9oZXhhZ29u
L2ZtYV9lbXUuYzo0MjM6CisgICAgLyogXAoKV0FSTklORzogQmxvY2sgY29tbWVudHMgdXNlIGEg
bGVhZGluZyAvKiBvbiBhIHNlcGFyYXRlIGxpbmUKIzQ0OTogRklMRTogdGFyZ2V0L2hleGFnb24v
Zm1hX2VtdS5jOjQzMDoKKyAgICAgICAgLyogXAoKV0FSTklORzogQmxvY2sgY29tbWVudHMgdXNl
IGEgbGVhZGluZyAvKiBvbiBhIHNlcGFyYXRlIGxpbmUKIzQ1ODogRklMRTogdGFyZ2V0L2hleGFn
b24vZm1hX2VtdS5jOjQzOToKKyAgICAvKiBPSywgd2UncmUgcmVsYXRpdmVseSBjYW5vbmljYWwu
Li4gbm93IHdlIG5lZWQgdG8gcm91bmQgKi8gXAoKV0FSTklORzogQmxvY2sgY29tbWVudHMgdXNl
IGEgbGVhZGluZyAvKiBvbiBhIHNlcGFyYXRlIGxpbmUKIzQ2MzogRklMRTogdGFyZ2V0L2hleGFn
b24vZm1hX2VtdS5jOjQ0NDoKKyAgICAgICAgICAgIC8qIENob3AgYW5kIHdlJ3JlIGRvbmUgKi8g
XAoKV0FSTklORzogQmxvY2sgY29tbWVudHMgdXNlIGEgbGVhZGluZyAvKiBvbiBhIHNlcGFyYXRl
IGxpbmUKIzQ3NzogRklMRTogdGFyZ2V0L2hleGFnb24vZm1hX2VtdS5jOjQ1ODoKKyAgICAgICAg
ICAgICAgICAvKiByb3VuZCB1cCBpZiBndWFyZCBpcyAxLCBkb3duIGlmIGd1YXJkIGlzIHplcm8g
Ki8gXAoKV0FSTklORzogQmxvY2sgY29tbWVudHMgdXNlIGEgbGVhZGluZyAvKiBvbiBhIHNlcGFy
YXRlIGxpbmUKIzQ4MDogRklMRTogdGFyZ2V0L2hleGFnb24vZm1hX2VtdS5jOjQ2MToKKyAgICAg
ICAgICAgICAgICAvKiBleGFjdGx5IC41LCByb3VuZCB1cCBpZiBvZGQgKi8gXAoKV0FSTklORzog
QmxvY2sgY29tbWVudHMgdXNlIGEgbGVhZGluZyAvKiBvbiBhIHNlcGFyYXRlIGxpbmUKIzQ4Njog
RklMRTogdGFyZ2V0L2hleGFnb24vZm1hX2VtdS5jOjQ2NzoKKyAgICAvKiBcCgpXQVJOSU5HOiBC
bG9jayBjb21tZW50cyB1c2UgYSBsZWFkaW5nIC8qIG9uIGEgc2VwYXJhdGUgbGluZQojNDk1OiBG
SUxFOiB0YXJnZXQvaGV4YWdvbi9mbWFfZW11LmM6NDc2OgorICAgIC8qIE92ZXJmbG93PyAqLyBc
CgpXQVJOSU5HOiBCbG9jayBjb21tZW50cyB1c2UgYSBsZWFkaW5nIC8qIG9uIGEgc2VwYXJhdGUg
bGluZQojNDk3OiBGSUxFOiB0YXJnZXQvaGV4YWdvbi9mbWFfZW11LmM6NDc4OgorICAgICAgICAv
KiBZZXAsIGluZiByZXN1bHQgKi8gXAoKV0FSTklORzogQmxvY2sgY29tbWVudHMgdXNlIGEgbGVh
ZGluZyAvKiBvbiBhIHNlcGFyYXRlIGxpbmUKIzUxOTogRklMRTogdGFyZ2V0L2hleGFnb24vZm1h
X2VtdS5jOjUwMDoKKyAgICAvKiBVbmRlcmZsb3c/ICovIFwKCldBUk5JTkc6IEJsb2NrIGNvbW1l
bnRzIHVzZSBhIGxlYWRpbmcgLyogb24gYSBzZXBhcmF0ZSBsaW5lCiM1MjE6IEZJTEU6IHRhcmdl
dC9oZXhhZ29uL2ZtYV9lbXUuYzo1MDI6CisgICAgICAgIC8qIExlYWRpbmcgb25lIG1lYW5zOiBO
bywgd2UncmUgbm9ybWFsLiBTbywgd2Ugc2hvdWxkIGJlIGRvbmUuLi4gKi8gXAoKdG90YWw6IDEg
ZXJyb3JzLCAxOSB3YXJuaW5ncywgNzM5IGxpbmVzIGNoZWNrZWQKClBhdGNoIDE3LzM1IGhhcyBz
dHlsZSBwcm9ibGVtcywgcGxlYXNlIHJldmlldy4gIElmIGFueSBvZiB0aGVzZSBlcnJvcnMKYXJl
IGZhbHNlIHBvc2l0aXZlcyByZXBvcnQgdGhlbSB0byB0aGUgbWFpbnRhaW5lciwgc2VlCkNIRUNL
UEFUQ0ggaW4gTUFJTlRBSU5FUlMuCgoxOC8zNSBDaGVja2luZyBjb21taXQgY2VjMDNhZTk3ZWNj
IChIZXhhZ29uICh0YXJnZXQvaGV4YWdvbi9pbXBvcnRlZCkgYXJjaCBpbXBvcnQpCldBUk5JTkc6
IGFkZGVkLCBtb3ZlZCBvciBkZWxldGVkIGZpbGUocyksIGRvZXMgTUFJTlRBSU5FUlMgbmVlZCB1
cGRhdGluZz8KIzQ0OiAKbmV3IGZpbGUgbW9kZSAxMDA2NDQKCnRvdGFsOiAwIGVycm9ycywgMSB3
YXJuaW5ncywgOTIyOCBsaW5lcyBjaGVja2VkCgpQYXRjaCAxOC8zNSBoYXMgc3R5bGUgcHJvYmxl
bXMsIHBsZWFzZSByZXZpZXcuICBJZiBhbnkgb2YgdGhlc2UgZXJyb3JzCmFyZSBmYWxzZSBwb3Np
dGl2ZXMgcmVwb3J0IHRoZW0gdG8gdGhlIG1haW50YWluZXIsIHNlZQpDSEVDS1BBVENIIGluIE1B
SU5UQUlORVJTLgoxOS8zNSBDaGVja2luZyBjb21taXQgZGRiMWFiNmRlZTI0IChIZXhhZ29uICh0
YXJnZXQvaGV4YWdvbikgZ2VuZXJhdG9yIHBoYXNlIDEgLSBDIHByZXByb2Nlc3NvciBmb3Igc2Vt
YW50aWNzKQpXQVJOSU5HOiBhZGRlZCwgbW92ZWQgb3IgZGVsZXRlZCBmaWxlKHMpLCBkb2VzIE1B
SU5UQUlORVJTIG5lZWQgdXBkYXRpbmc/CiMyMTogCm5ldyBmaWxlIG1vZGUgMTAwNjQ0CgpFUlJP
Ujogc3VzcGljaW91cyA7IGFmdGVyIHdoaWxlICgwKQojODY6IEZJTEU6IHRhcmdldC9oZXhhZ29u
L2dlbl9zZW1hbnRpY3MuYzo2MToKKyAgICB9IHdoaWxlICgwKTsKCnRvdGFsOiAxIGVycm9ycywg
MSB3YXJuaW5ncywgODggbGluZXMgY2hlY2tlZAoKUGF0Y2ggMTkvMzUgaGFzIHN0eWxlIHByb2Js
ZW1zLCBwbGVhc2UgcmV2aWV3LiAgSWYgYW55IG9mIHRoZXNlIGVycm9ycwphcmUgZmFsc2UgcG9z
aXRpdmVzIHJlcG9ydCB0aGVtIHRvIHRoZSBtYWludGFpbmVyLCBzZWUKQ0hFQ0tQQVRDSCBpbiBN
QUlOVEFJTkVSUy4KCjIwLzM1IENoZWNraW5nIGNvbW1pdCA1MjgyNjAyNzU1MWEgKEhleGFnb24g
KHRhcmdldC9oZXhhZ29uKSBnZW5lcmF0b3IgcGhhc2UgMiAtIGdlbmVyYXRlIGhlYWRlciBmaWxl
cykKV0FSTklORzogYWRkZWQsIG1vdmVkIG9yIGRlbGV0ZWQgZmlsZShzKSwgZG9lcyBNQUlOVEFJ
TkVSUyBuZWVkIHVwZGF0aW5nPwojNDQ6IApuZXcgZmlsZSBtb2RlIDEwMDc1NQoKV0FSTklORzog
bGluZSBvdmVyIDgwIGNoYXJhY3RlcnMKIzEwMDI6IEZJTEU6IHRhcmdldC9oZXhhZ29uL2dlbl90
Y2dfZnVuY3MucHk6NTM6CisgICAgICAgIGYud3JpdGUoIiAgICAgICAgdGNnX2dlbl9tb3ZfdGwo
aGV4X25ld192YWx1ZVslcyArIDFdLCBoZXhfZ3ByWyVzICsgMV0pO1xuIiAlIFwKCldBUk5JTkc6
IGxpbmUgb3ZlciA4MCBjaGFyYWN0ZXJzCiMxMDgzOiBGSUxFOiB0YXJnZXQvaGV4YWdvbi9nZW5f
dGNnX2Z1bmNzLnB5OjEzNDoKKyAgICAgICAgICAgIGYud3JpdGUoIiAgICBUQ0d2ICVzJXNOID0g
aGV4X25ld19wcmVkX3ZhbHVlW2luc24tPnJlZ25vWyVkXV07XG4iICUgXAoKV0FSTklORzogbGlu
ZSBvdmVyIDgwIGNoYXJhY3RlcnMKIzExNjU6IEZJTEU6IHRhcmdldC9oZXhhZ29uL2dlbl90Y2df
ZnVuY3MucHk6MjE2OgorICAgICAgICAgICAgZi53cml0ZSgiICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgaGV4X2dwclslcyVzTiArIDFdKTtcbiIgJSBcCgpXQVJOSU5HOiBsaW5lIG92
ZXIgODAgY2hhcmFjdGVycwojMTI2NDogRklMRTogdGFyZ2V0L2hleGFnb24vZ2VuX3RjZ19mdW5j
cy5weTozMTU6CisgICAgICAgIGYud3JpdGUoIiAgICBnZW5fbG9nX3ByZWRpY2F0ZWRfcmVnX3dy
aXRlX3BhaXIoJXMlc04sICVzJXNWLCBpbnNuLT5zbG90KTtcbiIgJSBcCgp0b3RhbDogMCBlcnJv
cnMsIDUgd2FybmluZ3MsIDE2MDAgbGluZXMgY2hlY2tlZAoKUGF0Y2ggMjAvMzUgaGFzIHN0eWxl
IHByb2JsZW1zLCBwbGVhc2UgcmV2aWV3LiAgSWYgYW55IG9mIHRoZXNlIGVycm9ycwphcmUgZmFs
c2UgcG9zaXRpdmVzIHJlcG9ydCB0aGVtIHRvIHRoZSBtYWludGFpbmVyLCBzZWUKQ0hFQ0tQQVRD
SCBpbiBNQUlOVEFJTkVSUy4KMjEvMzUgQ2hlY2tpbmcgY29tbWl0IDhjZTYxNTJkNDIwNiAoSGV4
YWdvbiAodGFyZ2V0L2hleGFnb24pIGdlbmVyYXRvciBwaGFzZSAzIC0gQyBwcmVwcm9jZXNzb3Ig
Zm9yIGRlY29kZSB0cmVlKQpXQVJOSU5HOiBhZGRlZCwgbW92ZWQgb3IgZGVsZXRlZCBmaWxlKHMp
LCBkb2VzIE1BSU5UQUlORVJTIG5lZWQgdXBkYXRpbmc/CiMxOTogCm5ldyBmaWxlIG1vZGUgMTAw
NjQ0CgpFUlJPUjogTWFjcm9zIHdpdGggY29tcGxleCB2YWx1ZXMgc2hvdWxkIGJlIGVuY2xvc2Vk
IGluIHBhcmVudGhlc2lzCiM2NzogRklMRTogdGFyZ2V0L2hleGFnb24vZ2VuX2RlY3RyZWVfaW1w
b3J0LmM6NDQ6CisjZGVmaW5lIFE2SU5TTihUQUcsIEJFSCwgQVRUUklCUywgREVTQ1IsIFNFTSkg
XAorICAgW1RBR10gPSBCRUgsCgpFUlJPUjogTWFjcm9zIHdpdGggY29tcGxleCB2YWx1ZXMgc2hv
dWxkIGJlIGVuY2xvc2VkIGluIHBhcmVudGhlc2lzCiM2OTogRklMRTogdGFyZ2V0L2hleGFnb24v
Z2VuX2RlY3RyZWVfaW1wb3J0LmM6NDY6CisjZGVmaW5lIEVYVElOU04oVEFHLCBCRUgsIEFUVFJJ
QlMsIERFU0NSLCBTRU0pIFwKKyAgIFtUQUddID0gQkVILAoKRVJST1I6IE1hY3JvcyB3aXRoIGNv
bXBsZXggdmFsdWVzIHNob3VsZCBiZSBlbmNsb3NlZCBpbiBwYXJlbnRoZXNpcwojNzc6IEZJTEU6
IHRhcmdldC9oZXhhZ29uL2dlbl9kZWN0cmVlX2ltcG9ydC5jOjU0OgorI2RlZmluZSBSRUdJTkZP
KFRBRywgUkVHSU5GTywgUlJFR1MsIFdSRUdTKSBSUkVHUywKCkVSUk9SOiBNYWNyb3Mgd2l0aCBj
b21wbGV4IHZhbHVlcyBzaG91bGQgYmUgZW5jbG9zZWQgaW4gcGFyZW50aGVzaXMKIzg2OiBGSUxF
OiB0YXJnZXQvaGV4YWdvbi9nZW5fZGVjdHJlZV9pbXBvcnQuYzo2MzoKKyNkZWZpbmUgUkVHSU5G
TyhUQUcsIFJFR0lORk8sIFJSRUdTLCBXUkVHUykgV1JFR1MsCgpFUlJPUjogc3VzcGljaW91cyA7
IGFmdGVyIHdoaWxlICgwKQojMTgzOiBGSUxFOiB0YXJnZXQvaGV4YWdvbi9nZW5fZGVjdHJlZV9p
bXBvcnQuYzoxNjA6CisgICAgfSB3aGlsZSAoMCk7Cgp0b3RhbDogNSBlcnJvcnMsIDEgd2Fybmlu
Z3MsIDE4NyBsaW5lcyBjaGVja2VkCgpQYXRjaCAyMS8zNSBoYXMgc3R5bGUgcHJvYmxlbXMsIHBs
ZWFzZSByZXZpZXcuICBJZiBhbnkgb2YgdGhlc2UgZXJyb3JzCmFyZSBmYWxzZSBwb3NpdGl2ZXMg
cmVwb3J0IHRoZW0gdG8gdGhlIG1haW50YWluZXIsIHNlZQpDSEVDS1BBVENIIGluIE1BSU5UQUlO
RVJTLgoKMjIvMzUgQ2hlY2tpbmcgY29tbWl0IDBhZmYwYTU4MzY1ZiAoSGV4YWdvbiAodGFyZ2V0
L2hleGFnb24pIGdlbmVyYXRlciBwaGFzZSA0IC0gZGVjb2RlIHRyZWUpCldBUk5JTkc6IGFkZGVk
LCBtb3ZlZCBvciBkZWxldGVkIGZpbGUocyksIGRvZXMgTUFJTlRBSU5FUlMgbmVlZCB1cGRhdGlu
Zz8KIzE2OiAKbmV3IGZpbGUgbW9kZSAxMDA3NTUKCnRvdGFsOiAwIGVycm9ycywgMSB3YXJuaW5n
cywgMzUxIGxpbmVzIGNoZWNrZWQKClBhdGNoIDIyLzM1IGhhcyBzdHlsZSBwcm9ibGVtcywgcGxl
YXNlIHJldmlldy4gIElmIGFueSBvZiB0aGVzZSBlcnJvcnMKYXJlIGZhbHNlIHBvc2l0aXZlcyBy
ZXBvcnQgdGhlbSB0byB0aGUgbWFpbnRhaW5lciwgc2VlCkNIRUNLUEFUQ0ggaW4gTUFJTlRBSU5F
UlMuCjIzLzM1IENoZWNraW5nIGNvbW1pdCAzNjAyODc1M2RlOTUgKEhleGFnb24gKHRhcmdldC9o
ZXhhZ29uKSBvcGNvZGUgZGF0YSBzdHJ1Y3R1cmVzKQpXQVJOSU5HOiBhZGRlZCwgbW92ZWQgb3Ig
ZGVsZXRlZCBmaWxlKHMpLCBkb2VzIE1BSU5UQUlORVJTIG5lZWQgdXBkYXRpbmc/CiMxNTogCm5l
dyBmaWxlIG1vZGUgMTAwNjQ0CgpFUlJPUjogTWFjcm9zIHdpdGggY29tcGxleCB2YWx1ZXMgc2hv
dWxkIGJlIGVuY2xvc2VkIGluIHBhcmVudGhlc2lzCiM2MDogRklMRTogdGFyZ2V0L2hleGFnb24v
b3Bjb2Rlcy5jOjQxOgorI2RlZmluZSBSRUdJTkZPKFRBRywgUkVHSU5GTywgUlJFR1MsIFdSRUdT
KSBSRUdJTkZPLAoKRVJST1I6IE1hY3JvcyB3aXRoIGNvbXBsZXggdmFsdWVzIHNob3VsZCBiZSBl
bmNsb3NlZCBpbiBwYXJlbnRoZXNpcwojNzA6IEZJTEU6IHRhcmdldC9oZXhhZ29uL29wY29kZXMu
Yzo1MToKKyNkZWZpbmUgUkVHSU5GTyhUQUcsIFJFR0lORk8sIFJSRUdTLCBXUkVHUykgUlJFR1Ms
CgpFUlJPUjogTWFjcm9zIHdpdGggY29tcGxleCB2YWx1ZXMgc2hvdWxkIGJlIGVuY2xvc2VkIGlu
IHBhcmVudGhlc2lzCiM4MDogRklMRTogdGFyZ2V0L2hleGFnb24vb3Bjb2Rlcy5jOjYxOgorI2Rl
ZmluZSBSRUdJTkZPKFRBRywgUkVHSU5GTywgUlJFR1MsIFdSRUdTKSBXUkVHUywKCkVSUk9SOiBN
YWNyb3Mgd2l0aCBjb21wbGV4IHZhbHVlcyBzaG91bGQgYmUgZW5jbG9zZWQgaW4gcGFyZW50aGVz
aXMKIzg4OiBGSUxFOiB0YXJnZXQvaGV4YWdvbi9vcGNvZGVzLmM6Njk6CisjZGVmaW5lIERFRl9T
SE9SVENPREUoVEFHLCBTSE9SVENPREUpICAgICAgICAgICAgICBbVEFHXSA9ICNTSE9SVENPREUs
CgpFUlJPUjogTWFjcm9zIHdpdGggY29tcGxleCB2YWx1ZXMgc2hvdWxkIGJlIGVuY2xvc2VkIGlu
IHBhcmVudGhlc2lzCiMxMjc6IEZJTEU6IHRhcmdldC9oZXhhZ29uL29wY29kZXMuYzoxMDg6Cisj
ZGVmaW5lIEFUVFJJQlMoLi4uKSAsICMjIF9fVkFfQVJHU19fLCAwCgp0b3RhbDogNSBlcnJvcnMs
IDEgd2FybmluZ3MsIDIwNSBsaW5lcyBjaGVja2VkCgpQYXRjaCAyMy8zNSBoYXMgc3R5bGUgcHJv
YmxlbXMsIHBsZWFzZSByZXZpZXcuICBJZiBhbnkgb2YgdGhlc2UgZXJyb3JzCmFyZSBmYWxzZSBw
b3NpdGl2ZXMgcmVwb3J0IHRoZW0gdG8gdGhlIG1haW50YWluZXIsIHNlZQpDSEVDS1BBVENIIGlu
IE1BSU5UQUlORVJTLgoKMjQvMzUgQ2hlY2tpbmcgY29tbWl0IGY3Y2FlYTM5Mzg0OSAoSGV4YWdv
biAodGFyZ2V0L2hleGFnb24pIG1hY3JvcykKV0FSTklORzogYWRkZWQsIG1vdmVkIG9yIGRlbGV0
ZWQgZmlsZShzKSwgZG9lcyBNQUlOVEFJTkVSUyBuZWVkIHVwZGF0aW5nPwojMTc6IApuZXcgZmls
ZSBtb2RlIDEwMDY0NAoKdG90YWw6IDAgZXJyb3JzLCAxIHdhcm5pbmdzLCA1OTEgbGluZXMgY2hl
Y2tlZAoKUGF0Y2ggMjQvMzUgaGFzIHN0eWxlIHByb2JsZW1zLCBwbGVhc2UgcmV2aWV3LiAgSWYg
YW55IG9mIHRoZXNlIGVycm9ycwphcmUgZmFsc2UgcG9zaXRpdmVzIHJlcG9ydCB0aGVtIHRvIHRo
ZSBtYWludGFpbmVyLCBzZWUKQ0hFQ0tQQVRDSCBpbiBNQUlOVEFJTkVSUy4KMjUvMzUgQ2hlY2tp
bmcgY29tbWl0IGUyYTZiZDMwYTRjYyAoSGV4YWdvbiAodGFyZ2V0L2hleGFnb24pIGluc3RydWN0
aW9uIGNsYXNzZXMpCldBUk5JTkc6IGFkZGVkLCBtb3ZlZCBvciBkZWxldGVkIGZpbGUocyksIGRv
ZXMgTUFJTlRBSU5FUlMgbmVlZCB1cGRhdGluZz8KIzE4OiAKbmV3IGZpbGUgbW9kZSAxMDA2NDQK
CkVSUk9SOiBNYWNyb3Mgd2l0aCBjb21wbGV4IHZhbHVlcyBzaG91bGQgYmUgZW5jbG9zZWQgaW4g
cGFyZW50aGVzaXMKIzQ1OiBGSUxFOiB0YXJnZXQvaGV4YWdvbi9pY2xhc3MuYzoyMzoKKyNkZWZp
bmUgREVGX1BQX0lDTEFTUzMyKFRZUEUsIFNMT1RTLCBVTklUUykgXAorICAgIFtJQ0xBU1NfRlJP
TV9UWVBFKFRZUEUpXSA9IFNMT1RTXyMjU0xPVFMsCgpFUlJPUjogTWFjcm9zIHdpdGggY29tcGxl
eCB2YWx1ZXMgc2hvdWxkIGJlIGVuY2xvc2VkIGluIHBhcmVudGhlc2lzCiM0NzogRklMRTogdGFy
Z2V0L2hleGFnb24vaWNsYXNzLmM6MjU6CisjZGVmaW5lIERFRl9FRV9JQ0xBU1MzMihUWVBFLCBT
TE9UUywgVU5JVFMpIFwKKyAgICBbSUNMQVNTX0ZST01fVFlQRShUWVBFKV0gPSBTTE9UU18jI1NM
T1RTLAoKRVJST1I6IE1hY3JvcyB3aXRoIGNvbXBsZXggdmFsdWVzIHNob3VsZCBiZSBlbmNsb3Nl
ZCBpbiBwYXJlbnRoZXNpcwojMTI4OiBGSUxFOiB0YXJnZXQvaGV4YWdvbi9pY2xhc3MuaDoyNzoK
KyNkZWZpbmUgREVGX1BQX0lDTEFTUzMyKFRZUEUsIFNMT1RTLCBVTklUUykgICAgSUNMQVNTX0ZS
T01fVFlQRShUWVBFKSwKCkVSUk9SOiBNYWNyb3Mgd2l0aCBjb21wbGV4IHZhbHVlcyBzaG91bGQg
YmUgZW5jbG9zZWQgaW4gcGFyZW50aGVzaXMKIzEyOTogRklMRTogdGFyZ2V0L2hleGFnb24vaWNs
YXNzLmg6Mjg6CisjZGVmaW5lIERFRl9FRV9JQ0xBU1MzMihUWVBFLCBTTE9UUywgVU5JVFMpICAg
IElDTEFTU19GUk9NX1RZUEUoVFlQRSksCgp0b3RhbDogNCBlcnJvcnMsIDEgd2FybmluZ3MsIDE3
NCBsaW5lcyBjaGVja2VkCgpQYXRjaCAyNS8zNSBoYXMgc3R5bGUgcHJvYmxlbXMsIHBsZWFzZSBy
ZXZpZXcuICBJZiBhbnkgb2YgdGhlc2UgZXJyb3JzCmFyZSBmYWxzZSBwb3NpdGl2ZXMgcmVwb3J0
IHRoZW0gdG8gdGhlIG1haW50YWluZXIsIHNlZQpDSEVDS1BBVENIIGluIE1BSU5UQUlORVJTLgoK
MjYvMzUgQ2hlY2tpbmcgY29tbWl0IDc4NWFiMDc4NzgxNCAoSGV4YWdvbiAodGFyZ2V0L2hleGFn
b24pIFRDRyBnZW5lcmF0aW9uKQpXQVJOSU5HOiBhZGRlZCwgbW92ZWQgb3IgZGVsZXRlZCBmaWxl
KHMpLCBkb2VzIE1BSU5UQUlORVJTIG5lZWQgdXBkYXRpbmc/CiMxNzogCm5ldyBmaWxlIG1vZGUg
MTAwNjQ0Cgp0b3RhbDogMCBlcnJvcnMsIDEgd2FybmluZ3MsIDI2MSBsaW5lcyBjaGVja2VkCgpQ
YXRjaCAyNi8zNSBoYXMgc3R5bGUgcHJvYmxlbXMsIHBsZWFzZSByZXZpZXcuICBJZiBhbnkgb2Yg
dGhlc2UgZXJyb3JzCmFyZSBmYWxzZSBwb3NpdGl2ZXMgcmVwb3J0IHRoZW0gdG8gdGhlIG1haW50
YWluZXIsIHNlZQpDSEVDS1BBVENIIGluIE1BSU5UQUlORVJTLgoyNy8zNSBDaGVja2luZyBjb21t
aXQgZTFiODcxZTUxNTA1IChIZXhhZ29uICh0YXJnZXQvaGV4YWdvbikgVENHIGZvciBpbnN0cnVj
dGlvbnMgd2l0aCBtdWx0aXBsZSBkZWZpbml0aW9ucykKV0FSTklORzogYWRkZWQsIG1vdmVkIG9y
IGRlbGV0ZWQgZmlsZShzKSwgZG9lcyBNQUlOVEFJTkVSUyBuZWVkIHVwZGF0aW5nPwojMTc6IApu
ZXcgZmlsZSBtb2RlIDEwMDY0NAoKdG90YWw6IDAgZXJyb3JzLCAxIHdhcm5pbmdzLCAxOTggbGlu
ZXMgY2hlY2tlZAoKUGF0Y2ggMjcvMzUgaGFzIHN0eWxlIHByb2JsZW1zLCBwbGVhc2UgcmV2aWV3
LiAgSWYgYW55IG9mIHRoZXNlIGVycm9ycwphcmUgZmFsc2UgcG9zaXRpdmVzIHJlcG9ydCB0aGVt
IHRvIHRoZSBtYWludGFpbmVyLCBzZWUKQ0hFQ0tQQVRDSCBpbiBNQUlOVEFJTkVSUy4KMjgvMzUg
Q2hlY2tpbmcgY29tbWl0IGQ3MzkwM2JmMDcwOSAoSGV4YWdvbiAodGFyZ2V0L2hleGFnb24pIFRD
RyBmb3IgZmxvYXRpbmcgcG9pbnQgaW5zdHJ1Y3Rpb25zKQoyOS8zNSBDaGVja2luZyBjb21taXQg
YmE1M2FlZjA2NjExIChIZXhhZ29uICh0YXJnZXQvaGV4YWdvbikgdHJhbnNsYXRpb24pCldBUk5J
Tkc6IGFkZGVkLCBtb3ZlZCBvciBkZWxldGVkIGZpbGUocyksIGRvZXMgTUFJTlRBSU5FUlMgbmVl
ZCB1cGRhdGluZz8KIzIxOiAKbmV3IGZpbGUgbW9kZSAxMDA2NDQKCnRvdGFsOiAwIGVycm9ycywg
MSB3YXJuaW5ncywgNzg0IGxpbmVzIGNoZWNrZWQKClBhdGNoIDI5LzM1IGhhcyBzdHlsZSBwcm9i
bGVtcywgcGxlYXNlIHJldmlldy4gIElmIGFueSBvZiB0aGVzZSBlcnJvcnMKYXJlIGZhbHNlIHBv
c2l0aXZlcyByZXBvcnQgdGhlbSB0byB0aGUgbWFpbnRhaW5lciwgc2VlCkNIRUNLUEFUQ0ggaW4g
TUFJTlRBSU5FUlMuCjMwLzM1IENoZWNraW5nIGNvbW1pdCAyNGU0YTliNmZiMGQgKEhleGFnb24g
KGxpbnV4LXVzZXIvaGV4YWdvbikgTGludXggdXNlciBlbXVsYXRpb24pCldBUk5JTkc6IGFkZGVk
LCBtb3ZlZCBvciBkZWxldGVkIGZpbGUocyksIGRvZXMgTUFJTlRBSU5FUlMgbmVlZCB1cGRhdGlu
Zz8KIzU5OiAKbmV3IGZpbGUgbW9kZSAxMDA2NDQKCkVSUk9SOiBEb24ndCB1c2UgJyMnIGZsYWcg
b2YgcHJpbnRmIGZvcm1hdCAoJyUjJykgaW4gZm9ybWF0IHN0cmluZ3MsIHVzZSAnMHgnIHByZWZp
eCBpbnN0ZWFkCiMxMzk6IEZJTEU6IGxpbnV4LXVzZXIvaGV4YWdvbi9jcHVfbG9vcC5jOjc2Ogor
ICAgICAgICAgICAgRVhDUF9EVU1QKGVudiwgIlxucWVtdTogdW5oYW5kbGVkIENQVSBleGNlcHRp
b24gJSN4IC0gYWJvcnRpbmdcbiIsCgp0b3RhbDogMSBlcnJvcnMsIDEgd2FybmluZ3MsIDEwMzkg
bGluZXMgY2hlY2tlZAoKUGF0Y2ggMzAvMzUgaGFzIHN0eWxlIHByb2JsZW1zLCBwbGVhc2UgcmV2
aWV3LiAgSWYgYW55IG9mIHRoZXNlIGVycm9ycwphcmUgZmFsc2UgcG9zaXRpdmVzIHJlcG9ydCB0
aGVtIHRvIHRoZSBtYWludGFpbmVyLCBzZWUKQ0hFQ0tQQVRDSCBpbiBNQUlOVEFJTkVSUy4KCjMx
LzM1IENoZWNraW5nIGNvbW1pdCBkZjQxYjUxMDI0Y2IgKEhleGFnb24gKHRlc3RzL3RjZy9oZXhh
Z29uKSBUQ0cgdGVzdHMgLSBtdWx0aWFyY2gpCkVSUk9SOiBsaW5lIG92ZXIgOTAgY2hhcmFjdGVy
cwojMzY6IEZJTEU6IHRlc3RzL3RjZy9jb25maWd1cmUuc2g6OTk6CisgICAgYWxwaGF8Y3Jpc3xo
ZXhhZ29ufGhwcGF8aTM4NnxsbTMyfG1pY3JvYmxhemV8bWljcm9ibGF6ZWVsfG02OGt8b3BlbnJp
c2N8cmlzY3Y2NHxzMzkweHxzaDR8c3BhcmM2NCkKCkVSUk9SOiBNaXNzaW5nIFNpZ25lZC1vZmYt
Ynk6IGxpbmUocykKCnRvdGFsOiAyIGVycm9ycywgMCB3YXJuaW5ncywgMTU2MiBsaW5lcyBjaGVj
a2VkCgpQYXRjaCAzMS8zNSBoYXMgc3R5bGUgcHJvYmxlbXMsIHBsZWFzZSByZXZpZXcuICBJZiBh
bnkgb2YgdGhlc2UgZXJyb3JzCmFyZSBmYWxzZSBwb3NpdGl2ZXMgcmVwb3J0IHRoZW0gdG8gdGhl
IG1haW50YWluZXIsIHNlZQpDSEVDS1BBVENIIGluIE1BSU5UQUlORVJTLgoKMzIvMzUgQ2hlY2tp
bmcgY29tbWl0IDU5YTRhYTJkZTA5NiAoSGV4YWdvbiAodGVzdHMvdGNnL2hleGFnb24pIFRDRyB0
ZXN0cyAtIGF0b21pY3MvbG9hZC9zdG9yZS9taXNjKQpFUlJPUjogTWlzc2luZyBTaWduZWQtb2Zm
LWJ5OiBsaW5lKHMpCgp0b3RhbDogMSBlcnJvcnMsIDAgd2FybmluZ3MsIDExNTAgbGluZXMgY2hl
Y2tlZAoKUGF0Y2ggMzIvMzUgaGFzIHN0eWxlIHByb2JsZW1zLCBwbGVhc2UgcmV2aWV3LiAgSWYg
YW55IG9mIHRoZXNlIGVycm9ycwphcmUgZmFsc2UgcG9zaXRpdmVzIHJlcG9ydCB0aGVtIHRvIHRo
ZSBtYWludGFpbmVyLCBzZWUKQ0hFQ0tQQVRDSCBpbiBNQUlOVEFJTkVSUy4KCjMzLzM1IENoZWNr
aW5nIGNvbW1pdCBjY2I5Mjg5ZjM2ZjIgKEhleGFnb24gKHRlc3RzL3RjZy9oZXhhZ29uKSBUQ0cg
dGVzdHMgLSBmbG9hdGluZyBwb2ludCkKRVJST1I6IE1pc3NpbmcgU2lnbmVkLW9mZi1ieTogbGlu
ZShzKQoKdG90YWw6IDEgZXJyb3JzLCAwIHdhcm5pbmdzLCAzNzYgbGluZXMgY2hlY2tlZAoKUGF0
Y2ggMzMvMzUgaGFzIHN0eWxlIHByb2JsZW1zLCBwbGVhc2UgcmV2aWV3LiAgSWYgYW55IG9mIHRo
ZXNlIGVycm9ycwphcmUgZmFsc2UgcG9zaXRpdmVzIHJlcG9ydCB0aGVtIHRvIHRoZSBtYWludGFp
bmVyLCBzZWUKQ0hFQ0tQQVRDSCBpbiBNQUlOVEFJTkVSUy4KCjM0LzM1IENoZWNraW5nIGNvbW1p
dCA4NjYxYjBiYjZkOGUgKEhleGFnb24gYnVpbGQgaW5mcmFzdHJ1Y3R1cmUpCldBUk5JTkc6IGFk
ZGVkLCBtb3ZlZCBvciBkZWxldGVkIGZpbGUocyksIGRvZXMgTUFJTlRBSU5FUlMgbmVlZCB1cGRh
dGluZz8KIzI4OiAKbmV3IGZpbGUgbW9kZSAxMDA2NDQKCldBUk5JTkc6IGxpbmUgb3ZlciA4MCBj
aGFyYWN0ZXJzCiM2MzogRklMRTogc2NyaXB0cy9xZW11LWJpbmZtdC1jb25mLnNoOjEzOToKK2hl
eGFnb25fbWFnaWM9J1x4N2ZFTEZceDAxXHgwMVx4MDFceDAwXHgwMFx4MDBceDAwXHgwMFx4MDBc
eDAwXHgwMFx4MDBceDAyXHgwMFx4YTRceDAwJwoKRVJST1I6IGxpbmUgb3ZlciA5MCBjaGFyYWN0
ZXJzCiM2NDogRklMRTogc2NyaXB0cy9xZW11LWJpbmZtdC1jb25mLnNoOjE0MDoKK2hleGFnb25f
bWFzaz0nXHhmZlx4ZmZceGZmXHhmZlx4ZmZceGZmXHhmZlx4MDBceGZmXHhmZlx4ZmZceGZmXHhm
Zlx4ZmZceGZmXHhmZlx4ZmVceGZmXHhmZlx4ZmYnCgp0b3RhbDogMSBlcnJvcnMsIDIgd2Fybmlu
Z3MsIDIyMCBsaW5lcyBjaGVja2VkCgpQYXRjaCAzNC8zNSBoYXMgc3R5bGUgcHJvYmxlbXMsIHBs
ZWFzZSByZXZpZXcuICBJZiBhbnkgb2YgdGhlc2UgZXJyb3JzCmFyZSBmYWxzZSBwb3NpdGl2ZXMg
cmVwb3J0IHRoZW0gdG8gdGhlIG1haW50YWluZXIsIHNlZQpDSEVDS1BBVENIIGluIE1BSU5UQUlO
RVJTLgoKMzUvMzUgQ2hlY2tpbmcgY29tbWl0IGMzMzU3MDI5Mzc2MiAoQWRkIERvY2tlcmZpbGUg
Zm9yIGhleGFnb24pCldBUk5JTkc6IGFkZGVkLCBtb3ZlZCBvciBkZWxldGVkIGZpbGUocyksIGRv
ZXMgTUFJTlRBSU5FUlMgbmVlZCB1cGRhdGluZz8KIzE4OiAKbmV3IGZpbGUgbW9kZSAxMDA2NDQK
CldBUk5JTkc6IGxpbmUgb3ZlciA4MCBjaGFyYWN0ZXJzCiMxMDk6IEZJTEU6IHRlc3RzL2RvY2tl
ci9kb2NrZXJmaWxlcy9kZWJpYW4taGV4YWdvbi1jcm9zcy5idWlsZC10b29sY2hhaW4uc2g6NjM6
CisgICAgLURDTUFLRV9BU01fRkxBR1M9Ii1HMCAtbWxvbmctY2FsbHMgLWZuby1waWMgLS10YXJn
ZXQ9aGV4YWdvbi11bmtub3duLWxpbnV4LW11c2wgIiBcCgpFUlJPUjogbGluZSBvdmVyIDkwIGNo
YXJhY3RlcnMKIzEzNjogRklMRTogdGVzdHMvZG9ja2VyL2RvY2tlcmZpbGVzL2RlYmlhbi1oZXhh
Z29uLWNyb3NzLmJ1aWxkLXRvb2xjaGFpbi5zaDo5MDoKKyAgICBDUk9TU19DRkxBR1M9Ii1HMCAt
TzAgLW12NjUgLWZuby1idWlsdGluIC1mbm8tcm91bmRpbmctbWF0aCAtLXRhcmdldD1oZXhhZ29u
LXVua25vd24tbGludXgtbXVzbCIgXAoKRVJST1I6IGxpbmUgb3ZlciA5MCBjaGFyYWN0ZXJzCiMx
NzM6IEZJTEU6IHRlc3RzL2RvY2tlci9kb2NrZXJmaWxlcy9kZWJpYW4taGV4YWdvbi1jcm9zcy5i
dWlsZC10b29sY2hhaW4uc2g6MTI3OgorICAgIENGTEFHUz0iLUcwIC1PMCAtbXY2NSAtZm5vLWJ1
aWx0aW4gLWZuby1yb3VuZGluZy1tYXRoIC0tdGFyZ2V0PWhleGFnb24tdW5rbm93bi1saW51eC1t
dXNsIiBcCgp0b3RhbDogMiBlcnJvcnMsIDIgd2FybmluZ3MsIDE3MCBsaW5lcyBjaGVja2VkCgpQ
YXRjaCAzNS8zNSBoYXMgc3R5bGUgcHJvYmxlbXMsIHBsZWFzZSByZXZpZXcuICBJZiBhbnkgb2Yg
dGhlc2UgZXJyb3JzCmFyZSBmYWxzZSBwb3NpdGl2ZXMgcmVwb3J0IHRoZW0gdG8gdGhlIG1haW50
YWluZXIsIHNlZQpDSEVDS1BBVENIIGluIE1BSU5UQUlORVJTLgoKPT09IE9VVFBVVCBFTkQgPT09
CgpUZXN0IGNvbW1hbmQgZXhpdGVkIHdpdGggY29kZTogMQoKClRoZSBmdWxsIGxvZyBpcyBhdmFp
bGFibGUgYXQKaHR0cDovL3BhdGNoZXcub3JnL2xvZ3MvMTYxMTExMzM0OS0yNDkwNi0xLWdpdC1z
ZW5kLWVtYWlsLXRzaW1wc29uQHF1aWNpbmMuY29tL3Rlc3RpbmcuY2hlY2twYXRjaC8/dHlwZT1t
ZXNzYWdlLgotLS0KRW1haWwgZ2VuZXJhdGVkIGF1dG9tYXRpY2FsbHkgYnkgUGF0Y2hldyBbaHR0
cHM6Ly9wYXRjaGV3Lm9yZy9dLgpQbGVhc2Ugc2VuZCB5b3VyIGZlZWRiYWNrIHRvIHBhdGNoZXct
ZGV2ZWxAcmVkaGF0LmNvbQ==

