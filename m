Return-Path: <qemu-devel-bounces+lists+qemu-devel=lfdr.de@nongnu.org>
X-Original-To: lists+qemu-devel@lfdr.de
Delivered-To: lists+qemu-devel@lfdr.de
Received: from lists.gnu.org (lists.gnu.org [209.51.188.17])
	by mail.lfdr.de (Postfix) with ESMTPS id 125405FAAD
	for <lists+qemu-devel@lfdr.de>; Thu,  4 Jul 2019 17:11:00 +0200 (CEST)
Received: from localhost ([::1]:46746 helo=lists1p.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.86_2)
	(envelope-from <qemu-devel-bounces+lists+qemu-devel=lfdr.de@nongnu.org>)
	id 1hj3Nz-00006V-9p
	for lists+qemu-devel@lfdr.de; Thu, 04 Jul 2019 11:10:59 -0400
Received: from eggs.gnu.org ([2001:470:142:3::10]:36046)
 by lists.gnu.org with esmtp (Exim 4.86_2)
 (envelope-from <no-reply@patchew.org>) id 1hj3Ls-0007YS-9m
 for qemu-devel@nongnu.org; Thu, 04 Jul 2019 11:08:50 -0400
Received: from Debian-exim by eggs.gnu.org with spam-scanned (Exim 4.71)
 (envelope-from <no-reply@patchew.org>) id 1hj3Lq-000733-CJ
 for qemu-devel@nongnu.org; Thu, 04 Jul 2019 11:08:48 -0400
Resent-Date: Thu, 04 Jul 2019 11:08:47 -0400
Resent-Message-Id: <E1hj3Lq-000733-CJ@eggs.gnu.org>
Received: from sender4-of-o55.zoho.com ([136.143.188.55]:21527)
 by eggs.gnu.org with esmtps (TLS1.0:RSA_AES_256_CBC_SHA1:32)
 (Exim 4.71) (envelope-from <no-reply@patchew.org>)
 id 1hj3Lk-0006wo-HS; Thu, 04 Jul 2019 11:08:42 -0400
ARC-Seal: i=1; a=rsa-sha256; t=1562252870; cv=none; d=zoho.com; s=zohoarc; 
 b=JOLfbSobPpFc0XWGMjA2MnCsZVYaP8UfzcLJ2AAOxkLSkJxXJRTDhGOG9HcHARLdXOn7WO7EmpD0A0tFdJbSzAnoTSK+HMEZmnzPQcLsEFHNd+QTqTotxgXLK3WyK2rGbfD0OH6FeuON/4SHm1MfTjnWqJ3nCd/zjc6SNl4q9oc=
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=zoho.com;
 s=zohoarc; t=1562252870;
 h=Content-Type:Content-Transfer-Encoding:Cc:Date:From:In-Reply-To:MIME-Version:Message-ID:Reply-To:Subject:To:ARC-Authentication-Results;
 bh=xoa0hBw2981YM23B0if6Qhx8QuXb8Oga5RAebjzTDv4=; 
 b=Ut8SzITHkMvrecuApYrE+A5HDRK48kHw7MadqTEhNsWpFnCZv6pbIpoGaMgA6Br4qSGt7/zmo3iSRgdqIo4IaDnIt/mstKuZn65EtVlsiCFUdmh2k4pVGIb+rC1pqXIAw9pn3GO0eosoFAycCapsspY0/sFVfhpnE2odY3KmZmU=
ARC-Authentication-Results: i=1; mx.zoho.com; dkim=pass  header.i=patchew.org;
 spf=pass  smtp.mailfrom=no-reply@patchew.org;
 dmarc=pass header.from=<no-reply@patchew.org>
 header.from=<no-reply@patchew.org>
Received: from [172.17.0.3] (23.253.156.214 [23.253.156.214]) by
 mx.zohomail.com with SMTPS id 1562252867134329.5839835625219;
 Thu, 4 Jul 2019 08:07:47 -0700 (PDT)
Message-ID: <156225286547.29792.17749804109015498726@c4a48874b076>
In-Reply-To: <20190703215542.16123-1-jsnow@redhat.com>
MIME-Version: 1.0
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Resent-From: 
From: no-reply@patchew.org
To: jsnow@redhat.com
Date: Thu, 4 Jul 2019 08:07:47 -0700 (PDT)
X-ZohoMailClient: External
X-detected-operating-system: by eggs.gnu.org: GNU/Linux 2.2.x-3.x [generic]
X-Received-From: 136.143.188.55
Subject: Re: [Qemu-devel] [PATCH v2 00/18] bitmaps: introduce 'bitmap' sync
 mode
X-BeenThere: qemu-devel@nongnu.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: <qemu-devel.nongnu.org>
List-Unsubscribe: <https://lists.nongnu.org/mailman/options/qemu-devel>,
 <mailto:qemu-devel-request@nongnu.org?subject=unsubscribe>
List-Archive: <https://lists.nongnu.org/archive/html/qemu-devel>
List-Post: <mailto:qemu-devel@nongnu.org>
List-Help: <mailto:qemu-devel-request@nongnu.org?subject=help>
List-Subscribe: <https://lists.nongnu.org/mailman/listinfo/qemu-devel>,
 <mailto:qemu-devel-request@nongnu.org?subject=subscribe>
Reply-To: qemu-devel@nongnu.org
Cc: kwolf@redhat.com, fam@euphon.net, vsementsov@virtuozzo.com,
 qemu-block@nongnu.org, quintela@redhat.com, wencongyang2@huawei.com,
 xiechanglong.d@gmail.com, qemu-devel@nongnu.org, armbru@redhat.com,
 stefanha@redhat.com, mreitz@redhat.com, jsnow@redhat.com, dgilbert@redhat.com
Errors-To: qemu-devel-bounces+lists+qemu-devel=lfdr.de@nongnu.org
Sender: "Qemu-devel" <qemu-devel-bounces+lists+qemu-devel=lfdr.de@nongnu.org>

UGF0Y2hldyBVUkw6IGh0dHBzOi8vcGF0Y2hldy5vcmcvUUVNVS8yMDE5MDcwMzIxNTU0Mi4xNjEy
My0xLWpzbm93QHJlZGhhdC5jb20vCgoKCkhpLAoKVGhpcyBzZXJpZXMgc2VlbXMgdG8gaGF2ZSBz
b21lIGNvZGluZyBzdHlsZSBwcm9ibGVtcy4gU2VlIG91dHB1dCBiZWxvdyBmb3IKbW9yZSBpbmZv
cm1hdGlvbjoKClN1YmplY3Q6IFtRZW11LWRldmVsXSBbUEFUQ0ggdjIgMDAvMThdIGJpdG1hcHM6
IGludHJvZHVjZSAnYml0bWFwJyBzeW5jIG1vZGUKVHlwZTogc2VyaWVzCk1lc3NhZ2UtaWQ6IDIw
MTkwNzAzMjE1NTQyLjE2MTIzLTEtanNub3dAcmVkaGF0LmNvbQoKPT09IFRFU1QgU0NSSVBUIEJF
R0lOID09PQojIS9iaW4vYmFzaApnaXQgcmV2LXBhcnNlIGJhc2UgPiAvZGV2L251bGwgfHwgZXhp
dCAwCmdpdCBjb25maWcgLS1sb2NhbCBkaWZmLnJlbmFtZWxpbWl0IDAKZ2l0IGNvbmZpZyAtLWxv
Y2FsIGRpZmYucmVuYW1lcyBUcnVlCmdpdCBjb25maWcgLS1sb2NhbCBkaWZmLmFsZ29yaXRobSBo
aXN0b2dyYW0KLi9zY3JpcHRzL2NoZWNrcGF0Y2gucGwgLS1tYWlsYmFjayBiYXNlLi4KPT09IFRF
U1QgU0NSSVBUIEVORCA9PT0KCkZyb20gaHR0cHM6Ly9naXRodWIuY29tL3BhdGNoZXctcHJvamVj
dC9xZW11CiAtIFt0YWcgdXBkYXRlXSAgICAgIHBhdGNoZXcvMjAxOTA3MDMyMTU1NDIuMTYxMjMt
MS1qc25vd0ByZWRoYXQuY29tIC0+IHBhdGNoZXcvMjAxOTA3MDMyMTU1NDIuMTYxMjMtMS1qc25v
d0ByZWRoYXQuY29tClN3aXRjaGVkIHRvIGEgbmV3IGJyYW5jaCAndGVzdCcKMjZlNjQ3OSBibG9j
ay9iYWNrdXA6IGxvb3NlbiByZXN0cmljdGlvbiBvbiByZWFkb25seSBiaXRtYXBzCjc1NWUxYjEg
aW90ZXN0czogYWRkIHRlc3QgMjU3IGZvciBiaXRtYXAtbW9kZSBiYWNrdXBzCmQ0OGM5ZWUgaW90
ZXN0czogQWRkIHZpcnRpby1zY3NpIGRldmljZSBoZWxwZXIKYjZlNDIyNiBpb3Rlc3RzOiB0ZWFj
aCBGaWxlUGF0aCB0byBwcm9kdWNlIG11bHRpcGxlIHBhdGhzCjliN2RkYjMgaW90ZXN0czogdGVh
Y2ggcnVuX2pvYiB0byBjYW5jZWwgcGVuZGluZyBqb2JzCjc4ZWQ1MjkgaW90ZXN0czogYWRkIHRl
c3Rpbmcgc2hpbSBmb3Igc2NyaXB0LXN0eWxlIHB5dGhvbiB0ZXN0cwo3OGE0ZmEzIGJsb2NrL2Jh
Y2t1cDogYWRkICdhbHdheXMnIGJpdG1hcCBzeW5jIHBvbGljeQplZGNiMmY5IGJsb2NrL2JhY2t1
cDogdXBncmFkZSBjb3B5X2JpdG1hcCB0byBCZHJ2RGlydHlCaXRtYXAKNTY5MWIzZSBibG9jay9k
aXJ0eS1iaXRtYXA6IGFkZCBiZHJ2X2RpcnR5X2JpdG1hcF9nZXQKM2RlY2RmMyBibG9jay9kaXJ0
eS1iaXRtYXA6IGFkZCBiZHJ2X2RpcnR5X2JpdG1hcF9tZXJnZV9pbnRlcm5hbAoxZWUzZmZlIGhi
aXRtYXA6IGVuYWJsZSBtZXJnaW5nIGFjcm9zcyBncmFudWxhcml0aWVzCjBkMTg3ZTYgaGJpdG1h
cDogRml4IG1lcmdlIHdoZW4gYiBpcyBlbXB0eSwgYW5kIHJlc3VsdCBpcyBub3QgYW4gYWxpYXMg
b2YgYQo5ZmI3YjgwIGJsb2NrL2JhY2t1cDogYWRkICduZXZlcicgcG9saWN5IHRvIGJpdG1hcCBz
eW5jIG1vZGUKMzAyNWFiYiBibG9jay9iYWNrdXA6IEFkZCBtaXJyb3Igc3luYyBtb2RlICdiaXRt
YXAnCjc4MTczZGEgcWFwaTogYWRkIEJpdG1hcFN5bmNNb2RlIGVudW0KOGQ2ZWZmYyBibG9ja2Rl
di1iYWNrdXA6IHV0aWxpemUgZG9fYmFja3VwX2NvbW1vbgoxODlhNTU3IGRyaXZlLWJhY2t1cDog
Y3JlYXRlIGRvX2JhY2t1cF9jb21tb24KMWFhMjIwMiBxYXBpL2Jsb2NrLWNvcmU6IEludHJvZHVj
ZSBCYWNrdXBDb21tb24KCj09PSBPVVRQVVQgQkVHSU4gPT09CjEvMTggQ2hlY2tpbmcgY29tbWl0
IDFhYTIyMDJhOTFjYiAocWFwaS9ibG9jay1jb3JlOiBJbnRyb2R1Y2UgQmFja3VwQ29tbW9uKQoy
LzE4IENoZWNraW5nIGNvbW1pdCAxODlhNTU3ZDMyZTkgKGRyaXZlLWJhY2t1cDogY3JlYXRlIGRv
X2JhY2t1cF9jb21tb24pCjMvMTggQ2hlY2tpbmcgY29tbWl0IDhkNmVmZmNhNTQ0YSAoYmxvY2tk
ZXYtYmFja3VwOiB1dGlsaXplIGRvX2JhY2t1cF9jb21tb24pCjQvMTggQ2hlY2tpbmcgY29tbWl0
IDc4MTczZGFhYzY3YiAocWFwaTogYWRkIEJpdG1hcFN5bmNNb2RlIGVudW0pCjUvMTggQ2hlY2tp
bmcgY29tbWl0IDMwMjVhYmI3OTg0NyAoYmxvY2svYmFja3VwOiBBZGQgbWlycm9yIHN5bmMgbW9k
ZSAnYml0bWFwJykKNi8xOCBDaGVja2luZyBjb21taXQgOWZiN2I4MDRjYWE4IChibG9jay9iYWNr
dXA6IGFkZCAnbmV2ZXInIHBvbGljeSB0byBiaXRtYXAgc3luYyBtb2RlKQpXQVJOSU5HOiBCbG9j
ayBjb21tZW50cyB1c2UgYSBsZWFkaW5nIC8qIG9uIGEgc2VwYXJhdGUgbGluZQojMjY6IEZJTEU6
IGJsb2NrL2JhY2t1cC5jOjI2OToKKyAgICAgICAgLyogRmFpbHVyZSwgb3Igd2UgZG9uJ3Qgd2Fu
dCB0byBzeW5jaHJvbml6ZSB0aGUgYml0bWFwLgoKV0FSTklORzogQmxvY2sgY29tbWVudHMgdXNl
IGEgdHJhaWxpbmcgKi8gb24gYSBzZXBhcmF0ZSBsaW5lCiMyNzogRklMRTogYmxvY2svYmFja3Vw
LmM6MjcwOgorICAgICAgICAgKiBNZXJnZSB0aGUgc3VjY2Vzc29yIGJhY2sgaW50byB0aGUgcGFy
ZW50LCBkZWxldGUgbm90aGluZy4gKi8KCnRvdGFsOiAwIGVycm9ycywgMiB3YXJuaW5ncywgMjUg
bGluZXMgY2hlY2tlZAoKUGF0Y2ggNi8xOCBoYXMgc3R5bGUgcHJvYmxlbXMsIHBsZWFzZSByZXZp
ZXcuICBJZiBhbnkgb2YgdGhlc2UgZXJyb3JzCmFyZSBmYWxzZSBwb3NpdGl2ZXMgcmVwb3J0IHRo
ZW0gdG8gdGhlIG1haW50YWluZXIsIHNlZQpDSEVDS1BBVENIIGluIE1BSU5UQUlORVJTLgo3LzE4
IENoZWNraW5nIGNvbW1pdCAwZDE4N2U2OTAxMmUgKGhiaXRtYXA6IEZpeCBtZXJnZSB3aGVuIGIg
aXMgZW1wdHksIGFuZCByZXN1bHQgaXMgbm90IGFuIGFsaWFzIG9mIGEpCjgvMTggQ2hlY2tpbmcg
Y29tbWl0IDFlZTNmZmU3MDZkNCAoaGJpdG1hcDogZW5hYmxlIG1lcmdpbmcgYWNyb3NzIGdyYW51
bGFyaXRpZXMpCjkvMTggQ2hlY2tpbmcgY29tbWl0IDNkZWNkZjM1OGJiNyAoYmxvY2svZGlydHkt
Yml0bWFwOiBhZGQgYmRydl9kaXJ0eV9iaXRtYXBfbWVyZ2VfaW50ZXJuYWwpCjEwLzE4IENoZWNr
aW5nIGNvbW1pdCA1NjkxYjNlMDZlNzMgKGJsb2NrL2RpcnR5LWJpdG1hcDogYWRkIGJkcnZfZGly
dHlfYml0bWFwX2dldCkKRVJST1I6IG9wZW4gYnJhY2UgJ3snIGZvbGxvd2luZyBmdW5jdGlvbiBk
ZWNsYXJhdGlvbnMgZ28gb24gdGhlIG5leHQgbGluZQojMzY6IEZJTEU6IGJsb2NrL2RpcnR5LWJp
dG1hcC5jOjUxNzoKK2Jvb2wgYmRydl9kaXJ0eV9iaXRtYXBfZ2V0KEJkcnZEaXJ0eUJpdG1hcCAq
Yml0bWFwLCBpbnQ2NF90IG9mZnNldCkgewoKdG90YWw6IDEgZXJyb3JzLCAwIHdhcm5pbmdzLCA3
MiBsaW5lcyBjaGVja2VkCgpQYXRjaCAxMC8xOCBoYXMgc3R5bGUgcHJvYmxlbXMsIHBsZWFzZSBy
ZXZpZXcuICBJZiBhbnkgb2YgdGhlc2UgZXJyb3JzCmFyZSBmYWxzZSBwb3NpdGl2ZXMgcmVwb3J0
IHRoZW0gdG8gdGhlIG1haW50YWluZXIsIHNlZQpDSEVDS1BBVENIIGluIE1BSU5UQUlORVJTLgoK
MTEvMTggQ2hlY2tpbmcgY29tbWl0IGVkY2IyZjlkNTI2ZSAoYmxvY2svYmFja3VwOiB1cGdyYWRl
IGNvcHlfYml0bWFwIHRvIEJkcnZEaXJ0eUJpdG1hcCkKV0FSTklORzogbGluZSBvdmVyIDgwIGNo
YXJhY3RlcnMKIzYwOiBGSUxFOiBibG9jay9iYWNrdXAuYzoxNzQ6CisgICAgYmRydl9yZXNldF9k
aXJ0eV9iaXRtYXAoam9iLT5jb3B5X2JpdG1hcCwgc3RhcnQsIGpvYi0+Y2x1c3Rlcl9zaXplICog
bnJfY2x1c3RlcnMpOwoKV0FSTklORzogbGluZSBvdmVyIDgwIGNoYXJhY3RlcnMKIzY2OiBGSUxF
OiBibG9jay9iYWNrdXAuYzoxNzk6CisgICAgICAgIGJkcnZfc2V0X2RpcnR5X2JpdG1hcChqb2It
PmNvcHlfYml0bWFwLCBzdGFydCwgam9iLT5jbHVzdGVyX3NpemUgKiBucl9jbHVzdGVycyk7Cgp0
b3RhbDogMCBlcnJvcnMsIDIgd2FybmluZ3MsIDE5MiBsaW5lcyBjaGVja2VkCgpQYXRjaCAxMS8x
OCBoYXMgc3R5bGUgcHJvYmxlbXMsIHBsZWFzZSByZXZpZXcuICBJZiBhbnkgb2YgdGhlc2UgZXJy
b3JzCmFyZSBmYWxzZSBwb3NpdGl2ZXMgcmVwb3J0IHRoZW0gdG8gdGhlIG1haW50YWluZXIsIHNl
ZQpDSEVDS1BBVENIIGluIE1BSU5UQUlORVJTLgoxMi8xOCBDaGVja2luZyBjb21taXQgNzhhNGZh
MzA0YzMzIChibG9jay9iYWNrdXA6IGFkZCAnYWx3YXlzJyBiaXRtYXAgc3luYyBwb2xpY3kpCldB
Uk5JTkc6IEJsb2NrIGNvbW1lbnRzIHVzZSBhIGxlYWRpbmcgLyogb24gYSBzZXBhcmF0ZSBsaW5l
CiM0MTogRklMRTogYmxvY2svYmFja3VwLmM6MjczOgorICAgICAgICAvKiBXZSBzdWNjZWVkZWQs
IG9yIHdlIGFsd2F5cyBpbnRlbmRlZCB0byBzeW5jIHRoZSBiaXRtYXAuCgpXQVJOSU5HOiBCbG9j
ayBjb21tZW50cyB1c2UgYSB0cmFpbGluZyAqLyBvbiBhIHNlcGFyYXRlIGxpbmUKIzQyOiBGSUxF
OiBibG9jay9iYWNrdXAuYzoyNzQ6CisgICAgICAgICAqIERlbGV0ZSB0aGlzIGJpdG1hcCBhbmQg
aW5zdGFsbCB0aGUgY2hpbGQuICovCgpXQVJOSU5HOiBCbG9jayBjb21tZW50cyB1c2UgYSBsZWFk
aW5nIC8qIG9uIGEgc2VwYXJhdGUgbGluZQojNDY6IEZJTEU6IGJsb2NrL2JhY2t1cC5jOjI3NzoK
KyAgICAgICAgLyogV2UgZmFpbGVkLCBvciB3ZSBuZXZlciBpbnRlbmRlZCB0byBzeW5jIHRoZSBi
aXRtYXAgYW55d2F5LgoKV0FSTklORzogQmxvY2sgY29tbWVudHMgdXNlIGEgdHJhaWxpbmcgKi8g
b24gYSBzZXBhcmF0ZSBsaW5lCiM0NzogRklMRTogYmxvY2svYmFja3VwLmM6Mjc4OgorICAgICAg
ICAgKiBNZXJnZSB0aGUgc3VjY2Vzc29yIGJhY2sgaW50byB0aGUgcGFyZW50LCBrZWVwaW5nIGFs
bCBkYXRhLiAqLwoKdG90YWw6IDAgZXJyb3JzLCA0IHdhcm5pbmdzLCA0NyBsaW5lcyBjaGVja2Vk
CgpQYXRjaCAxMi8xOCBoYXMgc3R5bGUgcHJvYmxlbXMsIHBsZWFzZSByZXZpZXcuICBJZiBhbnkg
b2YgdGhlc2UgZXJyb3JzCmFyZSBmYWxzZSBwb3NpdGl2ZXMgcmVwb3J0IHRoZW0gdG8gdGhlIG1h
aW50YWluZXIsIHNlZQpDSEVDS1BBVENIIGluIE1BSU5UQUlORVJTLgoxMy8xOCBDaGVja2luZyBj
b21taXQgNzhlZDUyOTdjNzM5IChpb3Rlc3RzOiBhZGQgdGVzdGluZyBzaGltIGZvciBzY3JpcHQt
c3R5bGUgcHl0aG9uIHRlc3RzKQoxNC8xOCBDaGVja2luZyBjb21taXQgOWI3ZGRiMzkwMzYwIChp
b3Rlc3RzOiB0ZWFjaCBydW5fam9iIHRvIGNhbmNlbCBwZW5kaW5nIGpvYnMpCjE1LzE4IENoZWNr
aW5nIGNvbW1pdCBiNmU0MjI2N2Q0YmMgKGlvdGVzdHM6IHRlYWNoIEZpbGVQYXRoIHRvIHByb2R1
Y2UgbXVsdGlwbGUgcGF0aHMpCldBUk5JTkc6IGxpbmUgb3ZlciA4MCBjaGFyYWN0ZXJzCiM2Mzog
RklMRTogdGVzdHMvcWVtdS1pb3Rlc3RzL2lvdGVzdHMucHk6MzkyOgorICAgICIiIkZpbGVQYXRo
IGlzIGEgc3BlY2lhbGl6YXRpb24gb2YgRmlsZVBhdGhzIHRoYXQgdGFrZXMgYSBzaW5nbGUgZmls
ZW5hbWUuIiIiCgp0b3RhbDogMCBlcnJvcnMsIDEgd2FybmluZ3MsIDY3IGxpbmVzIGNoZWNrZWQK
ClBhdGNoIDE1LzE4IGhhcyBzdHlsZSBwcm9ibGVtcywgcGxlYXNlIHJldmlldy4gIElmIGFueSBv
ZiB0aGVzZSBlcnJvcnMKYXJlIGZhbHNlIHBvc2l0aXZlcyByZXBvcnQgdGhlbSB0byB0aGUgbWFp
bnRhaW5lciwgc2VlCkNIRUNLUEFUQ0ggaW4gTUFJTlRBSU5FUlMuCjE2LzE4IENoZWNraW5nIGNv
bW1pdCBkNDhjOWVlMGJlYzkgKGlvdGVzdHM6IEFkZCB2aXJ0aW8tc2NzaSBkZXZpY2UgaGVscGVy
KQoxNy8xOCBDaGVja2luZyBjb21taXQgNzU1ZTFiMTE0NzhjIChpb3Rlc3RzOiBhZGQgdGVzdCAy
NTcgZm9yIGJpdG1hcC1tb2RlIGJhY2t1cHMpCldBUk5JTkc6IGFkZGVkLCBtb3ZlZCBvciBkZWxl
dGVkIGZpbGUocyksIGRvZXMgTUFJTlRBSU5FUlMgbmVlZCB1cGRhdGluZz8KIzExOiAKbmV3IGZp
bGUgbW9kZSAxMDA3NTUKCnRvdGFsOiAwIGVycm9ycywgMSB3YXJuaW5ncywgMjYxMiBsaW5lcyBj
aGVja2VkCgpQYXRjaCAxNy8xOCBoYXMgc3R5bGUgcHJvYmxlbXMsIHBsZWFzZSByZXZpZXcuICBJ
ZiBhbnkgb2YgdGhlc2UgZXJyb3JzCmFyZSBmYWxzZSBwb3NpdGl2ZXMgcmVwb3J0IHRoZW0gdG8g
dGhlIG1haW50YWluZXIsIHNlZQpDSEVDS1BBVENIIGluIE1BSU5UQUlORVJTLgoxOC8xOCBDaGVj
a2luZyBjb21taXQgMjZlNjQ3OTNmYzcxIChibG9jay9iYWNrdXA6IGxvb3NlbiByZXN0cmljdGlv
biBvbiByZWFkb25seSBiaXRtYXBzKQo9PT0gT1VUUFVUIEVORCA9PT0KClRlc3QgY29tbWFuZCBl
eGl0ZWQgd2l0aCBjb2RlOiAxCgoKVGhlIGZ1bGwgbG9nIGlzIGF2YWlsYWJsZSBhdApodHRwOi8v
cGF0Y2hldy5vcmcvbG9ncy8yMDE5MDcwMzIxNTU0Mi4xNjEyMy0xLWpzbm93QHJlZGhhdC5jb20v
dGVzdGluZy5jaGVja3BhdGNoLz90eXBlPW1lc3NhZ2UuCi0tLQpFbWFpbCBnZW5lcmF0ZWQgYXV0
b21hdGljYWxseSBieSBQYXRjaGV3IFtodHRwczovL3BhdGNoZXcub3JnL10uClBsZWFzZSBzZW5k
IHlvdXIgZmVlZGJhY2sgdG8gcGF0Y2hldy1kZXZlbEByZWRoYXQuY29t


