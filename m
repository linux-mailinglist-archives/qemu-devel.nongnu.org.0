Return-Path: <qemu-devel-bounces+lists+qemu-devel=lfdr.de@nongnu.org>
X-Original-To: lists+qemu-devel@lfdr.de
Delivered-To: lists+qemu-devel@lfdr.de
Received: from lists.gnu.org (lists.gnu.org [209.51.188.17])
	by mail.lfdr.de (Postfix) with ESMTPS id 0E41429F9A5
	for <lists+qemu-devel@lfdr.de>; Fri, 30 Oct 2020 01:27:09 +0100 (CET)
Received: from localhost ([::1]:44584 helo=lists1p.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.90_1)
	(envelope-from <qemu-devel-bounces+lists+qemu-devel=lfdr.de@nongnu.org>)
	id 1kYIG4-0004Ja-3D
	for lists+qemu-devel@lfdr.de; Thu, 29 Oct 2020 20:27:08 -0400
Received: from eggs.gnu.org ([2001:470:142:3::10]:37380)
 by lists.gnu.org with esmtps (TLS1.2:ECDHE_RSA_AES_256_GCM_SHA384:256)
 (Exim 4.90_1) (envelope-from <tsimpson@qualcomm.com>)
 id 1kYHpS-0000ZU-6e
 for qemu-devel@nongnu.org; Thu, 29 Oct 2020 19:59:38 -0400
Received: from alexa-out-sd-02.qualcomm.com ([199.106.114.39]:54880)
 by eggs.gnu.org with esmtps (TLS1.2:RSA_AES_256_CBC_SHA1:256)
 (Exim 4.90_1) (envelope-from <tsimpson@qualcomm.com>)
 id 1kYHpP-0004Kz-2i
 for qemu-devel@nongnu.org; Thu, 29 Oct 2020 19:59:37 -0400
DKIM-Signature: v=1; a=rsa-sha256; c=simple/simple;
 d=quicinc.com; i=@quicinc.com; q=dns/txt; s=qcdkim;
 t=1604015975; x=1635551975;
 h=from:to:cc:subject:date:message-id:in-reply-to:
 references:mime-version:content-transfer-encoding;
 bh=imU09Tt+d1ujYxvMKPP7vwVzxTmlGL4gnQuSe05AbUk=;
 b=Z5c3mzeX1jA9Iw0iJk1eAp5+75X5+Mv4xR7qjq/7jyrkNO56oBwv4cNc
 MmZUwD2w56I135l56f+AjqyoPXphsQDBdPNsGGNOzWU5ednAvtrB4oDHq
 sVKuPOdoaTz89JYmDQRod1ZAa8fdQAjJMLnUOT21aHeCmakbLNmNqKC9m 8=;
Received: from unknown (HELO ironmsg04-sd.qualcomm.com) ([10.53.140.144])
 by alexa-out-sd-02.qualcomm.com with ESMTP; 29 Oct 2020 16:58:55 -0700
X-QCInternal: smtphost
Received: from vu-tsimpson-aus.qualcomm.com (HELO
 vu-tsimpson1-aus.qualcomm.com) ([10.222.150.1])
 by ironmsg04-sd.qualcomm.com with ESMTP; 29 Oct 2020 16:58:55 -0700
Received: by vu-tsimpson1-aus.qualcomm.com (Postfix, from userid 47164)
 id 3F5F84115; Thu, 29 Oct 2020 18:58:55 -0500 (CDT)
From: Taylor Simpson <tsimpson@quicinc.com>
To: tsimpson@quicinc.com
Subject: [RFC PATCH v5 23/33] Hexagon (target/hexagon) opcode data structures
Date: Thu, 29 Oct 2020 18:58:40 -0500
Message-Id: <1604015931-23005-24-git-send-email-tsimpson@quicinc.com>
X-Mailer: git-send-email 2.7.4
In-Reply-To: <1604015931-23005-1-git-send-email-tsimpson@quicinc.com>
References: <1604015931-23005-1-git-send-email-tsimpson@quicinc.com>
MIME-Version: 1.0
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Received-SPF: pass client-ip=199.106.114.39;
 envelope-from=tsimpson@qualcomm.com; helo=alexa-out-sd-02.qualcomm.com
X-detected-operating-system: by eggs.gnu.org: First seen = 2020/10/29 19:58:53
X-ACL-Warn: Detected OS   = FreeBSD 9.x or newer [fuzzy]
X-Spam_score_int: -40
X-Spam_score: -4.1
X-Spam_bar: ----
X-Spam_report: (-4.1 / 5.0 requ) BAYES_00=-1.9, DKIM_SIGNED=0.1,
 DKIM_VALID=-0.1, DKIM_VALID_AU=-0.1, HEADER_FROM_DIFFERENT_DOMAINS=0.249,
 RCVD_IN_DNSWL_MED=-2.3, SPF_HELO_NONE=0.001,
 SPF_PASS=-0.001 autolearn=ham autolearn_force=no
X-Spam_action: no action
X-BeenThere: qemu-devel@nongnu.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: <qemu-devel.nongnu.org>
List-Unsubscribe: <https://lists.nongnu.org/mailman/options/qemu-devel>,
 <mailto:qemu-devel-request@nongnu.org?subject=unsubscribe>
List-Archive: <https://lists.nongnu.org/archive/html/qemu-devel>
List-Post: <mailto:qemu-devel@nongnu.org>
List-Help: <mailto:qemu-devel-request@nongnu.org?subject=help>
List-Subscribe: <https://lists.nongnu.org/mailman/listinfo/qemu-devel>,
 <mailto:qemu-devel-request@nongnu.org?subject=subscribe>
Cc: "open list:All patches CC here" <qemu-devel@nongnu.org>
Errors-To: qemu-devel-bounces+lists+qemu-devel=lfdr.de@nongnu.org
Sender: "Qemu-devel" <qemu-devel-bounces+lists+qemu-devel=lfdr.de@nongnu.org>

U2lnbmVkLW9mZi1ieTogVGF5bG9yIFNpbXBzb24gPHRzaW1wc29uQHF1aWNpbmMuY29tPgotLS0K
IHRhcmdldC9oZXhhZ29uL29wY29kZXMuaCB8ICA2MyArKysrKysrKysrKysrKysrKysrKysKIHRh
cmdldC9oZXhhZ29uL29wY29kZXMuYyB8IDE0MiArKysrKysrKysrKysrKysrKysrKysrKysrKysr
KysrKysrKysrKysrKysrKysrKwogMiBmaWxlcyBjaGFuZ2VkLCAyMDUgaW5zZXJ0aW9ucygrKQog
Y3JlYXRlIG1vZGUgMTAwNjQ0IHRhcmdldC9oZXhhZ29uL29wY29kZXMuaAogY3JlYXRlIG1vZGUg
MTAwNjQ0IHRhcmdldC9oZXhhZ29uL29wY29kZXMuYwoKZGlmZiAtLWdpdCBhL3RhcmdldC9oZXhh
Z29uL29wY29kZXMuaCBiL3RhcmdldC9oZXhhZ29uL29wY29kZXMuaApuZXcgZmlsZSBtb2RlIDEw
MDY0NAppbmRleCAwMDAwMDAwLi4xYWEyMDc0Ci0tLSAvZGV2L251bGwKKysrIGIvdGFyZ2V0L2hl
eGFnb24vb3Bjb2Rlcy5oCkBAIC0wLDAgKzEsNjMgQEAKKy8qCisgKiAgQ29weXJpZ2h0KGMpIDIw
MTktMjAyMCBRdWFsY29tbSBJbm5vdmF0aW9uIENlbnRlciwgSW5jLiBBbGwgUmlnaHRzIFJlc2Vy
dmVkLgorICoKKyAqICBUaGlzIHByb2dyYW0gaXMgZnJlZSBzb2Z0d2FyZTsgeW91IGNhbiByZWRp
c3RyaWJ1dGUgaXQgYW5kL29yIG1vZGlmeQorICogIGl0IHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUg
R05VIEdlbmVyYWwgUHVibGljIExpY2Vuc2UgYXMgcHVibGlzaGVkIGJ5CisgKiAgdGhlIEZyZWUg
U29mdHdhcmUgRm91bmRhdGlvbjsgZWl0aGVyIHZlcnNpb24gMiBvZiB0aGUgTGljZW5zZSwgb3IK
KyAqICAoYXQgeW91ciBvcHRpb24pIGFueSBsYXRlciB2ZXJzaW9uLgorICoKKyAqICBUaGlzIHBy
b2dyYW0gaXMgZGlzdHJpYnV0ZWQgaW4gdGhlIGhvcGUgdGhhdCBpdCB3aWxsIGJlIHVzZWZ1bCwK
KyAqICBidXQgV0lUSE9VVCBBTlkgV0FSUkFOVFk7IHdpdGhvdXQgZXZlbiB0aGUgaW1wbGllZCB3
YXJyYW50eSBvZgorICogIE1FUkNIQU5UQUJJTElUWSBvciBGSVRORVNTIEZPUiBBIFBBUlRJQ1VM
QVIgUFVSUE9TRS4gIFNlZSB0aGUKKyAqICBHTlUgR2VuZXJhbCBQdWJsaWMgTGljZW5zZSBmb3Ig
bW9yZSBkZXRhaWxzLgorICoKKyAqICBZb3Ugc2hvdWxkIGhhdmUgcmVjZWl2ZWQgYSBjb3B5IG9m
IHRoZSBHTlUgR2VuZXJhbCBQdWJsaWMgTGljZW5zZQorICogIGFsb25nIHdpdGggdGhpcyBwcm9n
cmFtOyBpZiBub3QsIHNlZSA8aHR0cDovL3d3dy5nbnUub3JnL2xpY2Vuc2VzLz4uCisgKi8KKwor
I2lmbmRlZiBIRVhBR09OX09QQ09ERVNfSAorI2RlZmluZSBIRVhBR09OX09QQ09ERVNfSAorCisj
aW5jbHVkZSAicWVtdS9iaXRtYXAuaCIKKyNpbmNsdWRlICJhdHRyaWJzLmgiCisKK3R5cGVkZWYg
ZW51bSB7CisjZGVmaW5lIE9QQ09ERShJSUQpIElJRAorI2luY2x1ZGUgIm9wY29kZXNfZGVmX2dl
bmVyYXRlZC5oIgorICAgIFhYX0xBU1RfT1BDT0RFCisjdW5kZWYgT1BDT0RFCit9IE9wY29kZTsK
KwordHlwZWRlZiBlbnVtIHsKKyAgICBOT1JNQUwsCisgICAgSEFMRiwKKyAgICBTVUJJTlNOX0Es
CisgICAgU1VCSU5TTl9MMSwKKyAgICBTVUJJTlNOX0wyLAorICAgIFNVQklOU05fUzEsCisgICAg
U1VCSU5TTl9TMiwKKyAgICBFWFRfbm9leHQsCisgICAgRVhUX21tdmVjLAorICAgIFhYX0xBU1Rf
RU5DX0NMQVNTCit9IEVuY0NsYXNzOworCitleHRlcm4gY29uc3QgY2hhciAqIGNvbnN0IG9wY29k
ZV9uYW1lc1tdOworCitleHRlcm4gY29uc3QgY2hhciAqIGNvbnN0IG9wY29kZV9yZWdpbmZvW107
CitleHRlcm4gY29uc3QgY2hhciAqIGNvbnN0IG9wY29kZV9ycmVnc1tdOworZXh0ZXJuIGNvbnN0
IGNoYXIgKiBjb25zdCBvcGNvZGVfd3JlZ3NbXTsKKwordHlwZWRlZiBzdHJ1Y3QgeworICAgIGNv
bnN0IGNoYXIgKiBjb25zdCBlbmNvZGluZzsKKyAgICBjb25zdCBFbmNDbGFzcyBlbmNfY2xhc3M7
Cit9IE9wY29kZUVuY29kaW5nOworCitleHRlcm4gY29uc3QgT3Bjb2RlRW5jb2Rpbmcgb3Bjb2Rl
X2VuY29kaW5nc1tYWF9MQVNUX09QQ09ERV07CisKK2V4dGVybiBERUNMQVJFX0JJVE1BUChvcGNv
ZGVfYXR0cmlic1tYWF9MQVNUX09QQ09ERV0sIEFfWlpfTEFTVEFUVFJJQik7CisKK2V4dGVybiB2
b2lkIG9wY29kZV9pbml0KHZvaWQpOworCitleHRlcm4gaW50IG9wY29kZV93aGljaF9pbW1lZGlh
dGVfaXNfZXh0ZW5kZWQoT3Bjb2RlIG9wY29kZSk7CisKKyNlbmRpZgpkaWZmIC0tZ2l0IGEvdGFy
Z2V0L2hleGFnb24vb3Bjb2Rlcy5jIGIvdGFyZ2V0L2hleGFnb24vb3Bjb2Rlcy5jCm5ldyBmaWxl
IG1vZGUgMTAwNjQ0CmluZGV4IDAwMDAwMDAuLjIwNDAwZjUKLS0tIC9kZXYvbnVsbAorKysgYi90
YXJnZXQvaGV4YWdvbi9vcGNvZGVzLmMKQEAgLTAsMCArMSwxNDIgQEAKKy8qCisgKiAgQ29weXJp
Z2h0KGMpIDIwMTktMjAyMCBRdWFsY29tbSBJbm5vdmF0aW9uIENlbnRlciwgSW5jLiBBbGwgUmln
aHRzIFJlc2VydmVkLgorICoKKyAqICBUaGlzIHByb2dyYW0gaXMgZnJlZSBzb2Z0d2FyZTsgeW91
IGNhbiByZWRpc3RyaWJ1dGUgaXQgYW5kL29yIG1vZGlmeQorICogIGl0IHVuZGVyIHRoZSB0ZXJt
cyBvZiB0aGUgR05VIEdlbmVyYWwgUHVibGljIExpY2Vuc2UgYXMgcHVibGlzaGVkIGJ5CisgKiAg
dGhlIEZyZWUgU29mdHdhcmUgRm91bmRhdGlvbjsgZWl0aGVyIHZlcnNpb24gMiBvZiB0aGUgTGlj
ZW5zZSwgb3IKKyAqICAoYXQgeW91ciBvcHRpb24pIGFueSBsYXRlciB2ZXJzaW9uLgorICoKKyAq
ICBUaGlzIHByb2dyYW0gaXMgZGlzdHJpYnV0ZWQgaW4gdGhlIGhvcGUgdGhhdCBpdCB3aWxsIGJl
IHVzZWZ1bCwKKyAqICBidXQgV0lUSE9VVCBBTlkgV0FSUkFOVFk7IHdpdGhvdXQgZXZlbiB0aGUg
aW1wbGllZCB3YXJyYW50eSBvZgorICogIE1FUkNIQU5UQUJJTElUWSBvciBGSVRORVNTIEZPUiBB
IFBBUlRJQ1VMQVIgUFVSUE9TRS4gIFNlZSB0aGUKKyAqICBHTlUgR2VuZXJhbCBQdWJsaWMgTGlj
ZW5zZSBmb3IgbW9yZSBkZXRhaWxzLgorICoKKyAqICBZb3Ugc2hvdWxkIGhhdmUgcmVjZWl2ZWQg
YSBjb3B5IG9mIHRoZSBHTlUgR2VuZXJhbCBQdWJsaWMgTGljZW5zZQorICogIGFsb25nIHdpdGgg
dGhpcyBwcm9ncmFtOyBpZiBub3QsIHNlZSA8aHR0cDovL3d3dy5nbnUub3JnL2xpY2Vuc2VzLz4u
CisgKi8KKworLyoKKyAqIG9wY29kZXMuYworICoKKyAqIGRhdGEgdGFibGVzIGdlbmVyYXRlZCBh
dXRvbWF0aWNhbGx5CisgKiBNYXliZSBzb21lIGZ1bmN0aW9ucyB0b28KKyAqLworCisjaW5jbHVk
ZSAicWVtdS9vc2RlcC5oIgorI2luY2x1ZGUgIm9wY29kZXMuaCIKKyNpbmNsdWRlICJkZWNvZGUu
aCIKKworI2RlZmluZSBWRUNfREVTQ1IoQSwgQiwgQykgREVTQ1IoQSwgQiwgQykKKyNkZWZpbmUg
RE9OQU1FKFgpICNYCisKK2NvbnN0IGNoYXIgKiBjb25zdCBvcGNvZGVfbmFtZXNbXSA9IHsKKyNk
ZWZpbmUgT1BDT0RFKElJRCkgRE9OQU1FKElJRCkKKyNpbmNsdWRlICJvcGNvZGVzX2RlZl9nZW5l
cmF0ZWQuaCIKKyAgICBOVUxMCisjdW5kZWYgT1BDT0RFCit9OworCitjb25zdCBjaGFyICogY29u
c3Qgb3Bjb2RlX3JlZ2luZm9bXSA9IHsKKyNkZWZpbmUgSU1NSU5GTyhUQUcsIFNJR04sIFNJWkUs
IFNIQU1ULCBTSUdOMiwgU0laRTIsIFNIQU1UMikgICAgLyogbm90aGluZyAqLworI2RlZmluZSBS
RUdJTkZPKFRBRywgUkVHSU5GTywgUlJFR1MsIFdSRUdTKSBSRUdJTkZPLAorI2luY2x1ZGUgIm9w
X3JlZ3NfZ2VuZXJhdGVkLmgiCisgICAgTlVMTAorI3VuZGVmIFJFR0lORk8KKyN1bmRlZiBJTU1J
TkZPCit9OworCisKK2NvbnN0IGNoYXIgKiBjb25zdCBvcGNvZGVfcnJlZ3NbXSA9IHsKKyNkZWZp
bmUgSU1NSU5GTyhUQUcsIFNJR04sIFNJWkUsIFNIQU1ULCBTSUdOMiwgU0laRTIsIFNIQU1UMikg
ICAgLyogbm90aGluZyAqLworI2RlZmluZSBSRUdJTkZPKFRBRywgUkVHSU5GTywgUlJFR1MsIFdS
RUdTKSBSUkVHUywKKyNpbmNsdWRlICJvcF9yZWdzX2dlbmVyYXRlZC5oIgorICAgIE5VTEwKKyN1
bmRlZiBSRUdJTkZPCisjdW5kZWYgSU1NSU5GTworfTsKKworCitjb25zdCBjaGFyICogY29uc3Qg
b3Bjb2RlX3dyZWdzW10gPSB7CisjZGVmaW5lIElNTUlORk8oVEFHLCBTSUdOLCBTSVpFLCBTSEFN
VCwgU0lHTjIsIFNJWkUyLCBTSEFNVDIpICAgIC8qIG5vdGhpbmcgKi8KKyNkZWZpbmUgUkVHSU5G
TyhUQUcsIFJFR0lORk8sIFJSRUdTLCBXUkVHUykgV1JFR1MsCisjaW5jbHVkZSAib3BfcmVnc19n
ZW5lcmF0ZWQuaCIKKyAgICBOVUxMCisjdW5kZWYgUkVHSU5GTworI3VuZGVmIElNTUlORk8KK307
CisKK2NvbnN0IGNoYXIgKiBjb25zdCBvcGNvZGVfc2hvcnRfc2VtYW50aWNzW10gPSB7CisjZGVm
aW5lIERFRl9TSE9SVENPREUoVEFHLCBTSE9SVENPREUpICAgICAgICAgICAgICBbVEFHXSA9ICNT
SE9SVENPREUsCisjaW5jbHVkZSAic2hvcnRjb2RlX2dlbmVyYXRlZC5oIgorI3VuZGVmIERFRl9T
SE9SVENPREUKKyAgICBOVUxMCit9OworCitERUNMQVJFX0JJVE1BUChvcGNvZGVfYXR0cmlic1tY
WF9MQVNUX09QQ09ERV0sIEFfWlpfTEFTVEFUVFJJQik7CisKK3N0YXRpYyB2b2lkIGluaXRfYXR0
cmlicyhpbnQgdGFnLCAuLi4pCit7CisgICAgdmFfbGlzdCBhcDsKKyAgICBpbnQgYXR0cjsKKyAg
ICB2YV9zdGFydChhcCwgdGFnKTsKKyAgICB3aGlsZSAoKGF0dHIgPSB2YV9hcmcoYXAsIGludCkp
ICE9IDApIHsKKyAgICAgICAgc2V0X2JpdChhdHRyLCBvcGNvZGVfYXR0cmlic1t0YWddKTsKKyAg
ICB9Cit9CisKK2NvbnN0IE9wY29kZUVuY29kaW5nIG9wY29kZV9lbmNvZGluZ3NbXSA9IHsKKyNk
ZWZpbmUgREVGX0VOQzMyKE9QQ09ERSwgRU5DU1RSKSBcCisgICAgW09QQ09ERV0gPSB7IC5lbmNv
ZGluZyA9IEVOQ1NUUiB9LAorCisjZGVmaW5lIERFRl9FTkNfU1VCSU5TTihPUENPREUsIENMQVNT
LCBFTkNTVFIpIFwKKyAgICBbT1BDT0RFXSA9IHsgLmVuY29kaW5nID0gRU5DU1RSLCAuZW5jX2Ns
YXNzID0gQ0xBU1MgfSwKKworI2RlZmluZSBERUZfRVhUX0VOQyhPUENPREUsIENMQVNTLCBFTkNT
VFIpIFwKKyAgICBbT1BDT0RFXSA9IHsgLmVuY29kaW5nID0gRU5DU1RSLCAuZW5jX2NsYXNzID0g
Q0xBU1MgfSwKKworI2luY2x1ZGUgImltcG9ydGVkL2VuY29kZS5kZWYiCisKKyN1bmRlZiBERUZf
RU5DMzIKKyN1bmRlZiBERUZfRU5DX1NVQklOU04KKyN1bmRlZiBERUZfRVhUX0VOQworfTsKKwor
dm9pZCBvcGNvZGVfaW5pdCh2b2lkKQoreworICAgIGluaXRfYXR0cmlicygwLCAwKTsKKworI2Rl
ZmluZSBBVFRSSUJTKC4uLikgLCAjIyBfX1ZBX0FSR1NfXywgMAorI2RlZmluZSBPUF9BVFRSSUIo
VEFHLCBBUkdTKSBpbml0X2F0dHJpYnMoVEFHIEFSR1MpOworI2luY2x1ZGUgIm9wX2F0dHJpYnNf
Z2VuZXJhdGVkLmgiCisjdW5kZWYgT1BfQVRUUklCCisjdW5kZWYgQVRUUklCUworCisgICAgZGVj
b2RlX2luaXQoKTsKK30KKworCisjZGVmaW5lIE5FRURMRSAiSU1NRVhUKCIKKworaW50IG9wY29k
ZV93aGljaF9pbW1lZGlhdGVfaXNfZXh0ZW5kZWQoT3Bjb2RlIG9wY29kZSkKK3sKKyAgICBjb25z
dCBjaGFyICpwOworCisgICAgZ19hc3NlcnQob3Bjb2RlIDwgWFhfTEFTVF9PUENPREUpOworICAg
IGdfYXNzZXJ0KEdFVF9BVFRSSUIob3Bjb2RlLCBBX0VYVEVOREFCTEUpKTsKKworICAgIHAgPSBv
cGNvZGVfc2hvcnRfc2VtYW50aWNzW29wY29kZV07CisgICAgcCA9IHN0cnN0cihwLCBORUVETEUp
OworICAgIGdfYXNzZXJ0KHApOworICAgIHAgKz0gc3RybGVuKE5FRURMRSk7CisgICAgd2hpbGUg
KGlzc3BhY2UoKnApKSB7CisgICAgICAgIHArKzsKKyAgICB9CisgICAgLyogbG93ZXIgaXMgYWx3
YXlzIGltbSAwLCB1cHBlciBhbHdheXMgaW1tIDEuICovCisgICAgaWYgKGlzbG93ZXIoKnApKSB7
CisgICAgICAgIHJldHVybiAwOworICAgIH0gZWxzZSBpZiAoaXN1cHBlcigqcCkpIHsKKyAgICAg
ICAgcmV0dXJuIDE7CisgICAgfSBlbHNlIHsKKyAgICAgICAgZ19hc3NlcnRfbm90X3JlYWNoZWQo
KTsKKyAgICB9Cit9Ci0tIAoyLjcuNAoK

