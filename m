Return-Path: <qemu-devel-bounces+lists+qemu-devel=lfdr.de@nongnu.org>
X-Original-To: lists+qemu-devel@lfdr.de
Delivered-To: lists+qemu-devel@lfdr.de
Received: from lists.gnu.org (lists.gnu.org [209.51.188.17])
	by mail.lfdr.de (Postfix) with ESMTPS id 1D0F02DC3C4
	for <lists+qemu-devel@lfdr.de>; Wed, 16 Dec 2020 17:12:44 +0100 (CET)
Received: from localhost ([::1]:48324 helo=lists1p.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.90_1)
	(envelope-from <qemu-devel-bounces+lists+qemu-devel=lfdr.de@nongnu.org>)
	id 1kpZPv-0001e1-3w
	for lists+qemu-devel@lfdr.de; Wed, 16 Dec 2020 11:12:43 -0500
Received: from eggs.gnu.org ([2001:470:142:3::10]:55656)
 by lists.gnu.org with esmtps (TLS1.2:ECDHE_RSA_AES_256_GCM_SHA384:256)
 (Exim 4.90_1) (envelope-from <stefanha@redhat.com>)
 id 1kpZN1-00084D-8r
 for qemu-devel@nongnu.org; Wed, 16 Dec 2020 11:09:43 -0500
Received: from us-smtp-delivery-124.mimecast.com ([216.205.24.124]:30196)
 by eggs.gnu.org with esmtps (TLS1.2:ECDHE_RSA_AES_256_CBC_SHA1:256)
 (Exim 4.90_1) (envelope-from <stefanha@redhat.com>)
 id 1kpZMy-0004fI-RX
 for qemu-devel@nongnu.org; Wed, 16 Dec 2020 11:09:42 -0500
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=redhat.com;
 s=mimecast20190719; t=1608134980;
 h=from:from:reply-to:subject:subject:date:date:message-id:message-id:
 to:to:cc:cc:mime-version:mime-version:content-type:content-type:
 content-transfer-encoding:content-transfer-encoding:
 in-reply-to:in-reply-to:references:references;
 bh=VAFRRhFHQ0P8G3zRAkxweGOxxR62G/qeujXxMNbXzxM=;
 b=dJHyzQBggDIXjA7Y5ZiW2Bj3EoWAj5CkuTxXxnLDdbsVRtYQp/98fp0SQJARWrw8E8genG
 SiFsleivBJ3sKxHMOOYhRlnEAaI8e4GIhlksvRM6BfOeHTqb9ZhPkS+Z8r41UlWlfaTfO0
 nQrVZkmDOP0AfIMTQRif7XBnA4sIDZs=
Received: from mimecast-mx01.redhat.com (mimecast-mx01.redhat.com
 [209.132.183.4]) (Using TLS) by relay.mimecast.com with ESMTP id
 us-mta-239-a2bUOxt-PNCEuWuvFy_1uw-1; Wed, 16 Dec 2020 11:09:37 -0500
X-MC-Unique: a2bUOxt-PNCEuWuvFy_1uw-1
Received: from smtp.corp.redhat.com (int-mx02.intmail.prod.int.phx2.redhat.com
 [10.5.11.12])
 (using TLSv1.2 with cipher AECDH-AES256-SHA (256/256 bits))
 (No client certificate requested)
 by mimecast-mx01.redhat.com (Postfix) with ESMTPS id 12992192202D;
 Wed, 16 Dec 2020 16:09:36 +0000 (UTC)
Received: from localhost (ovpn-115-151.ams2.redhat.com [10.36.115.151])
 by smtp.corp.redhat.com (Postfix) with ESMTP id 85C4060C15;
 Wed, 16 Dec 2020 16:09:35 +0000 (UTC)
From: Stefan Hajnoczi <stefanha@redhat.com>
To: qemu-devel@nongnu.org
Subject: [PATCH v2 2/3] tracing: convert documentation to rST
Date: Wed, 16 Dec 2020 16:09:22 +0000
Message-Id: <20201216160923.722894-3-stefanha@redhat.com>
In-Reply-To: <20201216160923.722894-1-stefanha@redhat.com>
References: <20201216160923.722894-1-stefanha@redhat.com>
MIME-Version: 1.0
X-Scanned-By: MIMEDefang 2.79 on 10.5.11.12
Authentication-Results: relay.mimecast.com;
 auth=pass smtp.auth=CUSA124A263 smtp.mailfrom=stefanha@redhat.com
X-Mimecast-Spam-Score: 0
X-Mimecast-Originator: redhat.com
Content-Transfer-Encoding: base64
Content-Type: text/plain; charset="US-ASCII"
Received-SPF: pass client-ip=216.205.24.124; envelope-from=stefanha@redhat.com;
 helo=us-smtp-delivery-124.mimecast.com
X-Spam_score_int: -3
X-Spam_score: -0.4
X-Spam_bar: /
X-Spam_report: (-0.4 / 5.0 requ) BAYES_00=-1.9, DKIMWL_WL_HIGH=-0.001,
 DKIM_SIGNED=0.1, DKIM_VALID=-0.1, DKIM_VALID_AU=-0.1, DKIM_VALID_EF=-0.1,
 MIME_BASE64_TEXT=1.741, RCVD_IN_DNSWL_NONE=-0.0001, RCVD_IN_MSPIKE_H3=0.001,
 RCVD_IN_MSPIKE_WL=0.001, SPF_HELO_NONE=0.001,
 SPF_PASS=-0.001 autolearn=ham autolearn_force=no
X-Spam_action: no action
X-BeenThere: qemu-devel@nongnu.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: <qemu-devel.nongnu.org>
List-Unsubscribe: <https://lists.nongnu.org/mailman/options/qemu-devel>,
 <mailto:qemu-devel-request@nongnu.org?subject=unsubscribe>
List-Archive: <https://lists.nongnu.org/archive/html/qemu-devel>
List-Post: <mailto:qemu-devel@nongnu.org>
List-Help: <mailto:qemu-devel-request@nongnu.org?subject=help>
List-Subscribe: <https://lists.nongnu.org/mailman/listinfo/qemu-devel>,
 <mailto:qemu-devel-request@nongnu.org?subject=subscribe>
Cc: Peter Maydell <peter.maydell@linaro.org>,
 Stefan Hajnoczi <stefanha@redhat.com>
Errors-To: qemu-devel-bounces+lists+qemu-devel=lfdr.de@nongnu.org
Sender: "Qemu-devel" <qemu-devel-bounces+lists+qemu-devel=lfdr.de@nongnu.org>

VGhpcyBpcyBhIHNpbXBsZSByU1QgY29udmVyc2lvbiBvZiB0aGUgZG9jdW1lbnRhdGlvbi4KClJl
dmlld2VkLWJ5OiBQZXRlciBNYXlkZWxsIDxwZXRlci5tYXlkZWxsQGxpbmFyby5vcmc+ClNpZ25l
ZC1vZmYtYnk6IFN0ZWZhbiBIYWpub2N6aSA8c3RlZmFuaGFAcmVkaGF0LmNvbT4KLS0tCiBkb2Nz
L2RldmVsL2luZGV4LnJzdCAgICAgICAgICAgICAgICAgICAgfCAgIDEgKwogZG9jcy9kZXZlbC97
dHJhY2luZy50eHQgPT4gdHJhY2luZy5yc3R9IHwgMTM0ICsrKysrKysrKysrKysrLS0tLS0tLS0t
LQogMiBmaWxlcyBjaGFuZ2VkLCA4MSBpbnNlcnRpb25zKCspLCA1NCBkZWxldGlvbnMoLSkKIHJl
bmFtZSBkb2NzL2RldmVsL3t0cmFjaW5nLnR4dCA9PiB0cmFjaW5nLnJzdH0gKDg5JSkKCmRpZmYg
LS1naXQgYS9kb2NzL2RldmVsL2luZGV4LnJzdCBiL2RvY3MvZGV2ZWwvaW5kZXgucnN0CmluZGV4
IGYxMGVkNzdlNGMuLmMzNDE0YzFkMTcgMTAwNjQ0Ci0tLSBhL2RvY3MvZGV2ZWwvaW5kZXgucnN0
CisrKyBiL2RvY3MvZGV2ZWwvaW5kZXgucnN0CkBAIC0yNyw2ICsyNyw3IEBAIENvbnRlbnRzOgog
ICAgc2VjdXJlLWNvZGluZy1wcmFjdGljZXMKICAgIHRjZwogICAgdGNnLWljb3VudAorICAgdHJh
Y2luZwogICAgbXVsdGktdGhyZWFkLXRjZwogICAgdGNnLXBsdWdpbnMKICAgIGJpdG9wcwpkaWZm
IC0tZ2l0IGEvZG9jcy9kZXZlbC90cmFjaW5nLnR4dCBiL2RvY3MvZGV2ZWwvdHJhY2luZy5yc3QK
c2ltaWxhcml0eSBpbmRleCA4OSUKcmVuYW1lIGZyb20gZG9jcy9kZXZlbC90cmFjaW5nLnR4dApy
ZW5hbWUgdG8gZG9jcy9kZXZlbC90cmFjaW5nLnJzdAppbmRleCBiZjYxN2JhOTc2Li43NmNjMWIy
NGZhIDEwMDY0NAotLS0gYS9kb2NzL2RldmVsL3RyYWNpbmcudHh0CisrKyBiL2RvY3MvZGV2ZWwv
dHJhY2luZy5yc3QKQEAgLTEsMzIgKzEsMzggQEAKLT0gVHJhY2luZyA9Cis9PT09PT09CitUcmFj
aW5nCis9PT09PT09CiAKLT09IEludHJvZHVjdGlvbiA9PQorSW50cm9kdWN0aW9uCis9PT09PT09
PT09PT0KIAogVGhpcyBkb2N1bWVudCBkZXNjcmliZXMgdGhlIHRyYWNpbmcgaW5mcmFzdHJ1Y3R1
cmUgaW4gUUVNVSBhbmQgaG93IHRvIHVzZSBpdAogZm9yIGRlYnVnZ2luZywgcHJvZmlsaW5nLCBh
bmQgb2JzZXJ2aW5nIGV4ZWN1dGlvbi4KIAotPT0gUXVpY2tzdGFydCA9PQorUXVpY2tzdGFydAor
PT09PT09PT09PQogCi0xLiBCdWlsZCB3aXRoIHRoZSAnc2ltcGxlJyB0cmFjZSBiYWNrZW5kOgor
MS4gQnVpbGQgd2l0aCB0aGUgJ3NpbXBsZScgdHJhY2UgYmFja2VuZDo6CiAKICAgICAuL2NvbmZp
Z3VyZSAtLWVuYWJsZS10cmFjZS1iYWNrZW5kcz1zaW1wbGUKICAgICBtYWtlCiAKLTIuIENyZWF0
ZSBhIGZpbGUgd2l0aCB0aGUgZXZlbnRzIHlvdSB3YW50IHRvIHRyYWNlOgorMi4gQ3JlYXRlIGEg
ZmlsZSB3aXRoIHRoZSBldmVudHMgeW91IHdhbnQgdG8gdHJhY2U6OgogCi0gICBlY2hvIG1lbW9y
eV9yZWdpb25fb3BzX3JlYWQgPi90bXAvZXZlbnRzCisgICAgZWNobyBtZW1vcnlfcmVnaW9uX29w
c19yZWFkID4vdG1wL2V2ZW50cwogCi0zLiBSdW4gdGhlIHZpcnR1YWwgbWFjaGluZSB0byBwcm9k
dWNlIGEgdHJhY2UgZmlsZToKKzMuIFJ1biB0aGUgdmlydHVhbCBtYWNoaW5lIHRvIHByb2R1Y2Ug
YSB0cmFjZSBmaWxlOjoKIAogICAgIHFlbXUgLS10cmFjZSBldmVudHM9L3RtcC9ldmVudHMgLi4u
ICMgeW91ciBub3JtYWwgUUVNVSBpbnZvY2F0aW9uCiAKLTQuIFByZXR0eS1wcmludCB0aGUgYmlu
YXJ5IHRyYWNlIGZpbGU6Cis0LiBQcmV0dHktcHJpbnQgdGhlIGJpbmFyeSB0cmFjZSBmaWxlOjoK
IAogICAgIC4vc2NyaXB0cy9zaW1wbGV0cmFjZS5weSB0cmFjZS1ldmVudHMtYWxsIHRyYWNlLSog
IyBPdmVycmlkZSAqIHdpdGggUUVNVSA8cGlkPgogCi09PSBUcmFjZSBldmVudHMgPT0KK1RyYWNl
IGV2ZW50cworPT09PT09PT09PT09CiAKLT09PSBTdWItZGlyZWN0b3J5IHNldHVwID09PQorU3Vi
LWRpcmVjdG9yeSBzZXR1cAorLS0tLS0tLS0tLS0tLS0tLS0tLQogCiBFYWNoIGRpcmVjdG9yeSBp
biB0aGUgc291cmNlIHRyZWUgY2FuIGRlY2xhcmUgYSBzZXQgb2Ygc3RhdGljIHRyYWNlIGV2ZW50
cwogaW4gYSBsb2NhbCAidHJhY2UtZXZlbnRzIiBmaWxlLiBBbGwgZGlyZWN0b3JpZXMgd2hpY2gg
Y29udGFpbiAidHJhY2UtZXZlbnRzIgpAQCAtNTAsNyArNTYsNyBAQCBJbiB0aGUgc3ViLWRpcmVj
dG9yeSB0aGUgZm9sbG93aW5nIGZpbGVzIHdpbGwgYmUgYXV0b21hdGljYWxseSBnZW5lcmF0ZWQK
ICAtIHRyYWNlLXVzdC5oIC0gVVNUIGV2ZW50IHByb2JlIGhlbHBlciBkZWNsYXJhdGlvbnMKIAog
U291cmNlIGZpbGVzIGluIHRoZSBzdWItZGlyZWN0b3J5IHNob3VsZCAjaW5jbHVkZSB0aGUgbG9j
YWwgJ3RyYWNlLmgnIGZpbGUsCi13aXRob3V0IGFueSBzdWItZGlyZWN0b3J5IHBhdGggcHJlZml4
LiBlZyBpby9jaGFubmVsLWJ1ZmZlci5jIHdvdWxkIGRvCit3aXRob3V0IGFueSBzdWItZGlyZWN0
b3J5IHBhdGggcHJlZml4LiBlZyBpby9jaGFubmVsLWJ1ZmZlci5jIHdvdWxkIGRvOjoKIAogICAj
aW5jbHVkZSAidHJhY2UuaCIKIApAQCAtNjMsOSArNjksMTAgQEAgVGhlIHRvcCBsZXZlbCBkaXJl
Y3RvcnkgZ2VuZXJhdGVzIHRyYWNlIGZpbGVzIHdpdGggYSBmaWxlbmFtZSBwcmVmaXggb2YKICJ0
cmFjZS90cmFjZS1yb290IiBpbnN0ZWFkIG9mIGp1c3QgInRyYWNlIi4gVGhpcyBpcyB0byBhdm9p
ZCBhbWJpZ3VpdHkgYmV0d2VlbgogYSB0cmFjZS5oIGluIHRoZSBjdXJyZW50IGRpcmVjdG9yeSwg
dnMgdGhlIHRvcCBsZXZlbCBkaXJlY3RvcnkuCiAKLT09PSBVc2luZyB0cmFjZSBldmVudHMgPT09
CitVc2luZyB0cmFjZSBldmVudHMKKy0tLS0tLS0tLS0tLS0tLS0tLQogCi1UcmFjZSBldmVudHMg
YXJlIGludm9rZWQgZGlyZWN0bHkgZnJvbSBzb3VyY2UgY29kZSBsaWtlIHRoaXM6CitUcmFjZSBl
dmVudHMgYXJlIGludm9rZWQgZGlyZWN0bHkgZnJvbSBzb3VyY2UgY29kZSBsaWtlIHRoaXM6Ogog
CiAgICAgI2luY2x1ZGUgInRyYWNlLmgiICAvKiBuZWVkZWQgZm9yIHRyYWNlIGV2ZW50IHByb3Rv
dHlwZSAqLwogICAgIApAQCAtODIsNyArODksOCBAQCBUcmFjZSBldmVudHMgYXJlIGludm9rZWQg
ZGlyZWN0bHkgZnJvbSBzb3VyY2UgY29kZSBsaWtlIHRoaXM6CiAgICAgICAgIHJldHVybiBwdHI7
CiAgICAgfQogCi09PT0gRGVjbGFyaW5nIHRyYWNlIGV2ZW50cyA9PT0KK0RlY2xhcmluZyB0cmFj
ZSBldmVudHMKKy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0KIAogVGhlICJ0cmFjZXRvb2wiIHNjcmlw
dCBwcm9kdWNlcyB0aGUgdHJhY2UuaCBoZWFkZXIgZmlsZSB3aGljaCBpcyBpbmNsdWRlZCBieQog
ZXZlcnkgc291cmNlIGZpbGUgdGhhdCB1c2VzIHRyYWNlIGV2ZW50cy4gIFNpbmNlIG1hbnkgc291
cmNlIGZpbGVzIGluY2x1ZGUKQEAgLTExNiwxMyArMTI0LDE0IEBAIEZvcm1hdCBzdHJpbmdzIG11
c3Qgbm90IGVuZCB3aXRoIGEgbmV3bGluZSBjaGFyYWN0ZXIuICBJdCBpcyB0aGUgcmVzcG9uc2li
aWxpdHkKIG9mIGJhY2tlbmRzIHRvIGFkYXB0IGxpbmUgZW5kaW5nIGZvciBwcm9wZXIgbG9nZ2lu
Zy4KIAogRWFjaCBldmVudCBkZWNsYXJhdGlvbiB3aWxsIHN0YXJ0IHdpdGggdGhlIGV2ZW50IG5h
bWUsIHRoZW4gaXRzIGFyZ3VtZW50cywKLWZpbmFsbHkgYSBmb3JtYXQgc3RyaW5nIGZvciBwcmV0
dHktcHJpbnRpbmcuIEZvciBleGFtcGxlOgorZmluYWxseSBhIGZvcm1hdCBzdHJpbmcgZm9yIHBy
ZXR0eS1wcmludGluZy4gRm9yIGV4YW1wbGU6OgogCiAgICAgcWVtdV92bWFsbG9jKHNpemVfdCBz
aXplLCB2b2lkICpwdHIpICJzaXplICV6dSBwdHIgJXAiCiAgICAgcWVtdV92ZnJlZSh2b2lkICpw
dHIpICJwdHIgJXAiCiAKIAotPT09IEhpbnRzIGZvciBhZGRpbmcgbmV3IHRyYWNlIGV2ZW50cyA9
PT0KK0hpbnRzIGZvciBhZGRpbmcgbmV3IHRyYWNlIGV2ZW50cworLS0tLS0tLS0tLS0tLS0tLS0t
LS0tLS0tLS0tLS0tLS0tCiAKIDEuIFRyYWNlIHN0YXRlIGNoYW5nZXMgaW4gdGhlIGNvZGUuICBJ
bnRlcmVzdGluZyBwb2ludHMgaW4gdGhlIGNvZGUgdXN1YWxseQogICAgaW52b2x2ZSBhIHN0YXRl
IGNoYW5nZSBsaWtlIHN0YXJ0aW5nLCBzdG9wcGluZywgYWxsb2NhdGluZywgZnJlZWluZy4gIFN0
YXRlCkBAIC0xNDEsNyArMTUwLDggQEAgZmluYWxseSBhIGZvcm1hdCBzdHJpbmcgZm9yIHByZXR0
eS1wcmludGluZy4gRm9yIGV4YW1wbGU6CiA0LiBOYW1lIHRyYWNlIGV2ZW50cyBhZnRlciB0aGVp
ciBmdW5jdGlvbi4gIElmIHRoZXJlIGFyZSBtdWx0aXBsZSB0cmFjZSBldmVudHMKICAgIGluIG9u
ZSBmdW5jdGlvbiwgYXBwZW5kIGEgdW5pcXVlIGRpc3Rpbmd1aXNoZXIgYXQgdGhlIGVuZCBvZiB0
aGUgbmFtZS4KIAotPT0gR2VuZXJpYyBpbnRlcmZhY2UgYW5kIG1vbml0b3IgY29tbWFuZHMgPT0K
K0dlbmVyaWMgaW50ZXJmYWNlIGFuZCBtb25pdG9yIGNvbW1hbmRzCis9PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PQogCiBZb3UgY2FuIHByb2dyYW1tYXRpY2FsbHkgcXVlcnkg
YW5kIGNvbnRyb2wgdGhlIHN0YXRlIG9mIHRyYWNlIGV2ZW50cyB0aHJvdWdoIGEKIGJhY2tlbmQt
YWdub3N0aWMgaW50ZXJmYWNlIHByb3ZpZGVkIGJ5IHRoZSBoZWFkZXIgInRyYWNlL2NvbnRyb2wu
aCIuCkBAIC0xNTIsMTEgKzE2MiwxMSBAQCBoZWFkZXIgInRyYWNlL2NvbnRyb2wuaCIgdG8gc2Vl
IHdoaWNoIHJvdXRpbmVzIGFyZSBiYWNrZW5kLWRlcGVuZGVudCkuCiAKIFRoZSBzdGF0ZSBvZiBl
dmVudHMgY2FuIGFsc28gYmUgcXVlcmllZCBhbmQgbW9kaWZpZWQgdGhyb3VnaCBtb25pdG9yIGNv
bW1hbmRzOgogCi0qIGluZm8gdHJhY2UtZXZlbnRzCisqIGBgaW5mbyB0cmFjZS1ldmVudHNgYAog
ICBWaWV3IGF2YWlsYWJsZSB0cmFjZSBldmVudHMgYW5kIHRoZWlyIHN0YXRlLiAgU3RhdGUgMSBt
ZWFucyBlbmFibGVkLCBzdGF0ZSAwCiAgIG1lYW5zIGRpc2FibGVkLgogCi0qIHRyYWNlLWV2ZW50
IE5BTUUgb258b2ZmCisqIGBgdHJhY2UtZXZlbnQgTkFNRSBvbnxvZmZgYAogICBFbmFibGUvZGlz
YWJsZSBhIGdpdmVuIHRyYWNlIGV2ZW50IG9yIGEgZ3JvdXAgb2YgZXZlbnRzICh1c2luZyB3aWxk
Y2FyZHMpLgogCiBUaGUgIi0tdHJhY2UgZXZlbnRzPTxmaWxlPiIgY29tbWFuZCBsaW5lIGFyZ3Vt
ZW50IGNhbiBiZSB1c2VkIHRvIGVuYWJsZSB0aGUKQEAgLTE3MCwxMSArMTgwLDEyIEBAIHRvIGVu
YWJsZSBhbiBlbnRpcmUgZmFtaWx5IG9mIGV2ZW50cyBidXQgb25lIG5vaXN5IGV2ZW50IG5lZWRz
IHRvIGJlIGRpc2FibGVkLgogV2lsZGNhcmQgbWF0Y2hpbmcgaXMgc3VwcG9ydGVkIGluIGJvdGgg
dGhlIG1vbml0b3IgY29tbWFuZCAidHJhY2UtZXZlbnQiIGFuZCB0aGUKIGV2ZW50cyBsaXN0IGZp
bGUuIFRoYXQgbWVhbnMgeW91IGNhbiBlbmFibGUvZGlzYWJsZSB0aGUgZXZlbnRzIGhhdmluZyBh
IGNvbW1vbgogcHJlZml4IGluIGEgYmF0Y2guIEZvciBleGFtcGxlLCB2aXJ0aW8tYmxrIHRyYWNl
IGV2ZW50cyBjb3VsZCBiZSBlbmFibGVkIHVzaW5nCi10aGUgZm9sbG93aW5nIG1vbml0b3IgY29t
bWFuZDoKK3RoZSBmb2xsb3dpbmcgbW9uaXRvciBjb21tYW5kOjoKIAogICAgIHRyYWNlLWV2ZW50
IHZpcnRpb19ibGtfKiBvbgogCi09PSBUcmFjZSBiYWNrZW5kcyA9PQorVHJhY2UgYmFja2VuZHMK
Kz09PT09PT09PT09PT09CiAKIFRoZSAidHJhY2V0b29sIiBzY3JpcHQgYXV0b21hdGVzIHRlZGlv
dXMgdHJhY2UgZXZlbnQgY29kZSBnZW5lcmF0aW9uIGFuZCBhbHNvCiBrZWVwcyB0aGUgdHJhY2Ug
ZXZlbnQgZGVjbGFyYXRpb25zIGluZGVwZW5kZW50IG9mIHRoZSB0cmFjZSBiYWNrZW5kLiAgVGhl
IHRyYWNlCkBAIC0xODIsNyArMTkzLDcgQEAgZXZlbnRzIGFyZSBub3QgdGlnaHRseSBjb3VwbGVk
IHRvIGEgc3BlY2lmaWMgdHJhY2UgYmFja2VuZCwgc3VjaCBhcyBMVFRuZyBvcgogU3lzdGVtVGFw
LiAgU3VwcG9ydCBmb3IgdHJhY2UgYmFja2VuZHMgY2FuIGJlIGFkZGVkIGJ5IGV4dGVuZGluZyB0
aGUgInRyYWNldG9vbCIKIHNjcmlwdC4KIAotVGhlIHRyYWNlIGJhY2tlbmRzIGFyZSBjaG9zZW4g
YXQgY29uZmlndXJlIHRpbWU6CitUaGUgdHJhY2UgYmFja2VuZHMgYXJlIGNob3NlbiBhdCBjb25m
aWd1cmUgdGltZTo6CiAKICAgICAuL2NvbmZpZ3VyZSAtLWVuYWJsZS10cmFjZS1iYWNrZW5kcz1z
aW1wbGUKIApAQCAtMTk0LDcgKzIwNSw4IEBAIElmIG5vIGJhY2tlbmRzIGFyZSBleHBsaWNpdGx5
IHNlbGVjdGVkLCBjb25maWd1cmUgd2lsbCBkZWZhdWx0IHRvIHRoZQogCiBUaGUgZm9sbG93aW5n
IHN1YnNlY3Rpb25zIGRlc2NyaWJlIHRoZSBzdXBwb3J0ZWQgdHJhY2UgYmFja2VuZHMuCiAKLT09
PSBOb3AgPT09CitOb3AKKy0tLQogCiBUaGUgIm5vcCIgYmFja2VuZCBnZW5lcmF0ZXMgZW1wdHkg
dHJhY2UgZXZlbnQgZnVuY3Rpb25zIHNvIHRoYXQgdGhlIGNvbXBpbGVyCiBjYW4gb3B0aW1pemUg
b3V0IHRyYWNlIGV2ZW50cyBjb21wbGV0ZWx5LiAgVGhpcyBpbXBvc2VzIG5vIHBlcmZvcm1hbmNl
CkBAIC0yMDMsNyArMjE1LDggQEAgcGVuYWx0eS4KIE5vdGUgdGhhdCByZWdhcmRsZXNzIG9mIHRo
ZSBzZWxlY3RlZCB0cmFjZSBiYWNrZW5kLCBldmVudHMgd2l0aCB0aGUgImRpc2FibGUiCiBwcm9w
ZXJ0eSB3aWxsIGJlIGdlbmVyYXRlZCB3aXRoIHRoZSAibm9wIiBiYWNrZW5kLgogCi09PT0gTG9n
ID09PQorTG9nCistLS0KIAogVGhlICJsb2ciIGJhY2tlbmQgc2VuZHMgdHJhY2UgZXZlbnRzIGRp
cmVjdGx5IHRvIHN0YW5kYXJkIGVycm9yLiAgVGhpcwogZWZmZWN0aXZlbHkgdHVybnMgdHJhY2Ug
ZXZlbnRzIGludG8gZGVidWcgcHJpbnRmcy4KQEAgLTIxMSwyMyArMjI0LDI2IEBAIGVmZmVjdGl2
ZWx5IHR1cm5zIHRyYWNlIGV2ZW50cyBpbnRvIGRlYnVnIHByaW50ZnMuCiBUaGlzIGlzIHRoZSBz
aW1wbGVzdCBiYWNrZW5kIGFuZCBjYW4gYmUgdXNlZCB0b2dldGhlciB3aXRoIGV4aXN0aW5nIGNv
ZGUgdGhhdAogdXNlcyBEUFJJTlRGKCkuCiAKLT09PSBTaW1wbGV0cmFjZSA9PT0KK1NpbXBsZXRy
YWNlCistLS0tLS0tLS0tLQogCiBUaGUgInNpbXBsZSIgYmFja2VuZCBzdXBwb3J0cyBjb21tb24g
dXNlIGNhc2VzIGFuZCBjb21lcyBhcyBwYXJ0IG9mIHRoZSBRRU1VCiBzb3VyY2UgdHJlZS4gIEl0
IG1heSBub3QgYmUgYXMgcG93ZXJmdWwgYXMgcGxhdGZvcm0tc3BlY2lmaWMgb3IgdGhpcmQtcGFy
dHkKIHRyYWNlIGJhY2tlbmRzIGJ1dCBpdCBpcyBwb3J0YWJsZS4gIFRoaXMgaXMgdGhlIHJlY29t
bWVuZGVkIHRyYWNlIGJhY2tlbmQKIHVubGVzcyB5b3UgaGF2ZSBzcGVjaWZpYyBuZWVkcyBmb3Ig
bW9yZSBhZHZhbmNlZCBiYWNrZW5kcy4KIAotPT09PSBNb25pdG9yIGNvbW1hbmRzID09PT0KK01v
bml0b3IgY29tbWFuZHMKK35+fn5+fn5+fn5+fn5+fn4KIAotKiB0cmFjZS1maWxlIG9ufG9mZnxm
bHVzaHxzZXQgPHBhdGg+CisqIGBgdHJhY2UtZmlsZSBvbnxvZmZ8Zmx1c2h8c2V0IDxwYXRoPmBg
CiAgIEVuYWJsZS9kaXNhYmxlL2ZsdXNoIHRoZSB0cmFjZSBmaWxlIG9yIHNldCB0aGUgdHJhY2Ug
ZmlsZSBuYW1lLgogCi09PT09IEFuYWx5emluZyB0cmFjZSBmaWxlcyA9PT09CitBbmFseXppbmcg
dHJhY2UgZmlsZXMKK35+fn5+fn5+fn5+fn5+fn5+fn5+fgogCiBUaGUgInNpbXBsZSIgYmFja2Vu
ZCBwcm9kdWNlcyBiaW5hcnkgdHJhY2UgZmlsZXMgdGhhdCBjYW4gYmUgZm9ybWF0dGVkIHdpdGgg
dGhlCiBzaW1wbGV0cmFjZS5weSBzY3JpcHQuICBUaGUgc2NyaXB0IHRha2VzIHRoZSAidHJhY2Ut
ZXZlbnRzLWFsbCIgZmlsZSBhbmQgdGhlCi1iaW5hcnkgdHJhY2U6CitiaW5hcnkgdHJhY2U6Ogog
CiAgICAgLi9zY3JpcHRzL3NpbXBsZXRyYWNlLnB5IHRyYWNlLWV2ZW50cy1hbGwgdHJhY2UtMTIz
NDUKIApAQCAtMjM1LDIzICsyNTEsMjUgQEAgWW91IG11c3QgZW5zdXJlIHRoYXQgdGhlIHNhbWUg
InRyYWNlLWV2ZW50cy1hbGwiIGZpbGUgd2FzIHVzZWQgdG8gYnVpbGQgUUVNVSwKIG90aGVyd2lz
ZSB0cmFjZSBldmVudCBkZWNsYXJhdGlvbnMgbWF5IGhhdmUgY2hhbmdlZCBhbmQgb3V0cHV0IHdp
bGwgbm90IGJlCiBjb25zaXN0ZW50LgogCi09PT0gRnRyYWNlID09PQorRnRyYWNlCistLS0tLS0K
IAogVGhlICJmdHJhY2UiIGJhY2tlbmQgd3JpdGVzIHRyYWNlIGRhdGEgdG8gZnRyYWNlIG1hcmtl
ci4gVGhpcyBlZmZlY3RpdmVseQogc2VuZHMgdHJhY2UgZXZlbnRzIHRvIGZ0cmFjZSByaW5nIGJ1
ZmZlciwgYW5kIHlvdSBjYW4gY29tcGFyZSBxZW11IHRyYWNlCiBkYXRhIGFuZCBrZXJuZWwoZXNw
ZWNpYWxseSBrdm0ua28gd2hlbiB1c2luZyBLVk0pIHRyYWNlIGRhdGEuCiAKLWlmIHlvdSB1c2Ug
S1ZNLCBlbmFibGUga3ZtIGV2ZW50cyBpbiBmdHJhY2U6CitpZiB5b3UgdXNlIEtWTSwgZW5hYmxl
IGt2bSBldmVudHMgaW4gZnRyYWNlOjoKIAogICAgIyBlY2hvIDEgPiAvc3lzL2tlcm5lbC9kZWJ1
Zy90cmFjaW5nL2V2ZW50cy9rdm0vZW5hYmxlCiAKLUFmdGVyIHJ1bm5pbmcgcWVtdSBieSByb290
IHVzZXIsIHlvdSBjYW4gZ2V0IHRoZSB0cmFjZToKK0FmdGVyIHJ1bm5pbmcgcWVtdSBieSByb290
IHVzZXIsIHlvdSBjYW4gZ2V0IHRoZSB0cmFjZTo6CiAKICAgICMgY2F0IC9zeXMva2VybmVsL2Rl
YnVnL3RyYWNpbmcvdHJhY2UKIAogUmVzdHJpY3Rpb246ICJmdHJhY2UiIGJhY2tlbmQgaXMgcmVz
dHJpY3RlZCB0byBMaW51eCBvbmx5LgogCi09PT0gU3lzbG9nID09PQorU3lzbG9nCistLS0tLS0K
IAogVGhlICJzeXNsb2ciIGJhY2tlbmQgc2VuZHMgdHJhY2UgZXZlbnRzIHVzaW5nIHRoZSBQT1NJ
WCBzeXNsb2cgQVBJLiBUaGUgbG9nCiBpcyBvcGVuZWQgc3BlY2lmeWluZyB0aGUgTE9HX0RBRU1P
TiBmYWNpbGl0eSBhbmQgTE9HX1BJRCBvcHRpb24gKHNvIGV2ZW50cwpAQCAtMjYzLDcgKzI4MSw4
IEBAIE5PVEU6IHN5c2xvZyBtYXkgc3F1YXNoIGR1cGxpY2F0ZSBjb25zZWN1dGl2ZSB0cmFjZSBl
dmVudHMgYW5kIGFwcGx5IHJhdGUKIAogUmVzdHJpY3Rpb246ICJzeXNsb2ciIGJhY2tlbmQgaXMg
cmVzdHJpY3RlZCB0byBQT1NJWCBjb21wbGlhbnQgT1MuCiAKLT09PSBMVFRuZyBVc2Vyc3BhY2Ug
VHJhY2VyID09PQorTFRUbmcgVXNlcnNwYWNlIFRyYWNlcgorLS0tLS0tLS0tLS0tLS0tLS0tLS0t
LQogCiBUaGUgInVzdCIgYmFja2VuZCB1c2VzIHRoZSBMVFRuZyBVc2Vyc3BhY2UgVHJhY2VyIGxp
YnJhcnkuICBUaGVyZSBhcmUgbm8KIG1vbml0b3IgY29tbWFuZHMgYnVpbHQgaW50byBRRU1VLCBp
bnN0ZWFkIFVTVCB1dGlsaXRpZXMgc2hvdWxkIGJlIHVzZWQgdG8gbGlzdCwKQEAgLTI3NSw0MyAr
Mjk0LDQ0IEBAIGx0dG5nLXNlc3Npb25kIGRhZW1vbiBmb3IgdGhlIGN1cnJlbnQgdXNlciBwcmlv
ciB0byBydW5uaW5nIGFueSBpbnN0YW5jZSBvZgogUUVNVS4KIAogV2hpbGUgcnVubmluZyBhbiBp
bnN0cnVtZW50ZWQgUUVNVSwgTFRUbmcgc2hvdWxkIGJlIGFibGUgdG8gbGlzdCBhbGwgYXZhaWxh
YmxlCi1ldmVudHM6CitldmVudHM6OgogCiAgICAgbHR0bmcgbGlzdCAtdQogCi1DcmVhdGUgdHJh
Y2luZyBzZXNzaW9uOgorQ3JlYXRlIHRyYWNpbmcgc2Vzc2lvbjo6CiAKICAgICBsdHRuZyBjcmVh
dGUgbXlzZXNzaW9uCiAKLUVuYWJsZSBldmVudHM6CitFbmFibGUgZXZlbnRzOjoKIAogICAgIGx0
dG5nIGVuYWJsZS1ldmVudCBxZW11OmdfbWFsbG9jIC11CiAKIFdoZXJlIHRoZSBldmVudHMgY2Fu
IGVpdGhlciBiZSBhIGNvbW1hLXNlcGFyYXRlZCBsaXN0IG9mIGV2ZW50cywgb3IgIi1hIiB0bwot
ZW5hYmxlIGFsbCB0cmFjZXBvaW50IGV2ZW50cy4gU3RhcnQgYW5kIHN0b3AgdHJhY2luZyBhcyBu
ZWVkZWQ6CitlbmFibGUgYWxsIHRyYWNlcG9pbnQgZXZlbnRzLiBTdGFydCBhbmQgc3RvcCB0cmFj
aW5nIGFzIG5lZWRlZDo6CiAKICAgICBsdHRuZyBzdGFydAogICAgIGx0dG5nIHN0b3AKIAotVmll
dyB0aGUgdHJhY2U6CitWaWV3IHRoZSB0cmFjZTo6CiAKICAgICBsdHRuZyB2aWV3CiAKLURlc3Ry
b3kgdHJhY2luZyBzZXNzaW9uOgorRGVzdHJveSB0cmFjaW5nIHNlc3Npb246OgogCiAgICAgbHR0
bmcgZGVzdHJveQogCi1CYWJlbHRyYWNlIGNhbiBiZSB1c2VkIGF0IGFueSBsYXRlciB0aW1lIHRv
IHZpZXcgdGhlIHRyYWNlOgorQmFiZWx0cmFjZSBjYW4gYmUgdXNlZCBhdCBhbnkgbGF0ZXIgdGlt
ZSB0byB2aWV3IHRoZSB0cmFjZTo6CiAKICAgICBiYWJlbHRyYWNlICRIT01FL2x0dG5nLXRyYWNl
cy9teXNlc3Npb24tPGRhdGU+LTx0aW1lPgogCi09PT0gU3lzdGVtVGFwID09PQorU3lzdGVtVGFw
CistLS0tLS0tLS0KIAogVGhlICJkdHJhY2UiIGJhY2tlbmQgdXNlcyBEVHJhY2Ugc2R0IHByb2Jl
cyBidXQgaGFzIG9ubHkgYmVlbiB0ZXN0ZWQgd2l0aAogU3lzdGVtVGFwLiAgV2hlbiBTeXN0ZW1U
YXAgc3VwcG9ydCBpcyBkZXRlY3RlZCBhIC5zdHAgZmlsZSB3aXRoIHdyYXBwZXIgcHJvYmVzCiBp
cyBnZW5lcmF0ZWQgdG8gbWFrZSB1c2UgaW4gc2NyaXB0cyBtb3JlIGNvbnZlbmllbnQuICBUaGlz
IHN0ZXAgY2FuIGFsc28gYmUKIHBlcmZvcm1lZCBtYW51YWxseSBhZnRlciBhIGJ1aWxkIGluIG9y
ZGVyIHRvIGNoYW5nZSB0aGUgYmluYXJ5IG5hbWUgaW4gdGhlIC5zdHAKLXByb2JlczoKK3Byb2Jl
czo6CiAKICAgICBzY3JpcHRzL3RyYWNldG9vbC5weSAtLWJhY2tlbmRzPWR0cmFjZSAtLWZvcm1h
dD1zdGFwIFwKICAgICAgICAgICAgICAgICAgICAgICAgICAtLWJpbmFyeSBwYXRoL3RvL3FlbXUt
YmluYXJ5IFwKQEAgLTMyNCwxMiArMzQ0LDE0IEBAIFRvIGZhY2lsaXRhdGUgc2ltcGxlIHVzYWdl
IG9mIHN5c3RlbXRhcCB3aGVyZSB0aGVyZSBtZXJlbHkgbmVlZHMgdG8gYmUgcHJpbnRmCiBsb2dn
aW5nIG9mIGNlcnRhaW4gcHJvYmVzLCBhIGhlbHBlciBzY3JpcHQgInFlbXUtdHJhY2Utc3RhcCIg
aXMgcHJvdmlkZWQuCiBDb25zdWx0IGl0cyBtYW51YWwgcGFnZSBmb3IgZ3VpZGFuY2Ugb24gaXRz
IHVzYWdlLgogCi09PSBUcmFjZSBldmVudCBwcm9wZXJ0aWVzID09CitUcmFjZSBldmVudCBwcm9w
ZXJ0aWVzCis9PT09PT09PT09PT09PT09PT09PT09CiAKIEVhY2ggZXZlbnQgaW4gdGhlICJ0cmFj
ZS1ldmVudHMtYWxsIiBmaWxlIGNhbiBiZSBwcmVmaXhlZCB3aXRoIGEgc3BhY2Utc2VwYXJhdGVk
CiBsaXN0IG9mIHplcm8gb3IgbW9yZSBvZiB0aGUgZm9sbG93aW5nIGV2ZW50IHByb3BlcnRpZXMu
CiAKLT09PSAiZGlzYWJsZSIgPT09CisiZGlzYWJsZSIKKy0tLS0tLS0tLQogCiBJZiBhIHNwZWNp
ZmljIHRyYWNlIGV2ZW50IGlzIGdvaW5nIHRvIGJlIGludm9rZWQgYSBodWdlIG51bWJlciBvZiB0
aW1lcywgdGhpcwogbWlnaHQgaGF2ZSBhIG5vdGljZWFibGUgcGVyZm9ybWFuY2UgaW1wYWN0IGV2
ZW4gd2hlbiB0aGUgZXZlbnQgaXMKQEAgLTM0Nyw2ICszNjksOCBAQCBndWFyZCBzdWNoIGNvbXB1
dGF0aW9ucywgc28gdGhleSBhcmUgc2tpcHBlZCBpZiB0aGUgZXZlbnQgaGFzIGJlZW4gZWl0aGVy
CiBjb21waWxlLXRpbWUgZGlzYWJsZWQgb3IgcnVuLXRpbWUgZGlzYWJsZWQuIElmIHRoZSBldmVu
dCBpcyBjb21waWxlLXRpbWUKIGRpc2FibGVkLCB0aGlzIGNoZWNrIHdpbGwgaGF2ZSBubyBwZXJm
b3JtYW5jZSBpbXBhY3QuCiAKKzo6CisKICAgICAjaW5jbHVkZSAidHJhY2UuaCIgIC8qIG5lZWRl
ZCBmb3IgdHJhY2UgZXZlbnQgcHJvdG90eXBlICovCiAgICAgCiAgICAgdm9pZCAqcWVtdV92bWFs
bG9jKHNpemVfdCBzaXplKQpAQCAtMzY2LDcgKzM5MCw4IEBAIGRpc2FibGVkLCB0aGlzIGNoZWNr
IHdpbGwgaGF2ZSBubyBwZXJmb3JtYW5jZSBpbXBhY3QuCiAgICAgICAgIHJldHVybiBwdHI7CiAg
ICAgfQogCi09PT0gInRjZyIgPT09CisidGNnIgorLS0tLS0KIAogR3Vlc3QgY29kZSBnZW5lcmF0
ZWQgYnkgVENHIGNhbiBiZSB0cmFjZWQgYnkgZGVmaW5pbmcgYW4gZXZlbnQgd2l0aCB0aGUgInRj
ZyIKIGV2ZW50IHByb3BlcnR5LiBJbnRlcm5hbGx5LCB0aGlzIHByb3BlcnR5IGdlbmVyYXRlcyB0
d28gZXZlbnRzOgpAQCAtMzgzLDExICs0MDgsMTEgQEAgbWl4IG9mIG5hdGl2ZSBhbmQgVENHIHR5
cGVzLCBhbmQgInRyYWNlXzxldmVudG5hbWU+X3RjZyIgd2lsbCBncmFjZWZ1bGx5IGZvcndhcmQK
IHRoZW0gdG8gdGhlICI8ZXZlbnRuYW1lPl90cmFucyIgYW5kICI8ZXZlbnRuYW1lPl9leGVjIiBl
dmVudHMuIFNpbmNlIFRDRyB2YWx1ZXMKIGFyZSBub3Qga25vd24gYXQgdHJhbnNsYXRpb24gdGlt
ZSwgdGhlc2UgYXJlIGlnbm9yZWQgYnkgdGhlICI8ZXZlbnRuYW1lPl90cmFucyIKIGV2ZW50LiBC
ZWNhdXNlIG9mIHRoaXMsIHRoZSBlbnRyeSBpbiB0aGUgInRyYWNlLWV2ZW50cyIgZmlsZSBuZWVk
cyB0d28gcHJpbnRpbmcKLWZvcm1hdHMgKHNlcGFyYXRlZCBieSBhIGNvbW1hKToKK2Zvcm1hdHMg
KHNlcGFyYXRlZCBieSBhIGNvbW1hKTo6CiAKICAgICB0Y2cgZm9vKHVpbnQ4X3QgYTEsIFRDR3Zf
aTMyIGEyKSAiYTE9JWQiLCAiYTE9JWQgYTI9JWQiCiAKLUZvciBleGFtcGxlOgorRm9yIGV4YW1w
bGU6OgogCiAgICAgI2luY2x1ZGUgInRyYWNlLXRjZy5oIgogICAgIApAQCAtMzk4LDE1ICs0MjMs
MTYgQEAgRm9yIGV4YW1wbGU6CiAgICAgICAgIHRyYWNlX2Zvb190Y2coYTEsIGEyKTsKICAgICB9
CiAKLVRoaXMgd2lsbCBpbW1lZGlhdGVseSBjYWxsOgorVGhpcyB3aWxsIGltbWVkaWF0ZWx5IGNh
bGw6OgogCiAgICAgdm9pZCB0cmFjZV9mb29fdHJhbnModWludDhfdCBhMSk7CiAKLWFuZCB3aWxs
IGdlbmVyYXRlIHRoZSBUQ0cgY29kZSB0byBjYWxsOgorYW5kIHdpbGwgZ2VuZXJhdGUgdGhlIFRD
RyBjb2RlIHRvIGNhbGw6OgogCiAgICAgdm9pZCB0cmFjZV9mb28odWludDhfdCBhMSwgdWludDMy
X3QgYTIpOwogCi09PT0gInZjcHUiID09PQorInZjcHUiCistLS0tLS0KIAogSWRlbnRpZmllcyBl
dmVudHMgdGhhdCB0cmFjZSB2Q1BVLXNwZWNpZmljIGluZm9ybWF0aW9uLiBJdCBpbXBsaWNpdGx5
IGFkZHMgYQogIkNQVVN0YXRlKiIgYXJndW1lbnQsIGFuZCBleHRlbmRzIHRoZSB0cmFjaW5nIHBy
aW50IGZvcm1hdCB0byBzaG93IHRoZSB2Q1BVCkBAIC00MTcsMTMgKzQ0MywxMyBAQCBwb2ludHMg
dG8gdGhlIHZDUFUgd2hlbiBndWVzdCBjb2RlIGlzIGV4ZWN1dGVkICh1c3VhbGx5IHRoZSAiY3B1
X2VudiIgdmFyaWFibGUpLgogVGhlICJ0Y2ciIGFuZCAidmNwdSIgcHJvcGVydGllcyBhcmUgY3Vy
cmVudGx5IG9ubHkgaG9ub3JlZCBpbiB0aGUgcm9vdAogLi90cmFjZS1ldmVudHMgZmlsZS4KIAot
VGhlIGZvbGxvd2luZyBleGFtcGxlIGV2ZW50czoKK1RoZSBmb2xsb3dpbmcgZXhhbXBsZSBldmVu
dHM6OgogCiAgICAgZm9vKHVpbnQzMl90IGEpICJhPSV4IgogICAgIHZjcHUgYmFyKHVpbnQzMl90
IGEpICJhPSV4IgogICAgIHRjZyB2Y3B1IGJheih1aW50MzJfdCBhKSAiYT0leCIsICJhPSV4Igog
Ci1DYW4gYmUgdXNlZCBhczoKK0NhbiBiZSB1c2VkIGFzOjoKIAogICAgICNpbmNsdWRlICJ0cmFj
ZS10Y2cuaCIKICAgICAKQEAgLTQ0MSw3ICs0NjcsNyBAQCBDYW4gYmUgdXNlZCBhczoKICAgICB9
CiAKIElmIHRoZSB0cmFuc2xhdGluZyB2Q1BVIGhhcyBhZGRyZXNzIDB4YzEgYW5kIGNvZGUgaXMg
bGF0ZXIgZXhlY3V0ZWQgYnkgdkNQVQotMHhjMiwgdGhpcyB3b3VsZCBiZSBhbiBleGFtcGxlIG91
dHB1dDoKKzB4YzIsIHRoaXMgd291bGQgYmUgYW4gZXhhbXBsZSBvdXRwdXQ6OgogCiAgICAgLy8g
YXQgZ3Vlc3QgY29kZSB0cmFuc2xhdGlvbgogICAgIGZvbyBhPTB4ZDEKLS0gCjIuMjkuMgoK


