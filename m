Return-Path: <qemu-devel-bounces+lists+qemu-devel=lfdr.de@nongnu.org>
X-Original-To: lists+qemu-devel@lfdr.de
Delivered-To: lists+qemu-devel@lfdr.de
Received: from lists.gnu.org (lists.gnu.org [209.51.188.17])
	by mail.lfdr.de (Postfix) with ESMTPS id 795C7368F1A
	for <lists+qemu-devel@lfdr.de>; Fri, 23 Apr 2021 10:51:26 +0200 (CEST)
Received: from localhost ([::1]:56060 helo=lists1p.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.90_1)
	(envelope-from <qemu-devel-bounces+lists+qemu-devel=lfdr.de@nongnu.org>)
	id 1lZrX3-00078G-K4
	for lists+qemu-devel@lfdr.de; Fri, 23 Apr 2021 04:51:25 -0400
Received: from eggs.gnu.org ([2001:470:142:3::10]:60538)
 by lists.gnu.org with esmtps (TLS1.2:ECDHE_RSA_AES_256_GCM_SHA384:256)
 (Exim 4.90_1) (envelope-from <no-reply@patchew.org>)
 id 1lZrUm-00068r-FR
 for qemu-devel@nongnu.org; Fri, 23 Apr 2021 04:49:04 -0400
Resent-Date: Fri, 23 Apr 2021 04:49:04 -0400
Resent-Message-Id: <E1lZrUm-00068r-FR@lists.gnu.org>
Received: from sender4-of-o53.zoho.com ([136.143.188.53]:21394)
 by eggs.gnu.org with esmtps (TLS1.2:ECDHE_RSA_AES_256_GCM_SHA384:256)
 (Exim 4.90_1) (envelope-from <no-reply@patchew.org>)
 id 1lZrUj-00010k-Eu
 for qemu-devel@nongnu.org; Fri, 23 Apr 2021 04:49:04 -0400
ARC-Seal: i=1; a=rsa-sha256; t=1619167732; cv=none; 
 d=zohomail.com; s=zohoarc; 
 b=fyhF7u9U312LX0h2ucPxbTMg0VJFJnGU40f7y5WWqOGbYurqAeQPigAKKVOuZyfdSD5qCtvqVQBQR1WkPcJcapcBftlQHMnWHyb/VntMX3cRI/N3rrwyMwLKfx9v9PoGcfAOmWr67LxmdCALXT/HNFvfHm2MmJ6WPMtlcTydFBw=
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=zohomail.com;
 s=zohoarc; t=1619167732;
 h=Content-Type:Content-Transfer-Encoding:Cc:Date:From:In-Reply-To:MIME-Version:Message-ID:Reply-To:Subject:To;
 bh=L2skqHQy/jZNc24OOHBrZSW7hfyb8pyjBQUqNzPK9FQ=; 
 b=cMCk8du6Ve8I9yit4b/pAUv6+giet7PYrupTvdxQCiZ8x/CxkyhaILdWzZZ1wQDyjKALxQ5iw7CMXe58o8er0kEG0xfYC1bn/9ierSARbMP2l4BD4NmZ86cHD9bGX1Lb/vtcIQ7nYlp3ocgEJGSrapq3BCSSyTAHTFmqFeqK+r4=
ARC-Authentication-Results: i=1; mx.zohomail.com;
 spf=pass  smtp.mailfrom=no-reply@patchew.org;
 dmarc=pass header.from=<no-reply@patchew.org>
 header.from=<no-reply@patchew.org>
Received: from [172.17.0.3] (23.253.156.214 [23.253.156.214]) by
 mx.zohomail.com with SMTPS id 1619167730305459.2502246896769;
 Fri, 23 Apr 2021 01:48:50 -0700 (PDT)
In-Reply-To: <20210423083351.2096734-1-kraxel@redhat.com>
Subject: Re: [PATCH v4 0/9] ui: add vdagent implementation and clipboard
 support.
Message-ID: <161916772880.4073.13772414052926986316@72b6d80f974b>
MIME-Version: 1.0
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Resent-From: 
From: no-reply@patchew.org
To: kraxel@redhat.com
Date: Fri, 23 Apr 2021 01:48:50 -0700 (PDT)
X-ZohoMailClient: External
Received-SPF: pass client-ip=136.143.188.53; envelope-from=no-reply@patchew.org;
 helo=sender4-of-o53.zoho.com
X-Spam_score_int: -18
X-Spam_score: -1.9
X-Spam_bar: -
X-Spam_report: (-1.9 / 5.0 requ) BAYES_00=-1.9, RCVD_IN_DNSWL_NONE=-0.0001,
 RCVD_IN_MSPIKE_H3=0.001, RCVD_IN_MSPIKE_WL=0.001, SPF_HELO_NONE=0.001,
 SPF_PASS=-0.001 autolearn=ham autolearn_force=no
X-Spam_action: no action
X-BeenThere: qemu-devel@nongnu.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: <qemu-devel.nongnu.org>
List-Unsubscribe: <https://lists.nongnu.org/mailman/options/qemu-devel>,
 <mailto:qemu-devel-request@nongnu.org?subject=unsubscribe>
List-Archive: <https://lists.nongnu.org/archive/html/qemu-devel>
List-Post: <mailto:qemu-devel@nongnu.org>
List-Help: <mailto:qemu-devel-request@nongnu.org?subject=help>
List-Subscribe: <https://lists.nongnu.org/mailman/listinfo/qemu-devel>,
 <mailto:qemu-devel-request@nongnu.org?subject=subscribe>
Reply-To: qemu-devel@nongnu.org
Cc: marcandre.lureau@redhat.com, kraxel@redhat.com, qemu-devel@nongnu.org,
 armbru@redhat.com, pbonzini@redhat.com
Errors-To: qemu-devel-bounces+lists+qemu-devel=lfdr.de@nongnu.org
Sender: "Qemu-devel" <qemu-devel-bounces+lists+qemu-devel=lfdr.de@nongnu.org>

UGF0Y2hldyBVUkw6IGh0dHBzOi8vcGF0Y2hldy5vcmcvUUVNVS8yMDIxMDQyMzA4MzM1MS4yMDk2
NzM0LTEta3JheGVsQHJlZGhhdC5jb20vCgoKCkhpLAoKVGhpcyBzZXJpZXMgc2VlbXMgdG8gaGF2
ZSBzb21lIGNvZGluZyBzdHlsZSBwcm9ibGVtcy4gU2VlIG91dHB1dCBiZWxvdyBmb3IKbW9yZSBp
bmZvcm1hdGlvbjoKClR5cGU6IHNlcmllcwpNZXNzYWdlLWlkOiAyMDIxMDQyMzA4MzM1MS4yMDk2
NzM0LTEta3JheGVsQHJlZGhhdC5jb20KU3ViamVjdDogW1BBVENIIHY0IDAvOV0gdWk6IGFkZCB2
ZGFnZW50IGltcGxlbWVudGF0aW9uIGFuZCBjbGlwYm9hcmQgc3VwcG9ydC4KCj09PSBURVNUIFND
UklQVCBCRUdJTiA9PT0KIyEvYmluL2Jhc2gKZ2l0IHJldi1wYXJzZSBiYXNlID4gL2Rldi9udWxs
IHx8IGV4aXQgMApnaXQgY29uZmlnIC0tbG9jYWwgZGlmZi5yZW5hbWVsaW1pdCAwCmdpdCBjb25m
aWcgLS1sb2NhbCBkaWZmLnJlbmFtZXMgVHJ1ZQpnaXQgY29uZmlnIC0tbG9jYWwgZGlmZi5hbGdv
cml0aG0gaGlzdG9ncmFtCi4vc2NyaXB0cy9jaGVja3BhdGNoLnBsIC0tbWFpbGJhY2sgYmFzZS4u
Cj09PSBURVNUIFNDUklQVCBFTkQgPT09CgpVcGRhdGluZyAzYzhjZjVhOWMyMWZmODc4MjE2NGQx
ZGVmN2Y0NGJkODg4NzEzMzg0CkZyb20gaHR0cHM6Ly9naXRodWIuY29tL3BhdGNoZXctcHJvamVj
dC9xZW11CiAtIFt0YWcgdXBkYXRlXSAgICAgIHBhdGNoZXcvMjAyMTA0MjMwMzE4MDMuMTQ3OS0x
LWphc293YW5nQHJlZGhhdC5jb20gLT4gcGF0Y2hldy8yMDIxMDQyMzAzMTgwMy4xNDc5LTEtamFz
b3dhbmdAcmVkaGF0LmNvbQogKiBbbmV3IHRhZ10gICAgICAgICBwYXRjaGV3LzIwMjEwNDIzMDgz
MzUxLjIwOTY3MzQtMS1rcmF4ZWxAcmVkaGF0LmNvbSAtPiBwYXRjaGV3LzIwMjEwNDIzMDgzMzUx
LjIwOTY3MzQtMS1rcmF4ZWxAcmVkaGF0LmNvbQpTd2l0Y2hlZCB0byBhIG5ldyBicmFuY2ggJ3Rl
c3QnCmZhODhmNjMgdWkvZ3RrOiBhZGQgY2xpcGJvYXJkIHN1cHBvcnQKOTdkNDE3MSB1aS9ndGs6
IG1vdmUgc3RydWN0IEd0a0Rpc3BsYXlTdGF0ZSB0byB1aS9ndGsuaAoyZWMxMjVlIHVpL3ZuYzog
Y2xpcGJvYXJkIHN1cHBvcnQKMmRhNDU4YiB1aS92ZGFnZW50OiBhZGQgY2xpcGJvYXJkIHN1cHBv
cnQKNzE0YTZhYSB1aS92ZGFnZW50OiBhZGQgbW91c2Ugc3VwcG9ydApiNjg2MWZjIHVpL3ZkYWdl
bnQ6IGNvcmUgaW5mcmFzdHJ1Y3R1cmUKYzU1YWZhZiB1aTogYWRkIGNsaXBib2FyZCBkb2N1bWVu
dGF0aW9uCjViYmZmNDQgdWk6IGFkZCBjbGlwYm9hcmQgaW5mcmFzdHJ1Y3R1cmUKNmU0ZWEzOCBi
dWlsZDogYWRkIHNlcGFyYXRlIHNwaWNlLXByb3RvY29sIGNvbmZpZyBvcHRpb24KCj09PSBPVVRQ
VVQgQkVHSU4gPT09CjEvOSBDaGVja2luZyBjb21taXQgNmU0ZWEzOGQ0YTIwIChidWlsZDogYWRk
IHNlcGFyYXRlIHNwaWNlLXByb3RvY29sIGNvbmZpZyBvcHRpb24pCjIvOSBDaGVja2luZyBjb21t
aXQgNWJiZmY0NDJjMWI2ICh1aTogYWRkIGNsaXBib2FyZCBpbmZyYXN0cnVjdHVyZSkKVXNlIG9m
IHVuaW5pdGlhbGl6ZWQgdmFsdWUgJGFjcGlfdGVzdGV4cGVjdGVkIGluIHN0cmluZyBlcSBhdCAu
L3NjcmlwdHMvY2hlY2twYXRjaC5wbCBsaW5lIDE1MjkuCldBUk5JTkc6IGFkZGVkLCBtb3ZlZCBv
ciBkZWxldGVkIGZpbGUocyksIGRvZXMgTUFJTlRBSU5FUlMgbmVlZCB1cGRhdGluZz8KIzE4OiAK
bmV3IGZpbGUgbW9kZSAxMDA2NDQKCnRvdGFsOiAwIGVycm9ycywgMSB3YXJuaW5ncywgMTYxIGxp
bmVzIGNoZWNrZWQKClBhdGNoIDIvOSBoYXMgc3R5bGUgcHJvYmxlbXMsIHBsZWFzZSByZXZpZXcu
ICBJZiBhbnkgb2YgdGhlc2UgZXJyb3JzCmFyZSBmYWxzZSBwb3NpdGl2ZXMgcmVwb3J0IHRoZW0g
dG8gdGhlIG1haW50YWluZXIsIHNlZQpDSEVDS1BBVENIIGluIE1BSU5UQUlORVJTLgozLzkgQ2hl
Y2tpbmcgY29tbWl0IGM1NWFmYWYyMDBmYSAodWk6IGFkZCBjbGlwYm9hcmQgZG9jdW1lbnRhdGlv
bikKVXNlIG9mIHVuaW5pdGlhbGl6ZWQgdmFsdWUgJGFjcGlfdGVzdGV4cGVjdGVkIGluIHN0cmlu
ZyBlcSBhdCAuL3NjcmlwdHMvY2hlY2twYXRjaC5wbCBsaW5lIDE1MjkuCldBUk5JTkc6IGFkZGVk
LCBtb3ZlZCBvciBkZWxldGVkIGZpbGUocyksIGRvZXMgTUFJTlRBSU5FUlMgbmVlZCB1cGRhdGlu
Zz8KIzMwOiAKbmV3IGZpbGUgbW9kZSAxMDA2NDQKCldBUk5JTkc6IGxpbmUgb3ZlciA4MCBjaGFy
YWN0ZXJzCiM4OTogRklMRTogaW5jbHVkZS91aS9jbGlwYm9hcmQuaDo0MzoKKyAqIEBRRU1VX0NM
SVBCT0FSRF9TRUxFQ1RJT05fUFJJTUFSWTogcHJpbWFyeSBzZWxlY3Rpb24gKHNlbGVjdCArIG1p
ZGRsZSBtb3VzZSBidXR0b24pLgoKdG90YWw6IDAgZXJyb3JzLCAyIHdhcm5pbmdzLCAxOTQgbGlu
ZXMgY2hlY2tlZAoKUGF0Y2ggMy85IGhhcyBzdHlsZSBwcm9ibGVtcywgcGxlYXNlIHJldmlldy4g
IElmIGFueSBvZiB0aGVzZSBlcnJvcnMKYXJlIGZhbHNlIHBvc2l0aXZlcyByZXBvcnQgdGhlbSB0
byB0aGUgbWFpbnRhaW5lciwgc2VlCkNIRUNLUEFUQ0ggaW4gTUFJTlRBSU5FUlMuCjQvOSBDaGVj
a2luZyBjb21taXQgYjY4NjFmYzEzNzg0ICh1aS92ZGFnZW50OiBjb3JlIGluZnJhc3RydWN0dXJl
KQpVc2Ugb2YgdW5pbml0aWFsaXplZCB2YWx1ZSAkYWNwaV90ZXN0ZXhwZWN0ZWQgaW4gc3RyaW5n
IGVxIGF0IC4vc2NyaXB0cy9jaGVja3BhdGNoLnBsIGxpbmUgMTUyOS4KV0FSTklORzogYWRkZWQs
IG1vdmVkIG9yIGRlbGV0ZWQgZmlsZShzKSwgZG9lcyBNQUlOVEFJTkVSUyBuZWVkIHVwZGF0aW5n
PwojMTAxOiAKbmV3IGZpbGUgbW9kZSAxMDA2NDQKCkVSUk9SOiBpZiB0aGlzIGNvZGUgaXMgcmVk
dW5kYW50IGNvbnNpZGVyIHJlbW92aW5nIGl0CiMxNTM6IEZJTEU6IHVpL3ZkYWdlbnQuYzo0ODoK
KyNpZiAwCgpXQVJOSU5HOiBsaW5lIG92ZXIgODAgY2hhcmFjdGVycwojMTU1OiBGSUxFOiB1aS92
ZGFnZW50LmM6NTA6CisgICAgW1ZEX0FHRU5UX0NBUF9DTElQQk9BUkRfTk9fUkVMRUFTRV9PTl9S
RUdSQUJdID0gImNsaXBib2FyZC1uby1yZWxlYXNlLW9uLXJlZ3JhYiIsCgpFUlJPUjogaWYgdGhp
cyBjb2RlIGlzIHJlZHVuZGFudCBjb25zaWRlciByZW1vdmluZyBpdAojMTc2OiBGSUxFOiB1aS92
ZGFnZW50LmM6NzE6CisjaWYgMAoKV0FSTklORzogbGluZSBvdmVyIDgwIGNoYXJhY3RlcnMKIzIy
ODogRklMRTogdWkvdmRhZ2VudC5jOjEyMzoKKyAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgc2l6ZW9mKFZEQWdlbnRBbm5vdW5jZUNhcGFiaWxpdGllcykgKwoK
dG90YWw6IDIgZXJyb3JzLCAzIHdhcm5pbmdzLCAzNjUgbGluZXMgY2hlY2tlZAoKUGF0Y2ggNC85
IGhhcyBzdHlsZSBwcm9ibGVtcywgcGxlYXNlIHJldmlldy4gIElmIGFueSBvZiB0aGVzZSBlcnJv
cnMKYXJlIGZhbHNlIHBvc2l0aXZlcyByZXBvcnQgdGhlbSB0byB0aGUgbWFpbnRhaW5lciwgc2Vl
CkNIRUNLUEFUQ0ggaW4gTUFJTlRBSU5FUlMuCgo1LzkgQ2hlY2tpbmcgY29tbWl0IDcxNGE2YWFl
OWU0NSAodWkvdmRhZ2VudDogYWRkIG1vdXNlIHN1cHBvcnQpCkVSUk9SOiBpZiB0aGlzIGNvZGUg
aXMgcmVkdW5kYW50IGNvbnNpZGVyIHJlbW92aW5nIGl0CiMxNDc6IEZJTEU6IHVpL3ZkYWdlbnQu
YzoxODk6CisjaWYgMAoKdG90YWw6IDEgZXJyb3JzLCAwIHdhcm5pbmdzLCAyMzggbGluZXMgY2hl
Y2tlZAoKUGF0Y2ggNS85IGhhcyBzdHlsZSBwcm9ibGVtcywgcGxlYXNlIHJldmlldy4gIElmIGFu
eSBvZiB0aGVzZSBlcnJvcnMKYXJlIGZhbHNlIHBvc2l0aXZlcyByZXBvcnQgdGhlbSB0byB0aGUg
bWFpbnRhaW5lciwgc2VlCkNIRUNLUEFUQ0ggaW4gTUFJTlRBSU5FUlMuCgo2LzkgQ2hlY2tpbmcg
Y29tbWl0IDJkYTQ1OGJhNWIzOCAodWkvdmRhZ2VudDogYWRkIGNsaXBib2FyZCBzdXBwb3J0KQpF
UlJPUjogaWYgdGhpcyBjb2RlIGlzIHJlZHVuZGFudCBjb25zaWRlciByZW1vdmluZyBpdAojMTIx
OiBGSUxFOiB1aS92ZGFnZW50LmM6MTE1OgorI2lmIDAKCkVSUk9SOiBsaW5lIG92ZXIgOTAgY2hh
cmFjdGVycwojMTcxOiBGSUxFOiB1aS92ZGFnZW50LmM6MzA4OgorICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzaXplb2YodWludDMyX3QpICogKFFFTVVfQ0xJ
UEJPQVJEX1RZUEVfX0NPVU5UICsgMSkpOwoKV0FSTklORzogbGluZSBvdmVyIDgwIGNoYXJhY3Rl
cnMKIzQ0MDogRklMRTogdWkvdmRhZ2VudC5jOjcyOToKKyAgICBjZmctPmNsaXBib2FyZCA9IHFl
bXVfb3B0X2dldF9ib29sKG9wdHMsICJjbGlwYm9hcmQiLCBWREFHRU5UX0NMSVBCT0FSRF9ERUZB
VUxUKTsKCnRvdGFsOiAyIGVycm9ycywgMSB3YXJuaW5ncywgMzkzIGxpbmVzIGNoZWNrZWQKClBh
dGNoIDYvOSBoYXMgc3R5bGUgcHJvYmxlbXMsIHBsZWFzZSByZXZpZXcuICBJZiBhbnkgb2YgdGhl
c2UgZXJyb3JzCmFyZSBmYWxzZSBwb3NpdGl2ZXMgcmVwb3J0IHRoZW0gdG8gdGhlIG1haW50YWlu
ZXIsIHNlZQpDSEVDS1BBVENIIGluIE1BSU5UQUlORVJTLgoKNy85IENoZWNraW5nIGNvbW1pdCAy
ZWMxMjVlMWE4ODkgKHVpL3ZuYzogY2xpcGJvYXJkIHN1cHBvcnQpClVzZSBvZiB1bmluaXRpYWxp
emVkIHZhbHVlICRhY3BpX3Rlc3RleHBlY3RlZCBpbiBzdHJpbmcgZXEgYXQgLi9zY3JpcHRzL2No
ZWNrcGF0Y2gucGwgbGluZSAxNTI5LgpXQVJOSU5HOiBhZGRlZCwgbW92ZWQgb3IgZGVsZXRlZCBm
aWxlKHMpLCBkb2VzIE1BSU5UQUlORVJTIG5lZWQgdXBkYXRpbmc/CiMzMzogCm5ldyBmaWxlIG1v
ZGUgMTAwNjQ0CgpXQVJOSU5HOiBsaW5lIG92ZXIgODAgY2hhcmFjdGVycwojMjgwOiBGSUxFOiB1
aS92bmMtY2xpcGJvYXJkLmM6MjQzOgordm9pZCB2bmNfY2xpZW50X2N1dF90ZXh0X2V4dChWbmNT
dGF0ZSAqdnMsIGludDMyX3QgbGVuLCB1aW50MzJfdCBmbGFncywgdWludDhfdCAqZGF0YSkKCldB
Uk5JTkc6IGxpbmUgb3ZlciA4MCBjaGFyYWN0ZXJzCiMyODk6IEZJTEU6IHVpL3ZuYy1jbGlwYm9h
cmQuYzoyNTI6CisgICAgICAgICAgICBxZW11X2NsaXBib2FyZF9pbmZvX25ldygmdnMtPmNicGVl
ciwgUUVNVV9DTElQQk9BUkRfU0VMRUNUSU9OX0NMSVBCT0FSRCk7CgpXQVJOSU5HOiBsaW5lIG92
ZXIgODAgY2hhcmFjdGVycwojMzMzOiBGSUxFOiB1aS92bmMtY2xpcGJvYXJkLmM6Mjk2OgorICAg
ICAgICBxZW11X2NsaXBib2FyZF9pbmZvX25ldygmdnMtPmNicGVlciwgUUVNVV9DTElQQk9BUkRf
U0VMRUNUSU9OX0NMSVBCT0FSRCk7CgpFUlJPUjogbGluZSBvdmVyIDkwIGNoYXJhY3RlcnMKIzQy
MDogRklMRTogdWkvdm5jLmM6MjQ1ODoKKyAgICAgICAgICAgIHZuY19jbGllbnRfY3V0X3RleHRf
ZXh0KHZzLCBhYnMocmVhZF9zMzIoZGF0YSwgNCkpLCByZWFkX3UzMihkYXRhLCA4KSwgZGF0YSAr
IDEyKTsKCldBUk5JTkc6IGxpbmUgb3ZlciA4MCBjaGFyYWN0ZXJzCiM0OTk6IEZJTEU6IHVpL3Zu
Yy5oOjY0MzoKK3ZvaWQgdm5jX2NsaWVudF9jdXRfdGV4dF9leHQoVm5jU3RhdGUgKnZzLCBpbnQz
Ml90IGxlbiwgdWludDMyX3QgZmxhZ3MsIHVpbnQ4X3QgKmRhdGEpOwoKdG90YWw6IDEgZXJyb3Jz
LCA1IHdhcm5pbmdzLCA0NTAgbGluZXMgY2hlY2tlZAoKUGF0Y2ggNy85IGhhcyBzdHlsZSBwcm9i
bGVtcywgcGxlYXNlIHJldmlldy4gIElmIGFueSBvZiB0aGVzZSBlcnJvcnMKYXJlIGZhbHNlIHBv
c2l0aXZlcyByZXBvcnQgdGhlbSB0byB0aGUgbWFpbnRhaW5lciwgc2VlCkNIRUNLUEFUQ0ggaW4g
TUFJTlRBSU5FUlMuCgo4LzkgQ2hlY2tpbmcgY29tbWl0IDk3ZDQxNzFmMmI2NiAodWkvZ3RrOiBt
b3ZlIHN0cnVjdCBHdGtEaXNwbGF5U3RhdGUgdG8gdWkvZ3RrLmgpCjkvOSBDaGVja2luZyBjb21t
aXQgZmE4OGY2MzUxNDA3ICh1aS9ndGs6IGFkZCBjbGlwYm9hcmQgc3VwcG9ydCkKVXNlIG9mIHVu
aW5pdGlhbGl6ZWQgdmFsdWUgJGFjcGlfdGVzdGV4cGVjdGVkIGluIHN0cmluZyBlcSBhdCAuL3Nj
cmlwdHMvY2hlY2twYXRjaC5wbCBsaW5lIDE1MjkuCldBUk5JTkc6IGFkZGVkLCBtb3ZlZCBvciBk
ZWxldGVkIGZpbGUocyksIGRvZXMgTUFJTlRBSU5FUlMgbmVlZCB1cGRhdGluZz8KIzUyOiAKbmV3
IGZpbGUgbW9kZSAxMDA2NDQKCldBUk5JTkc6IGxpbmUgb3ZlciA4MCBjaGFyYWN0ZXJzCiMxMzU6
IEZJTEU6IHVpL2d0ay1jbGlwYm9hcmQuYzo3OToKKyAgICBHdGtEaXNwbGF5U3RhdGUgKmdkID0g
Y29udGFpbmVyX29mKG5vdGlmaWVyLCBHdGtEaXNwbGF5U3RhdGUsIGNicGVlci51cGRhdGUpOwoK
dG90YWw6IDAgZXJyb3JzLCAyIHdhcm5pbmdzLCAyMzMgbGluZXMgY2hlY2tlZAoKUGF0Y2ggOS85
IGhhcyBzdHlsZSBwcm9ibGVtcywgcGxlYXNlIHJldmlldy4gIElmIGFueSBvZiB0aGVzZSBlcnJv
cnMKYXJlIGZhbHNlIHBvc2l0aXZlcyByZXBvcnQgdGhlbSB0byB0aGUgbWFpbnRhaW5lciwgc2Vl
CkNIRUNLUEFUQ0ggaW4gTUFJTlRBSU5FUlMuCj09PSBPVVRQVVQgRU5EID09PQoKVGVzdCBjb21t
YW5kIGV4aXRlZCB3aXRoIGNvZGU6IDEKCgpUaGUgZnVsbCBsb2cgaXMgYXZhaWxhYmxlIGF0Cmh0
dHA6Ly9wYXRjaGV3Lm9yZy9sb2dzLzIwMjEwNDIzMDgzMzUxLjIwOTY3MzQtMS1rcmF4ZWxAcmVk
aGF0LmNvbS90ZXN0aW5nLmNoZWNrcGF0Y2gvP3R5cGU9bWVzc2FnZS4KLS0tCkVtYWlsIGdlbmVy
YXRlZCBhdXRvbWF0aWNhbGx5IGJ5IFBhdGNoZXcgW2h0dHBzOi8vcGF0Y2hldy5vcmcvXS4KUGxl
YXNlIHNlbmQgeW91ciBmZWVkYmFjayB0byBwYXRjaGV3LWRldmVsQHJlZGhhdC5jb20=

