Return-Path: <qemu-devel-bounces+lists+qemu-devel=lfdr.de@nongnu.org>
X-Original-To: lists+qemu-devel@lfdr.de
Delivered-To: lists+qemu-devel@lfdr.de
Received: from lists.gnu.org (lists.gnu.org [209.51.188.17])
	by mail.lfdr.de (Postfix) with ESMTPS id 30D69312A37
	for <lists+qemu-devel@lfdr.de>; Mon,  8 Feb 2021 06:49:23 +0100 (CET)
Received: from localhost ([::1]:38994 helo=lists1p.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.90_1)
	(envelope-from <qemu-devel-bounces+lists+qemu-devel=lfdr.de@nongnu.org>)
	id 1l8zQI-0000zL-48
	for lists+qemu-devel@lfdr.de; Mon, 08 Feb 2021 00:49:22 -0500
Received: from eggs.gnu.org ([2001:470:142:3::10]:55786)
 by lists.gnu.org with esmtps (TLS1.2:ECDHE_RSA_AES_256_GCM_SHA384:256)
 (Exim 4.90_1) (envelope-from <tsimpson@qualcomm.com>)
 id 1l8zNk-0007Xv-3a
 for qemu-devel@nongnu.org; Mon, 08 Feb 2021 00:46:45 -0500
Received: from alexa-out-sd-01.qualcomm.com ([199.106.114.38]:14438)
 by eggs.gnu.org with esmtps (TLS1.2:RSA_AES_256_CBC_SHA1:256)
 (Exim 4.90_1) (envelope-from <tsimpson@qualcomm.com>)
 id 1l8zNZ-0006ST-OT
 for qemu-devel@nongnu.org; Mon, 08 Feb 2021 00:46:43 -0500
DKIM-Signature: v=1; a=rsa-sha256; c=simple/simple;
 d=quicinc.com; i=@quicinc.com; q=dns/txt; s=qcdkim;
 t=1612763193; x=1644299193;
 h=from:to:cc:subject:date:message-id:in-reply-to:
 references:mime-version:content-transfer-encoding;
 bh=2IPSQSwEyn2A+VobZQmK657x6nBVTKQ9k5zCiVhvVNs=;
 b=LtCO2G3b7VyGD4IbCSTYWhqI8NEkQdXH1rzWykbHCQsRalUxaRCAEVkl
 A1zRyX+iS6tNGxUu8t1bkKLlXrnIIlygc4VUQ1OWTX+9iC4d+dVWHtf8D
 UIo6raW1aKJkTZtLPKYq/qvyWlHE1lIpI510s0xFHsr738DQHuAEk2wV4 U=;
Received: from unknown (HELO ironmsg03-sd.qualcomm.com) ([10.53.140.143])
 by alexa-out-sd-01.qualcomm.com with ESMTP; 07 Feb 2021 21:46:30 -0800
X-QCInternal: smtphost
Received: from vu-tsimpson-aus.qualcomm.com (HELO
 vu-tsimpson1-aus.qualcomm.com) ([10.222.150.1])
 by ironmsg03-sd.qualcomm.com with ESMTP; 07 Feb 2021 21:46:29 -0800
Received: by vu-tsimpson1-aus.qualcomm.com (Postfix, from userid 47164)
 id 5D8104129; Sun,  7 Feb 2021 23:46:29 -0600 (CST)
From: Taylor Simpson <tsimpson@quicinc.com>
To: qemu-devel@nongnu.org
Subject: [PATCH v8 12/35] Hexagon (target/hexagon) instruction attributes
Date: Sun,  7 Feb 2021 23:46:02 -0600
Message-Id: <1612763186-18161-13-git-send-email-tsimpson@quicinc.com>
X-Mailer: git-send-email 2.7.4
In-Reply-To: <1612763186-18161-1-git-send-email-tsimpson@quicinc.com>
References: <1612763186-18161-1-git-send-email-tsimpson@quicinc.com>
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Received-SPF: pass client-ip=199.106.114.38;
 envelope-from=tsimpson@qualcomm.com; helo=alexa-out-sd-01.qualcomm.com
X-Spam_score_int: -40
X-Spam_score: -4.1
X-Spam_bar: ----
X-Spam_report: (-4.1 / 5.0 requ) BAYES_00=-1.9, DKIM_SIGNED=0.1,
 DKIM_VALID=-0.1, DKIM_VALID_AU=-0.1, HEADER_FROM_DIFFERENT_DOMAINS=0.248,
 RCVD_IN_DNSWL_MED=-2.3, SPF_HELO_NONE=0.001,
 SPF_PASS=-0.001 autolearn=ham autolearn_force=no
X-Spam_action: no action
X-BeenThere: qemu-devel@nongnu.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: <qemu-devel.nongnu.org>
List-Unsubscribe: <https://lists.nongnu.org/mailman/options/qemu-devel>,
 <mailto:qemu-devel-request@nongnu.org?subject=unsubscribe>
List-Archive: <https://lists.nongnu.org/archive/html/qemu-devel>
List-Post: <mailto:qemu-devel@nongnu.org>
List-Help: <mailto:qemu-devel-request@nongnu.org?subject=help>
List-Subscribe: <https://lists.nongnu.org/mailman/listinfo/qemu-devel>,
 <mailto:qemu-devel-request@nongnu.org?subject=subscribe>
Cc: ale@rev.ng, bcain@quicinc.com, philmd@redhat.com,
 richard.henderson@linaro.org, laurent@vivier.eu, tsimpson@quicinc.com,
 alex.bennee@linaro.org
Errors-To: qemu-devel-bounces+lists+qemu-devel=lfdr.de@nongnu.org
Sender: "Qemu-devel" <qemu-devel-bounces+lists+qemu-devel=lfdr.de@nongnu.org>

U2lnbmVkLW9mZi1ieTogVGF5bG9yIFNpbXBzb24gPHRzaW1wc29uQHF1aWNpbmMuY29tPgpSZXZp
ZXdlZC1ieTogUGhpbGlwcGUgTWF0aGlldS1EYXVkw6kgPGY0YnVnQGFtc2F0Lm9yZz4KLS0tCiB0
YXJnZXQvaGV4YWdvbi9hdHRyaWJzLmggICAgICAgICB8IDM1ICsrKysrKysrKysrKysrKwogdGFy
Z2V0L2hleGFnb24vYXR0cmlic19kZWYuaC5pbmMgfCA5NyArKysrKysrKysrKysrKysrKysrKysr
KysrKysrKysrKysrKysrKysrCiAyIGZpbGVzIGNoYW5nZWQsIDEzMiBpbnNlcnRpb25zKCspCiBj
cmVhdGUgbW9kZSAxMDA2NDQgdGFyZ2V0L2hleGFnb24vYXR0cmlicy5oCiBjcmVhdGUgbW9kZSAx
MDA2NDQgdGFyZ2V0L2hleGFnb24vYXR0cmlic19kZWYuaC5pbmMKCmRpZmYgLS1naXQgYS90YXJn
ZXQvaGV4YWdvbi9hdHRyaWJzLmggYi90YXJnZXQvaGV4YWdvbi9hdHRyaWJzLmgKbmV3IGZpbGUg
bW9kZSAxMDA2NDQKaW5kZXggMDAwMDAwMC4uNTQ1NzZmNAotLS0gL2Rldi9udWxsCisrKyBiL3Rh
cmdldC9oZXhhZ29uL2F0dHJpYnMuaApAQCAtMCwwICsxLDM1IEBACisvKgorICogIENvcHlyaWdo
dChjKSAyMDE5LTIwMjEgUXVhbGNvbW0gSW5ub3ZhdGlvbiBDZW50ZXIsIEluYy4gQWxsIFJpZ2h0
cyBSZXNlcnZlZC4KKyAqCisgKiAgVGhpcyBwcm9ncmFtIGlzIGZyZWUgc29mdHdhcmU7IHlvdSBj
YW4gcmVkaXN0cmlidXRlIGl0IGFuZC9vciBtb2RpZnkKKyAqICBpdCB1bmRlciB0aGUgdGVybXMg
b2YgdGhlIEdOVSBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlIGFzIHB1Ymxpc2hlZCBieQorICogIHRo
ZSBGcmVlIFNvZnR3YXJlIEZvdW5kYXRpb247IGVpdGhlciB2ZXJzaW9uIDIgb2YgdGhlIExpY2Vu
c2UsIG9yCisgKiAgKGF0IHlvdXIgb3B0aW9uKSBhbnkgbGF0ZXIgdmVyc2lvbi4KKyAqCisgKiAg
VGhpcyBwcm9ncmFtIGlzIGRpc3RyaWJ1dGVkIGluIHRoZSBob3BlIHRoYXQgaXQgd2lsbCBiZSB1
c2VmdWwsCisgKiAgYnV0IFdJVEhPVVQgQU5ZIFdBUlJBTlRZOyB3aXRob3V0IGV2ZW4gdGhlIGlt
cGxpZWQgd2FycmFudHkgb2YKKyAqICBNRVJDSEFOVEFCSUxJVFkgb3IgRklUTkVTUyBGT1IgQSBQ
QVJUSUNVTEFSIFBVUlBPU0UuICBTZWUgdGhlCisgKiAgR05VIEdlbmVyYWwgUHVibGljIExpY2Vu
c2UgZm9yIG1vcmUgZGV0YWlscy4KKyAqCisgKiAgWW91IHNob3VsZCBoYXZlIHJlY2VpdmVkIGEg
Y29weSBvZiB0aGUgR05VIEdlbmVyYWwgUHVibGljIExpY2Vuc2UKKyAqICBhbG9uZyB3aXRoIHRo
aXMgcHJvZ3JhbTsgaWYgbm90LCBzZWUgPGh0dHA6Ly93d3cuZ251Lm9yZy9saWNlbnNlcy8+Lgor
ICovCisKKyNpZm5kZWYgSEVYQUdPTl9BVFRSSUJTX0gKKyNkZWZpbmUgSEVYQUdPTl9BVFRSSUJT
X0gKKworI2luY2x1ZGUgInFlbXUvYml0bWFwLmgiCisjaW5jbHVkZSAib3Bjb2Rlcy5oIgorCitl
bnVtIHsKKyNkZWZpbmUgREVGX0FUVFJJQihOQU1FLCAuLi4pIEFfIyNOQU1FLAorI2luY2x1ZGUg
ImF0dHJpYnNfZGVmLmguaW5jIgorI3VuZGVmIERFRl9BVFRSSUIKK307CisKK2V4dGVybiBERUNM
QVJFX0JJVE1BUChvcGNvZGVfYXR0cmlic1tYWF9MQVNUX09QQ09ERV0sIEFfWlpfTEFTVEFUVFJJ
Qik7CisKKyNkZWZpbmUgR0VUX0FUVFJJQihvcGNvZGUsIGF0dHJpYikgXAorICAgIHRlc3RfYml0
KGF0dHJpYiwgb3Bjb2RlX2F0dHJpYnNbb3Bjb2RlXSkKKworI2VuZGlmIC8qIEFUVFJJQlNfSCAq
LwpkaWZmIC0tZ2l0IGEvdGFyZ2V0L2hleGFnb24vYXR0cmlic19kZWYuaC5pbmMgYi90YXJnZXQv
aGV4YWdvbi9hdHRyaWJzX2RlZi5oLmluYwpuZXcgZmlsZSBtb2RlIDEwMDY0NAppbmRleCAwMDAw
MDAwLi4zODE1NTA5Ci0tLSAvZGV2L251bGwKKysrIGIvdGFyZ2V0L2hleGFnb24vYXR0cmlic19k
ZWYuaC5pbmMKQEAgLTAsMCArMSw5NyBAQAorLyoKKyAqICBDb3B5cmlnaHQoYykgMjAxOS0yMDIx
IFF1YWxjb21tIElubm92YXRpb24gQ2VudGVyLCBJbmMuIEFsbCBSaWdodHMgUmVzZXJ2ZWQuCisg
KgorICogIFRoaXMgcHJvZ3JhbSBpcyBmcmVlIHNvZnR3YXJlOyB5b3UgY2FuIHJlZGlzdHJpYnV0
ZSBpdCBhbmQvb3IgbW9kaWZ5CisgKiAgaXQgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBHTlUgR2Vu
ZXJhbCBQdWJsaWMgTGljZW5zZSBhcyBwdWJsaXNoZWQgYnkKKyAqICB0aGUgRnJlZSBTb2Z0d2Fy
ZSBGb3VuZGF0aW9uOyBlaXRoZXIgdmVyc2lvbiAyIG9mIHRoZSBMaWNlbnNlLCBvcgorICogIChh
dCB5b3VyIG9wdGlvbikgYW55IGxhdGVyIHZlcnNpb24uCisgKgorICogIFRoaXMgcHJvZ3JhbSBp
cyBkaXN0cmlidXRlZCBpbiB0aGUgaG9wZSB0aGF0IGl0IHdpbGwgYmUgdXNlZnVsLAorICogIGJ1
dCBXSVRIT1VUIEFOWSBXQVJSQU5UWTsgd2l0aG91dCBldmVuIHRoZSBpbXBsaWVkIHdhcnJhbnR5
IG9mCisgKiAgTUVSQ0hBTlRBQklMSVRZIG9yIEZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQ
T1NFLiAgU2VlIHRoZQorICogIEdOVSBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlIGZvciBtb3JlIGRl
dGFpbHMuCisgKgorICogIFlvdSBzaG91bGQgaGF2ZSByZWNlaXZlZCBhIGNvcHkgb2YgdGhlIEdO
VSBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlCisgKiAgYWxvbmcgd2l0aCB0aGlzIHByb2dyYW07IGlm
IG5vdCwgc2VlIDxodHRwOi8vd3d3LmdudS5vcmcvbGljZW5zZXMvPi4KKyAqLworCisvKiBLZWVw
IHRoaXMgYXMgdGhlIGZpcnN0IGF0dHJpYnV0ZTogKi8KK0RFRl9BVFRSSUIoQUFfRFVNTVksICJE
dW1teSBaZXJvdGggQXR0cmlidXRlIiwgIiIsICIiKQorCisvKiBNaXNjICovCitERUZfQVRUUklC
KEVYVEVOU0lPTiwgIkV4dGVuc2lvbiBpbnN0cnVjdGlvbiIsICIiLCAiIikKKworREVGX0FUVFJJ
QihQUklWLCAiTm90IGF2YWlsYWJsZSBpbiB1c2VyIG9yIGd1ZXN0IG1vZGUiLCAiIiwgIiIpCitE
RUZfQVRUUklCKEdVRVNULCAiTm90IGF2YWlsYWJsZSBpbiB1c2VyIG1vZGUiLCAiIiwgIiIpCisK
K0RFRl9BVFRSSUIoRlBPUCwgIkZsb2F0aW5nIFBvaW50IE9wZXJhdGlvbiIsICIiLCAiIikKKwor
REVGX0FUVFJJQihFWFRFTkRBQkxFLCAiSW1tZWRpYXRlIG1heSBiZSBleHRlbmRlZCIsICIiLCAi
IikKKworREVGX0FUVFJJQihBUkNIVjIsICJWMiBhcmNoaXRlY3R1cmUiLCAiIiwgIiIpCitERUZf
QVRUUklCKEFSQ0hWMywgIlYzIGFyY2hpdGVjdHVyZSIsICIiLCAiIikKK0RFRl9BVFRSSUIoQVJD
SFY0LCAiVjQgYXJjaGl0ZWN0dXJlIiwgIiIsICIiKQorREVGX0FUVFJJQihBUkNIVjUsICJWNSBh
cmNoaXRlY3R1cmUiLCAiIiwgIiIpCisKK0RFRl9BVFRSSUIoU1VCSU5TTiwgInN1Yi1pbnN0cnVj
dGlvbiIsICIiLCAiIikKKworLyogTG9hZCBhbmQgU3RvcmUgYXR0cmlidXRlcyAqLworREVGX0FU
VFJJQihMT0FELCAiTG9hZHMgZnJvbSBtZW1vcnkiLCAiIiwgIiIpCitERUZfQVRUUklCKFNUT1JF
LCAiU3RvcmVzIHRvIG1lbW9yeSIsICIiLCAiIikKK0RFRl9BVFRSSUIoTUVNTElLRSwgIk1lbW9y
eS1saWtlIGluc3RydWN0aW9uIiwgIiIsICIiKQorREVGX0FUVFJJQihNRU1MSUtFX1BBQ0tFVF9S
VUxFUywgImZvbGxvd3MgTWVtb3J5LWxpa2UgcGFja2V0IHJ1bGVzIiwgIiIsICIiKQorCisKKy8q
IENoYW5nZS1vZi1mbG93IGF0dHJpYnV0ZXMgKi8KK0RFRl9BVFRSSUIoSlVNUCwgIkp1bXAtdHlw
ZSBpbnN0cnVjdGlvbiIsICIiLCAiIikKK0RFRl9BVFRSSUIoSU5ESVJFQ1QsICJBYnNvbHV0ZSBy
ZWdpc3RlciBqdW1wIiwgIiIsICIiKQorREVGX0FUVFJJQihDQUxMLCAiRnVuY3Rpb24gY2FsbCBp
bnN0cnVjdGlvbiIsICIiLCAiIikKK0RFRl9BVFRSSUIoQ09GLCAiQ2hhbmdlLW9mLWZsb3cgaW5z
dHJ1Y3Rpb24iLCAiIiwgIiIpCitERUZfQVRUUklCKENPTkRFWEVDLCAiTWF5IGJlIGNhbmNlbGxl
ZCBieSBhIHByZWRpY2F0ZSIsICIiLCAiIikKK0RFRl9BVFRSSUIoRE9UTkVXVkFMVUUsICJVc2Vz
IGEgcmVnaXN0ZXIgdmFsdWUgZ2VuZXJhdGVkIGluIHRoaXMgcGt0IiwgIiIsICIiKQorREVGX0FU
VFJJQihORVdDTVBKVU1QLCAiQ29tcG91bmQgY29tcGFyZSBhbmQganVtcCIsICIiLCAiIikKKwor
LyogYWNjZXNzIHRvIGltcGxpY2l0IHJlZ2lzdGVycyAqLworREVGX0FUVFJJQihJTVBMSUNJVF9X
UklURVNfTFIsICJXcml0ZXMgdGhlIGxpbmsgcmVnaXN0ZXIiLCAiIiwgIlVSRUcuTFIiKQorREVG
X0FUVFJJQihJTVBMSUNJVF9XUklURVNfU1AsICJXcml0ZXMgdGhlIHN0YWNrIHBvaW50ZXIiLCAi
IiwgIlVSRUcuU1AiKQorREVGX0FUVFJJQihJTVBMSUNJVF9XUklURVNfRlAsICJXcml0ZXMgdGhl
IGZyYW1lIHBvaW50ZXIiLCAiIiwgIlVSRUcuRlAiKQorREVGX0FUVFJJQihJTVBMSUNJVF9XUklU
RVNfTEMwLCAiV3JpdGVzIGxvb3AgY291bnQgZm9yIGxvb3AgMCIsICIiLCAiVVJFRy5MQzAiKQor
REVGX0FUVFJJQihJTVBMSUNJVF9XUklURVNfTEMxLCAiV3JpdGVzIGxvb3AgY291bnQgZm9yIGxv
b3AgMSIsICIiLCAiVVJFRy5MQzEiKQorREVGX0FUVFJJQihJTVBMSUNJVF9XUklURVNfU0EwLCAi
V3JpdGVzIHN0YXJ0IGFkZHIgZm9yIGxvb3AgMCIsICIiLCAiVVJFRy5TQTAiKQorREVGX0FUVFJJ
QihJTVBMSUNJVF9XUklURVNfU0ExLCAiV3JpdGVzIHN0YXJ0IGFkZHIgZm9yIGxvb3AgMSIsICIi
LCAiVVJFRy5TQTEiKQorREVGX0FUVFJJQihJTVBMSUNJVF9XUklURVNfUDAsICJXcml0ZXMgUHJl
ZGljYXRlIDAiLCAiIiwgIlVSRUcuUDAiKQorREVGX0FUVFJJQihJTVBMSUNJVF9XUklURVNfUDEs
ICJXcml0ZXMgUHJlZGljYXRlIDEiLCAiIiwgIlVSRUcuUDEiKQorREVGX0FUVFJJQihJTVBMSUNJ
VF9XUklURVNfUDIsICJXcml0ZXMgUHJlZGljYXRlIDEiLCAiIiwgIlVSRUcuUDIiKQorREVGX0FU
VFJJQihJTVBMSUNJVF9XUklURVNfUDMsICJNYXkgd3JpdGUgUHJlZGljYXRlIDMiLCAiIiwgIlVS
RUcuUDMiKQorREVGX0FUVFJJQihJTVBMSUNJVF9SRUFEU19QQywgIlJlYWRzIHRoZSBQQyByZWdp
c3RlciIsICIiLCAiIikKK0RFRl9BVFRSSUIoV1JJVEVTX1BSRURfUkVHLCAiV3JpdGVzIGEgcHJl
ZGljYXRlIHJlZ2lzdGVyIiwgIiIsICIiKQorCitERUZfQVRUUklCKENSU0xPVDIzLCAiQ2FuIGV4
ZWN1dGUgaW4gc2xvdCAyIG9yIHNsb3QgMyAoQ1IpIiwgIiIsICIiKQorREVGX0FUVFJJQihJVF9O
T1AsICJub3AgaW5zdHJ1Y3Rpb24iLCAiIiwgIiIpCitERUZfQVRUUklCKElUX0VYVEVOREVSLCAi
Y29uc3RhbnQgZXh0ZW5kZXIgaW5zdHJ1Y3Rpb24iLCAiIiwgIiIpCisKKworLyogUmVzdHJpY3Rp
b25zIHRvIG1ha2Ugbm90ZSBvZiAqLworREVGX0FUVFJJQihSRVNUUklDVF9TTE9UME9OTFksICJN
dXN0IGV4ZWN1dGUgb24gc2xvdDAiLCAiIiwgIiIpCitERUZfQVRUUklCKFJFU1RSSUNUX1NMT1Qx
T05MWSwgIk11c3QgZXhlY3V0ZSBvbiBzbG90MSIsICIiLCAiIikKK0RFRl9BVFRSSUIoUkVTVFJJ
Q1RfU0xPVDJPTkxZLCAiTXVzdCBleGVjdXRlIG9uIHNsb3QyIiwgIiIsICIiKQorREVGX0FUVFJJ
QihSRVNUUklDVF9TTE9UM09OTFksICJNdXN0IGV4ZWN1dGUgb24gc2xvdDMiLCAiIiwgIiIpCitE
RUZfQVRUUklCKFJFU1RSSUNUX05PU0xPVDEsICJObyBzbG90IDEgaW5zdHJ1Y3Rpb24gaW4gcGFy
YWxsZWwiLCAiIiwgIiIpCitERUZfQVRUUklCKFJFU1RSSUNUX1BSRUZFUlNMT1QwLCAiVHJ5IHRv
IGVuY29kZSBpbnRvIHNsb3QgMCIsICIiLCAiIikKKworREVGX0FUVFJJQihJQ09QLCAiSW5zdHJ1
Y3Rpb24gY2FjaGUgb3AiLCAiIiwgIiIpCisKK0RFRl9BVFRSSUIoSFdMT09QMF9FTkQsICJFbmRz
IEhXIGxvb3AwIiwgIiIsICIiKQorREVGX0FUVFJJQihIV0xPT1AxX0VORCwgIkVuZHMgSFcgbG9v
cDEiLCAiIiwgIiIpCitERUZfQVRUUklCKERDWkVST0EsICJkY3plcm9hIHR5cGUiLCAiIiwgIiIp
CitERUZfQVRUUklCKElDRkxVU0hPUCwgImljZmx1c2ggb3AgdHlwZSIsICIiLCAiIikKK0RFRl9B
VFRSSUIoRENGTFVTSE9QLCAiZGNmbHVzaCBvcCB0eXBlIiwgIiIsICIiKQorREVGX0FUVFJJQihE
Q0ZFVENILCAiZGNmZXRjaCB0eXBlIiwgIiIsICIiKQorCitERUZfQVRUUklCKEwyRkVUQ0gsICJJ
bnN0cnVjdGlvbiBpcyBsMmZldGNoIHR5cGUiLCAiIiwgIiIpCisKK0RFRl9BVFRSSUIoSUNJTlZB
LCAiaWNpbnZhIiwgIiIsICIiKQorREVGX0FUVFJJQihEQ0NMRUFOSU5WQSwgImRjY2xlYW5pbnZh
IiwgIiIsICIiKQorCisvKiBLZWVwIHRoaXMgYXMgdGhlIGxhc3QgYXR0cmlidXRlOiAqLworREVG
X0FUVFJJQihaWl9MQVNUQVRUUklCLCAiTGFzdCBhdHRyaWJ1dGUgaW4gdGhlIGZpbGUiLCAiIiwg
IiIpCi0tIAoyLjcuNAoK

