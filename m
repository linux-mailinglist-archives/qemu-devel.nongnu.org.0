Return-Path: <qemu-devel-bounces+lists+qemu-devel=lfdr.de@nongnu.org>
X-Original-To: lists+qemu-devel@lfdr.de
Delivered-To: lists+qemu-devel@lfdr.de
Received: from lists.gnu.org (lists.gnu.org [209.51.188.17])
	by mail.lfdr.de (Postfix) with ESMTPS id D4D221586DF
	for <lists+qemu-devel@lfdr.de>; Tue, 11 Feb 2020 01:47:46 +0100 (CET)
Received: from localhost ([::1]:41626 helo=lists1p.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.90_1)
	(envelope-from <qemu-devel-bounces+lists+qemu-devel=lfdr.de@nongnu.org>)
	id 1j1JiL-00038y-Pp
	for lists+qemu-devel@lfdr.de; Mon, 10 Feb 2020 19:47:45 -0500
Received: from eggs.gnu.org ([2001:470:142:3::10]:59878)
 by lists.gnu.org with esmtp (Exim 4.90_1)
 (envelope-from <tsimpson@qualcomm.com>) id 1j1Jbv-0000yu-Gc
 for qemu-devel@nongnu.org; Mon, 10 Feb 2020 19:41:11 -0500
Received: from Debian-exim by eggs.gnu.org with spam-scanned (Exim 4.71)
 (envelope-from <tsimpson@qualcomm.com>) id 1j1Jbr-000534-If
 for qemu-devel@nongnu.org; Mon, 10 Feb 2020 19:41:07 -0500
Received: from alexa-out-sd-02.qualcomm.com ([199.106.114.39]:59203)
 by eggs.gnu.org with esmtps (TLS1.0:RSA_AES_256_CBC_SHA1:32)
 (Exim 4.71) (envelope-from <tsimpson@qualcomm.com>)
 id 1j1Jbr-0004tJ-9J
 for qemu-devel@nongnu.org; Mon, 10 Feb 2020 19:41:03 -0500
DKIM-Signature: v=1; a=rsa-sha256; c=simple/simple;
 d=quicinc.com; i=@quicinc.com; q=dns/txt; s=qcdkim;
 t=1581381663; x=1612917663;
 h=from:to:cc:subject:date:message-id:in-reply-to:
 references:mime-version:content-transfer-encoding;
 bh=1Eo7K1kCF6R8uiK43nKK4ng2GnOHtoFZTcAxkHh+nxY=;
 b=y717KT9A+f6xk02kA95Vx+oRVuxlE7KJJiCkIaAzvNzu7iDJzorqcShP
 JCkLJFmjJOy1xa3YMH9Cw0t6yzgtjIihUQjsqJc0Fit/VRqZX9fRR+lmk
 qb7H80v1YhTi2Ku2Hu+HyLoTtqx6sKfQjRCOl63IZ4B+OsTRx/w5J/F8u g=;
Received: from unknown (HELO ironmsg02-sd.qualcomm.com) ([10.53.140.142])
 by alexa-out-sd-02.qualcomm.com with ESMTP; 10 Feb 2020 16:40:59 -0800
Received: from vu-tsimpson-aus.qualcomm.com (HELO
 vu-tsimpson1-aus.qualcomm.com) ([10.222.150.1])
 by ironmsg02-sd.qualcomm.com with ESMTP; 10 Feb 2020 16:40:58 -0800
Received: by vu-tsimpson1-aus.qualcomm.com (Postfix, from userid 47164)
 id F11071B27; Mon, 10 Feb 2020 18:40:57 -0600 (CST)
From: Taylor Simpson <tsimpson@quicinc.com>
To: qemu-devel@nongnu.org
Subject: [RFC PATCH 10/66] Hexagon register fields
Date: Mon, 10 Feb 2020 18:39:48 -0600
Message-Id: <1581381644-13678-11-git-send-email-tsimpson@quicinc.com>
X-Mailer: git-send-email 2.7.4
In-Reply-To: <1581381644-13678-1-git-send-email-tsimpson@quicinc.com>
References: <1581381644-13678-1-git-send-email-tsimpson@quicinc.com>
MIME-Version: 1.0
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
X-detected-operating-system: by eggs.gnu.org: FreeBSD 9.x [fuzzy]
X-Received-From: 199.106.114.39
X-BeenThere: qemu-devel@nongnu.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: <qemu-devel.nongnu.org>
List-Unsubscribe: <https://lists.nongnu.org/mailman/options/qemu-devel>,
 <mailto:qemu-devel-request@nongnu.org?subject=unsubscribe>
List-Archive: <https://lists.nongnu.org/archive/html/qemu-devel>
List-Post: <mailto:qemu-devel@nongnu.org>
List-Help: <mailto:qemu-devel-request@nongnu.org?subject=help>
List-Subscribe: <https://lists.nongnu.org/mailman/listinfo/qemu-devel>,
 <mailto:qemu-devel-request@nongnu.org?subject=subscribe>
Cc: riku.voipio@iki.fi, richard.henderson@linaro.org, laurent@vivier.eu,
 Taylor Simpson <tsimpson@quicinc.com>, philmd@redhat.com,
 aleksandar.m.mail@gmail.com
Errors-To: qemu-devel-bounces+lists+qemu-devel=lfdr.de@nongnu.org
Sender: "Qemu-devel" <qemu-devel-bounces+lists+qemu-devel=lfdr.de@nongnu.org>

RGVjbGFyZSBiaXRmaWVsZHMgd2l0aGluIHJlZ2lzdGVycyBzdWNoIGFzIHVzZXIgc3RhdHVzIHJl
Z2lzdGVyIChVU1IpCgpTaWduZWQtb2ZmLWJ5OiBUYXlsb3IgU2ltcHNvbiA8dHNpbXBzb25AcXVp
Y2luYy5jb20+Ci0tLQogdGFyZ2V0L2hleGFnb24vcmVnX2ZpZWxkcy5jICAgICB8ICAyOCArKysr
KysrKysrKwogdGFyZ2V0L2hleGFnb24vcmVnX2ZpZWxkcy5oICAgICB8ICA0MCArKysrKysrKysr
KysrKysKIHRhcmdldC9oZXhhZ29uL3JlZ19maWVsZHNfZGVmLmggfCAxMDkgKysrKysrKysrKysr
KysrKysrKysrKysrKysrKysrKysrKysrKysrKwogMyBmaWxlcyBjaGFuZ2VkLCAxNzcgaW5zZXJ0
aW9ucygrKQogY3JlYXRlIG1vZGUgMTAwNjQ0IHRhcmdldC9oZXhhZ29uL3JlZ19maWVsZHMuYwog
Y3JlYXRlIG1vZGUgMTAwNjQ0IHRhcmdldC9oZXhhZ29uL3JlZ19maWVsZHMuaAogY3JlYXRlIG1v
ZGUgMTAwNjQ0IHRhcmdldC9oZXhhZ29uL3JlZ19maWVsZHNfZGVmLmgKCmRpZmYgLS1naXQgYS90
YXJnZXQvaGV4YWdvbi9yZWdfZmllbGRzLmMgYi90YXJnZXQvaGV4YWdvbi9yZWdfZmllbGRzLmMK
bmV3IGZpbGUgbW9kZSAxMDA2NDQKaW5kZXggMDAwMDAwMC4uOTgzNjU1ZQotLS0gL2Rldi9udWxs
CisrKyBiL3RhcmdldC9oZXhhZ29uL3JlZ19maWVsZHMuYwpAQCAtMCwwICsxLDI4IEBACisvKgor
ICogIENvcHlyaWdodCAoYykgMjAxOSBRdWFsY29tbSBJbm5vdmF0aW9uIENlbnRlciwgSW5jLiBB
bGwgUmlnaHRzIFJlc2VydmVkLgorICoKKyAqICBUaGlzIHByb2dyYW0gaXMgZnJlZSBzb2Z0d2Fy
ZTsgeW91IGNhbiByZWRpc3RyaWJ1dGUgaXQgYW5kL29yIG1vZGlmeQorICogIGl0IHVuZGVyIHRo
ZSB0ZXJtcyBvZiB0aGUgR05VIEdlbmVyYWwgUHVibGljIExpY2Vuc2UgYXMgcHVibGlzaGVkIGJ5
CisgKiAgdGhlIEZyZWUgU29mdHdhcmUgRm91bmRhdGlvbjsgZWl0aGVyIHZlcnNpb24gMiBvZiB0
aGUgTGljZW5zZSwgb3IKKyAqICAoYXQgeW91ciBvcHRpb24pIGFueSBsYXRlciB2ZXJzaW9uLgor
ICoKKyAqICBUaGlzIHByb2dyYW0gaXMgZGlzdHJpYnV0ZWQgaW4gdGhlIGhvcGUgdGhhdCBpdCB3
aWxsIGJlIHVzZWZ1bCwKKyAqICBidXQgV0lUSE9VVCBBTlkgV0FSUkFOVFk7IHdpdGhvdXQgZXZl
biB0aGUgaW1wbGllZCB3YXJyYW50eSBvZgorICogIE1FUkNIQU5UQUJJTElUWSBvciBGSVRORVNT
IEZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRS4gIFNlZSB0aGUKKyAqICBHTlUgR2VuZXJhbCBQdWJs
aWMgTGljZW5zZSBmb3IgbW9yZSBkZXRhaWxzLgorICoKKyAqICBZb3Ugc2hvdWxkIGhhdmUgcmVj
ZWl2ZWQgYSBjb3B5IG9mIHRoZSBHTlUgR2VuZXJhbCBQdWJsaWMgTGljZW5zZQorICogIGFsb25n
IHdpdGggdGhpcyBwcm9ncmFtOyBpZiBub3QsIHNlZSA8aHR0cDovL3d3dy5nbnUub3JnL2xpY2Vu
c2VzLz4uCisgKi8KKworI2luY2x1ZGUgPHN0cmluZy5oPgorI2luY2x1ZGUgInJlZ19maWVsZHMu
aCIKKworcmVnX2ZpZWxkX3QgcmVnX2ZpZWxkX2luZm9bXSA9IHsKKyNkZWZpbmUgREVGX1JFR19G
SUVMRChUQUcsIE5BTUUsIFNUQVJULCBXSURUSCwgREVTQ1JJUFRJT04pICAgIFwKKyAgICAgIHtO
QU1FLCBTVEFSVCwgV0lEVEgsIERFU0NSSVBUSU9OfSwKKyNpbmNsdWRlICJyZWdfZmllbGRzX2Rl
Zi5oIgorICAgICAge05VTEwsIDAsIDB9CisjdW5kZWYgREVGX1JFR19GSUVMRAorfTsKKwpkaWZm
IC0tZ2l0IGEvdGFyZ2V0L2hleGFnb24vcmVnX2ZpZWxkcy5oIGIvdGFyZ2V0L2hleGFnb24vcmVn
X2ZpZWxkcy5oCm5ldyBmaWxlIG1vZGUgMTAwNjQ0CmluZGV4IDAwMDAwMDAuLjc5ODU3YzUKLS0t
IC9kZXYvbnVsbAorKysgYi90YXJnZXQvaGV4YWdvbi9yZWdfZmllbGRzLmgKQEAgLTAsMCArMSw0
MCBAQAorLyoKKyAqICBDb3B5cmlnaHQgKGMpIDIwMTkgUXVhbGNvbW0gSW5ub3ZhdGlvbiBDZW50
ZXIsIEluYy4gQWxsIFJpZ2h0cyBSZXNlcnZlZC4KKyAqCisgKiAgVGhpcyBwcm9ncmFtIGlzIGZy
ZWUgc29mdHdhcmU7IHlvdSBjYW4gcmVkaXN0cmlidXRlIGl0IGFuZC9vciBtb2RpZnkKKyAqICBp
dCB1bmRlciB0aGUgdGVybXMgb2YgdGhlIEdOVSBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlIGFzIHB1
Ymxpc2hlZCBieQorICogIHRoZSBGcmVlIFNvZnR3YXJlIEZvdW5kYXRpb247IGVpdGhlciB2ZXJz
aW9uIDIgb2YgdGhlIExpY2Vuc2UsIG9yCisgKiAgKGF0IHlvdXIgb3B0aW9uKSBhbnkgbGF0ZXIg
dmVyc2lvbi4KKyAqCisgKiAgVGhpcyBwcm9ncmFtIGlzIGRpc3RyaWJ1dGVkIGluIHRoZSBob3Bl
IHRoYXQgaXQgd2lsbCBiZSB1c2VmdWwsCisgKiAgYnV0IFdJVEhPVVQgQU5ZIFdBUlJBTlRZOyB3
aXRob3V0IGV2ZW4gdGhlIGltcGxpZWQgd2FycmFudHkgb2YKKyAqICBNRVJDSEFOVEFCSUxJVFkg
b3IgRklUTkVTUyBGT1IgQSBQQVJUSUNVTEFSIFBVUlBPU0UuICBTZWUgdGhlCisgKiAgR05VIEdl
bmVyYWwgUHVibGljIExpY2Vuc2UgZm9yIG1vcmUgZGV0YWlscy4KKyAqCisgKiAgWW91IHNob3Vs
ZCBoYXZlIHJlY2VpdmVkIGEgY29weSBvZiB0aGUgR05VIEdlbmVyYWwgUHVibGljIExpY2Vuc2UK
KyAqICBhbG9uZyB3aXRoIHRoaXMgcHJvZ3JhbTsgaWYgbm90LCBzZWUgPGh0dHA6Ly93d3cuZ251
Lm9yZy9saWNlbnNlcy8+LgorICovCisKKyNpZm5kZWYgUkVHU19ICisjZGVmaW5lIFJFR1NfSAor
CisjZGVmaW5lIE5VTV9HRU5fUkVHUyAzMgorCit0eXBlZGVmIHN0cnVjdCB7CisgICAgY29uc3Qg
Y2hhciAqbmFtZTsKKyAgICBpbnQgb2Zmc2V0OworICAgIGludCB3aWR0aDsKKyAgICBjb25zdCBj
aGFyICpkZXNjcmlwdGlvbjsKK30gcmVnX2ZpZWxkX3Q7CisKK2V4dGVybiByZWdfZmllbGRfdCBy
ZWdfZmllbGRfaW5mb1tdOworCitlbnVtIHJlZ19maWVsZHNfZW51bSB7CisjZGVmaW5lIERFRl9S
RUdfRklFTEQoVEFHLCBOQU1FLCBTVEFSVCwgV0lEVEgsIERFU0NSSVBUSU9OKSBcCisgICAgVEFH
LAorI2luY2x1ZGUgInJlZ19maWVsZHNfZGVmLmgiCisgICAgTlVNX1JFR19GSUVMRFMKKyN1bmRl
ZiBERUZfUkVHX0ZJRUxECit9OworCisjZW5kaWYKZGlmZiAtLWdpdCBhL3RhcmdldC9oZXhhZ29u
L3JlZ19maWVsZHNfZGVmLmggYi90YXJnZXQvaGV4YWdvbi9yZWdfZmllbGRzX2RlZi5oCm5ldyBm
aWxlIG1vZGUgMTAwNjQ0CmluZGV4IDAwMDAwMDAuLjA5NWE3NzYKLS0tIC9kZXYvbnVsbAorKysg
Yi90YXJnZXQvaGV4YWdvbi9yZWdfZmllbGRzX2RlZi5oCkBAIC0wLDAgKzEsMTA5IEBACisvKgor
ICogIENvcHlyaWdodCAoYykgMjAxOSBRdWFsY29tbSBJbm5vdmF0aW9uIENlbnRlciwgSW5jLiBB
bGwgUmlnaHRzIFJlc2VydmVkLgorICoKKyAqICBUaGlzIHByb2dyYW0gaXMgZnJlZSBzb2Z0d2Fy
ZTsgeW91IGNhbiByZWRpc3RyaWJ1dGUgaXQgYW5kL29yIG1vZGlmeQorICogIGl0IHVuZGVyIHRo
ZSB0ZXJtcyBvZiB0aGUgR05VIEdlbmVyYWwgUHVibGljIExpY2Vuc2UgYXMgcHVibGlzaGVkIGJ5
CisgKiAgdGhlIEZyZWUgU29mdHdhcmUgRm91bmRhdGlvbjsgZWl0aGVyIHZlcnNpb24gMiBvZiB0
aGUgTGljZW5zZSwgb3IKKyAqICAoYXQgeW91ciBvcHRpb24pIGFueSBsYXRlciB2ZXJzaW9uLgor
ICoKKyAqICBUaGlzIHByb2dyYW0gaXMgZGlzdHJpYnV0ZWQgaW4gdGhlIGhvcGUgdGhhdCBpdCB3
aWxsIGJlIHVzZWZ1bCwKKyAqICBidXQgV0lUSE9VVCBBTlkgV0FSUkFOVFk7IHdpdGhvdXQgZXZl
biB0aGUgaW1wbGllZCB3YXJyYW50eSBvZgorICogIE1FUkNIQU5UQUJJTElUWSBvciBGSVRORVNT
IEZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRS4gIFNlZSB0aGUKKyAqICBHTlUgR2VuZXJhbCBQdWJs
aWMgTGljZW5zZSBmb3IgbW9yZSBkZXRhaWxzLgorICoKKyAqICBZb3Ugc2hvdWxkIGhhdmUgcmVj
ZWl2ZWQgYSBjb3B5IG9mIHRoZSBHTlUgR2VuZXJhbCBQdWJsaWMgTGljZW5zZQorICogIGFsb25n
IHdpdGggdGhpcyBwcm9ncmFtOyBpZiBub3QsIHNlZSA8aHR0cDovL3d3dy5nbnUub3JnL2xpY2Vu
c2VzLz4uCisgKi8KKworLyoKKyAqIEZvciByZWdpc3RlcnMgdGhhdCBoYXZlIGluZGl2aWR1YWwg
ZmllbGRzLCBleHBsYWluIHRoZW0gaGVyZQorICogICBERUZfUkVHX0ZJRUxEKHRhZywKKyAqICAg
ICAgICAgICAgICAgICBuYW1lLAorICogICAgICAgICAgICAgICAgIGJpdCBzdGFydCBvZmZzZXQs
CisgKiAgICAgICAgICAgICAgICAgd2lkdGgsCisgKiAgICAgICAgICAgICAgICAgZGVzY3JpcHRp
b24KKyAqLworCisvKiBVU1IgZmllbGRzICovCitERUZfUkVHX0ZJRUxEKFVTUl9PVkYsCisgICAg
Im92ZiIsIDAsIDEsCisgICAgIlN0aWNreSBTYXR1cmF0aW9uIE92ZXJmbG93IC0gIgorICAgICJT
ZXQgd2hlbiBzYXR1cmF0aW9uIG9jY3VycyB3aGlsZSBleGVjdXRpbmcgaW5zdHJ1Y3Rpb24gdGhh
dCBzcGVjaWZpZXMgIgorICAgICJvcHRpb25hbCBzYXR1cmF0aW9uLCByZW1haW5zIHNldCB1bnRp
bCBleHBsaWNpdGx5IGNsZWFyZWQgYnkgYSBVU1I9UnMgIgorICAgICJpbnN0cnVjdGlvbi4iKQor
REVGX1JFR19GSUVMRChVU1JfRlBJTlZGLAorICAgICJmcGludmYiLCAxLCAxLAorICAgICJGbG9h
dGluZy1wb2ludCBJRUVFIEludmFsaWQgU3RpY2t5IEZsYWcuIikKK0RFRl9SRUdfRklFTEQoVVNS
X0ZQREJaRiwKKyAgICAiZnBkYnpmIiwgMiwgMSwKKyAgICAiRmxvYXRpbmctcG9pbnQgSUVFRSBE
aXZpZGUtQnktWmVybyBTdGlja3kgRmxhZy4iKQorREVGX1JFR19GSUVMRChVU1JfRlBPVkZGLAor
ICAgICJmcG92ZmYiLCAzLCAxLAorICAgICJGbG9hdGluZy1wb2ludCBJRUVFIE92ZXJmbG93IFN0
aWNreSBGbGFnLiIpCitERUZfUkVHX0ZJRUxEKFVTUl9GUFVORkYsCisgICAgImZwdW5mZiIsIDQs
IDEsCisgICAgIkZsb2F0aW5nLXBvaW50IElFRUUgVW5kZXJmbG93IFN0aWNreSBGbGFnLiIpCitE
RUZfUkVHX0ZJRUxEKFVTUl9GUElOUEYsCisgICAgImZwaW5wZiIsIDUsIDEsCisgICAgIkZsb2F0
aW5nLXBvaW50IElFRUUgSW5leGFjdCBTdGlja3kgRmxhZy4iKQorCitERUZfUkVHX0ZJRUxEKFVT
Ul9MUENGRywKKyAgICAibHBjZmciLCA4LCAyLAorICAgICJIYXJkd2FyZSBMb29wIENvbmZpZ3Vy
YXRpb246ICIKKyAgICAiTnVtYmVyIG9mIGxvb3AgaXRlcmF0aW9ucyAoMC0zKSByZW1haW5pbmcg
YmVmb3JlIHBpcGVsaW5lIHByZWRpY2F0ZSAiCisgICAgInNob3VsZCBiZSBzZXQuIikKK0RFRl9S
RUdfRklFTEQoVVNSX1BLVENOVF9VLAorICAgICJwa3RjbnRfdSIsIDEwLCAxLAorICAgICJFbmFi
bGUgcGFja2V0IGNvdW50aW5nIGluIFVzZXIgbW9kZS4iKQorREVGX1JFR19GSUVMRChVU1JfUEtU
Q05UX0csCisgICAgInBrdGNudF9nIiwgMTEsIDEsCisgICAgIkVuYWJsZSBwYWNrZXQgY291bnRp
bmcgaW4gR3Vlc3QgbW9kZS4iKQorREVGX1JFR19GSUVMRChVU1JfUEtUQ05UX00sCisgICAgInBr
dGNudF9tIiwgMTIsIDEsCisgICAgIkVuYWJsZSBwYWNrZXQgY291bnRpbmcgaW4gTW9uaXRvciBt
b2RlLiIpCitERUZfUkVHX0ZJRUxEKFVTUl9IRkQsCisgICAgImhmZCIsIDEzLCAyLAorICAgICJU
d28gYml0cyB0aGF0IGxldCB0aGUgdXNlciBjb250cm9sIHRoZSBhbW91bnQgb2YgTDEgaGFyZHdh
cmUgZGF0YSBjYWNoZSAiCisgICAgInByZWZldGNoaW5nICh1cCB0byA0IGNhY2hlIGxpbmVzKTog
IgorICAgICIwMDogTm8gcHJlZmV0Y2hpbmcsICIKKyAgICAiMDE6IFByZWZldGNoIExvYWRzIHdp
dGggcG9zdC11cGRhdGluZyBhZGRyZXNzIG1vZGUgd2hlbiBleGVjdXRpb24gaXMgIgorICAgICAg
ICAid2l0aGluIGEgaGFyZHdhcmUgbG9vcCwgIgorICAgICIxMDogUHJlZmV0Y2ggYW55IGhhcmR3
YXJlLWRldGVjdGVkIHN0cmlkaW5nIExvYWQgd2hlbiBleGVjdXRpb24gaXMgd2l0aGluICIKKyAg
ICAgICAgImEgaGFyZHdhcmUgbG9vcCwgIgorICAgICIxMTogUHJlZmV0Y2ggYW55IGhhcmR3YXJl
LWRldGVjdGVkIHN0cmlkaW5nIExvYWQuIikKK0RFRl9SRUdfRklFTEQoVVNSX0hGSSwKKyAgICAi
aGZpIiwgMTUsIDIsCisgICAgIlR3byBiaXRzIHRoYXQgbGV0IHRoZSB1c2VyIGNvbnRyb2wgdGhl
IGFtb3VudCBvZiBMMSBpbnN0cnVjdGlvbiBjYWNoZSAiCisgICAgInByZWZldGNoaW5nLiAiCisg
ICAgIjAwOiBObyBwcmVmZXRjaGluZywgIgorICAgICIwMTogQWxsb3cgcHJlZmV0Y2hpbmcgb2Yg
YXQgbW9zdCAxIGFkZGl0aW9uYWwgY2FjaGUgbGluZSwgIgorICAgICIxMDogQWxsb3cgcHJlZmV0
Y2hpbmcgb2YgYXQgbW9zdCAyIGFkZGl0aW9uYWwgY2FjaGUgbGluZXMuIikKKworREVGX1JFR19G
SUVMRChVU1JfRlBSTkQsCisgICAgImZwcm5kIiwgMjIsIDIsCisgICAgIlJvdW5kaW5nIE1vZGUg
Zm9yIEZsb2F0aW5nLVBvaW50IEluc3RydWN0aW9uczogIgorICAgICIwMDogUm91bmQgdG8gbmVh
cmVzdCwgdGllcyB0byBldmVuIChkZWZhdWx0KSwgIgorICAgICIwMTogVG93YXJkIHplcm8sICIK
KyAgICAiMTA6IERvd253YXJkICh0b3dhcmQgbmVnYXRpdmUgaW5maW5pdHkpLCAiCisgICAgIjEx
OiBVcHdhcmQgKHRvd2FyZCBwb3NpdGl2ZSBpbmZpbml0eSkuIikKKworREVGX1JFR19GSUVMRChV
U1JfRlBJTlZFLAorICAgICJmcGludmUiLCAyNSwgMSwKKyAgICAiRW5hYmxlIHRyYXAgb24gSUVF
RSBJbnZhbGlkLiIpCitERUZfUkVHX0ZJRUxEKFVTUl9GUERCWkUsCisgICAgImZwZGJ6ZSIsIDI2
LCAxLCAiRW5hYmxlIHRyYXAgb24gSUVFRSBEaXZpZGUtQnktWmVyby4iKQorREVGX1JFR19GSUVM
RChVU1JfRlBPVkZFLAorICAgICJmcG92ZmUiLCAyNywgMSwKKyAgICAiRW5hYmxlIHRyYXAgb24g
SUVFRSBPdmVyZmxvdy4iKQorREVGX1JFR19GSUVMRChVU1JfRlBVTkZFLAorICAgICJmcHVuZmUi
LCAyOCwgMSwKKyAgICAiRW5hYmxlIHRyYXAgb24gSUVFRSBVbmRlcmZsb3cuIikKK0RFRl9SRUdf
RklFTEQoVVNSX0ZQSU5QRSwKKyAgICAiZnBpbnBlIiwgMjksIDEsCisgICAgIkVuYWJsZSB0cmFw
IG9uIElFRUUgSW5leGFjdC4iKQorREVGX1JFR19GSUVMRChVU1JfUEZBLAorICAgICJwZmEiLCAz
MSwgMSwKKyAgICAiTDIgUHJlZmV0Y2ggQWN0aXZlOiBTZXQgd2hlbiBub24tYmxvY2tpbmcgbDJm
ZXRjaCBpbnN0cnVjdGlvbiBpcyAiCisgICAgInByZWZldGNoaW5nIHJlcXVlc3RlZCBkYXRhLCBy
ZW1haW5zIHNldCB1bnRpbCBsMmZldGNoIHByZWZldGNoIG9wZXJhdGlvbiAiCisgICAgImlzIGNv
bXBsZXRlZCAob3Igbm90IGFjdGl2ZSkuIikgLyogcmVhZC1vbmx5ICovCisKLS0gCjIuNy40Cgo=

